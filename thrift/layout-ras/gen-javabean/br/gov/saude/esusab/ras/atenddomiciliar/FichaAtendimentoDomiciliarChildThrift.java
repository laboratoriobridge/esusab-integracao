/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.atenddomiciliar;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-07")
public class FichaAtendimentoDomiciliarChildThrift implements org.apache.thrift.TBase<FichaAtendimentoDomiciliarChildThrift, FichaAtendimentoDomiciliarChildThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaAtendimentoDomiciliarChildThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAtendimentoDomiciliarChildThrift");

  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CNS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCidadao", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimento", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField LOCAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("localAtendimento", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarModalidade", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField TIPO_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoAtendimento", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField CONDICOES_AVALIADAS_FIELD_DESC = new org.apache.thrift.protocol.TField("condicoesAvaliadas", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField PROCEDIMENTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("procedimentos", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField CONDUTA_DESFECHO_FIELD_DESC = new org.apache.thrift.protocol.TField("condutaDesfecho", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField PROBLEMAS_CONDICOES_FIELD_DESC = new org.apache.thrift.protocol.TField("problemasCondicoes", org.apache.thrift.protocol.TType.LIST, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAtendimentoDomiciliarChildThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAtendimentoDomiciliarChildThriftTupleSchemeFactory());
  }

  private long turno; // optional
  private String cnsCidadao; // optional
  private long dataNascimento; // optional
  private long sexo; // optional
  private long localAtendimento; // optional
  private long atencaoDomiciliarModalidade; // optional
  private long tipoAtendimento; // optional
  private List<Long> condicoesAvaliadas; // optional
  private List<String> procedimentos; // optional
  private long condutaDesfecho; // optional
  private String cpfCidadao; // optional
  private List<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift> problemasCondicoes; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TURNO((short)1, "turno"),
    CNS_CIDADAO((short)2, "cnsCidadao"),
    DATA_NASCIMENTO((short)3, "dataNascimento"),
    SEXO((short)4, "sexo"),
    LOCAL_ATENDIMENTO((short)5, "localAtendimento"),
    ATENCAO_DOMICILIAR_MODALIDADE((short)6, "atencaoDomiciliarModalidade"),
    TIPO_ATENDIMENTO((short)7, "tipoAtendimento"),
    CONDICOES_AVALIADAS((short)8, "condicoesAvaliadas"),
    PROCEDIMENTOS((short)11, "procedimentos"),
    CONDUTA_DESFECHO((short)13, "condutaDesfecho"),
    CPF_CIDADAO((short)15, "cpfCidadao"),
    PROBLEMAS_CONDICOES((short)16, "problemasCondicoes");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TURNO
          return TURNO;
        case 2: // CNS_CIDADAO
          return CNS_CIDADAO;
        case 3: // DATA_NASCIMENTO
          return DATA_NASCIMENTO;
        case 4: // SEXO
          return SEXO;
        case 5: // LOCAL_ATENDIMENTO
          return LOCAL_ATENDIMENTO;
        case 6: // ATENCAO_DOMICILIAR_MODALIDADE
          return ATENCAO_DOMICILIAR_MODALIDADE;
        case 7: // TIPO_ATENDIMENTO
          return TIPO_ATENDIMENTO;
        case 8: // CONDICOES_AVALIADAS
          return CONDICOES_AVALIADAS;
        case 11: // PROCEDIMENTOS
          return PROCEDIMENTOS;
        case 13: // CONDUTA_DESFECHO
          return CONDUTA_DESFECHO;
        case 15: // CPF_CIDADAO
          return CPF_CIDADAO;
        case 16: // PROBLEMAS_CONDICOES
          return PROBLEMAS_CONDICOES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TURNO_ISSET_ID = 0;
  private static final int __DATANASCIMENTO_ISSET_ID = 1;
  private static final int __SEXO_ISSET_ID = 2;
  private static final int __LOCALATENDIMENTO_ISSET_ID = 3;
  private static final int __ATENCAODOMICILIARMODALIDADE_ISSET_ID = 4;
  private static final int __TIPOATENDIMENTO_ISSET_ID = 5;
  private static final int __CONDUTADESFECHO_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TURNO,_Fields.CNS_CIDADAO,_Fields.DATA_NASCIMENTO,_Fields.SEXO,_Fields.LOCAL_ATENDIMENTO,_Fields.ATENCAO_DOMICILIAR_MODALIDADE,_Fields.TIPO_ATENDIMENTO,_Fields.CONDICOES_AVALIADAS,_Fields.PROCEDIMENTOS,_Fields.CONDUTA_DESFECHO,_Fields.CPF_CIDADAO,_Fields.PROBLEMAS_CONDICOES};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CNS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cnsCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("localAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_MODALIDADE, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarModalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIPO_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("tipoAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONDICOES_AVALIADAS, new org.apache.thrift.meta_data.FieldMetaData("condicoesAvaliadas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PROCEDIMENTOS, new org.apache.thrift.meta_data.FieldMetaData("procedimentos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CONDUTA_DESFECHO, new org.apache.thrift.meta_data.FieldMetaData("condutaDesfecho", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROBLEMAS_CONDICOES, new org.apache.thrift.meta_data.FieldMetaData("problemasCondicoes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAtendimentoDomiciliarChildThrift.class, metaDataMap);
  }

  public FichaAtendimentoDomiciliarChildThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAtendimentoDomiciliarChildThrift(FichaAtendimentoDomiciliarChildThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.turno = other.turno;
    if (other.isSetCnsCidadao()) {
      this.cnsCidadao = other.cnsCidadao;
    }
    this.dataNascimento = other.dataNascimento;
    this.sexo = other.sexo;
    this.localAtendimento = other.localAtendimento;
    this.atencaoDomiciliarModalidade = other.atencaoDomiciliarModalidade;
    this.tipoAtendimento = other.tipoAtendimento;
    if (other.isSetCondicoesAvaliadas()) {
      List<Long> __this__condicoesAvaliadas = new ArrayList<Long>(other.condicoesAvaliadas);
      this.condicoesAvaliadas = __this__condicoesAvaliadas;
    }
    if (other.isSetProcedimentos()) {
      List<String> __this__procedimentos = new ArrayList<String>(other.procedimentos);
      this.procedimentos = __this__procedimentos;
    }
    this.condutaDesfecho = other.condutaDesfecho;
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
    if (other.isSetProblemasCondicoes()) {
      List<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift> __this__problemasCondicoes = new ArrayList<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift>(other.problemasCondicoes.size());
      for (br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift other_element : other.problemasCondicoes) {
        __this__problemasCondicoes.add(new br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift(other_element));
      }
      this.problemasCondicoes = __this__problemasCondicoes;
    }
  }

  public FichaAtendimentoDomiciliarChildThrift deepCopy() {
    return new FichaAtendimentoDomiciliarChildThrift(this);
  }

  @Override
  public void clear() {
    setTurnoIsSet(false);
    this.turno = 0;
    this.cnsCidadao = null;
    setDataNascimentoIsSet(false);
    this.dataNascimento = 0;
    setSexoIsSet(false);
    this.sexo = 0;
    setLocalAtendimentoIsSet(false);
    this.localAtendimento = 0;
    setAtencaoDomiciliarModalidadeIsSet(false);
    this.atencaoDomiciliarModalidade = 0;
    setTipoAtendimentoIsSet(false);
    this.tipoAtendimento = 0;
    this.condicoesAvaliadas = null;
    this.procedimentos = null;
    setCondutaDesfechoIsSet(false);
    this.condutaDesfecho = 0;
    this.cpfCidadao = null;
    this.problemasCondicoes = null;
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public String getCnsCidadao() {
    return this.cnsCidadao;
  }

  public void setCnsCidadao(String cnsCidadao) {
    this.cnsCidadao = cnsCidadao;
  }

  public void unsetCnsCidadao() {
    this.cnsCidadao = null;
  }

  /** Returns true if field cnsCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCidadao() {
    return this.cnsCidadao != null;
  }

  public void setCnsCidadaoIsSet(boolean value) {
    if (!value) {
      this.cnsCidadao = null;
    }
  }

  public long getDataNascimento() {
    return this.dataNascimento;
  }

  public void setDataNascimento(long dataNascimento) {
    this.dataNascimento = dataNascimento;
    setDataNascimentoIsSet(true);
  }

  public void unsetDataNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dataNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  public void setDataNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID, value);
  }

  public long getSexo() {
    return this.sexo;
  }

  public void setSexo(long sexo) {
    this.sexo = sexo;
    setSexoIsSet(true);
  }

  public void unsetSexo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  public void setSexoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXO_ISSET_ID, value);
  }

  public long getLocalAtendimento() {
    return this.localAtendimento;
  }

  public void setLocalAtendimento(long localAtendimento) {
    this.localAtendimento = localAtendimento;
    setLocalAtendimentoIsSet(true);
  }

  public void unsetLocalAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field localAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID);
  }

  public void setLocalAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID, value);
  }

  public long getAtencaoDomiciliarModalidade() {
    return this.atencaoDomiciliarModalidade;
  }

  public void setAtencaoDomiciliarModalidade(long atencaoDomiciliarModalidade) {
    this.atencaoDomiciliarModalidade = atencaoDomiciliarModalidade;
    setAtencaoDomiciliarModalidadeIsSet(true);
  }

  public void unsetAtencaoDomiciliarModalidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarModalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarModalidade() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  public void setAtencaoDomiciliarModalidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID, value);
  }

  public long getTipoAtendimento() {
    return this.tipoAtendimento;
  }

  public void setTipoAtendimento(long tipoAtendimento) {
    this.tipoAtendimento = tipoAtendimento;
    setTipoAtendimentoIsSet(true);
  }

  public void unsetTipoAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field tipoAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID);
  }

  public void setTipoAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID, value);
  }

  public int getCondicoesAvaliadasSize() {
    return (this.condicoesAvaliadas == null) ? 0 : this.condicoesAvaliadas.size();
  }

  public java.util.Iterator<Long> getCondicoesAvaliadasIterator() {
    return (this.condicoesAvaliadas == null) ? null : this.condicoesAvaliadas.iterator();
  }

  public void addToCondicoesAvaliadas(long elem) {
    if (this.condicoesAvaliadas == null) {
      this.condicoesAvaliadas = new ArrayList<Long>();
    }
    this.condicoesAvaliadas.add(elem);
  }

  public List<Long> getCondicoesAvaliadas() {
    return this.condicoesAvaliadas;
  }

  public void setCondicoesAvaliadas(List<Long> condicoesAvaliadas) {
    this.condicoesAvaliadas = condicoesAvaliadas;
  }

  public void unsetCondicoesAvaliadas() {
    this.condicoesAvaliadas = null;
  }

  /** Returns true if field condicoesAvaliadas is set (has been assigned a value) and false otherwise */
  public boolean isSetCondicoesAvaliadas() {
    return this.condicoesAvaliadas != null;
  }

  public void setCondicoesAvaliadasIsSet(boolean value) {
    if (!value) {
      this.condicoesAvaliadas = null;
    }
  }

  public int getProcedimentosSize() {
    return (this.procedimentos == null) ? 0 : this.procedimentos.size();
  }

  public java.util.Iterator<String> getProcedimentosIterator() {
    return (this.procedimentos == null) ? null : this.procedimentos.iterator();
  }

  public void addToProcedimentos(String elem) {
    if (this.procedimentos == null) {
      this.procedimentos = new ArrayList<String>();
    }
    this.procedimentos.add(elem);
  }

  public List<String> getProcedimentos() {
    return this.procedimentos;
  }

  public void setProcedimentos(List<String> procedimentos) {
    this.procedimentos = procedimentos;
  }

  public void unsetProcedimentos() {
    this.procedimentos = null;
  }

  /** Returns true if field procedimentos is set (has been assigned a value) and false otherwise */
  public boolean isSetProcedimentos() {
    return this.procedimentos != null;
  }

  public void setProcedimentosIsSet(boolean value) {
    if (!value) {
      this.procedimentos = null;
    }
  }

  public long getCondutaDesfecho() {
    return this.condutaDesfecho;
  }

  public void setCondutaDesfecho(long condutaDesfecho) {
    this.condutaDesfecho = condutaDesfecho;
    setCondutaDesfechoIsSet(true);
  }

  public void unsetCondutaDesfecho() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONDUTADESFECHO_ISSET_ID);
  }

  /** Returns true if field condutaDesfecho is set (has been assigned a value) and false otherwise */
  public boolean isSetCondutaDesfecho() {
    return EncodingUtils.testBit(__isset_bitfield, __CONDUTADESFECHO_ISSET_ID);
  }

  public void setCondutaDesfechoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONDUTADESFECHO_ISSET_ID, value);
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public int getProblemasCondicoesSize() {
    return (this.problemasCondicoes == null) ? 0 : this.problemasCondicoes.size();
  }

  public java.util.Iterator<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift> getProblemasCondicoesIterator() {
    return (this.problemasCondicoes == null) ? null : this.problemasCondicoes.iterator();
  }

  public void addToProblemasCondicoes(br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift elem) {
    if (this.problemasCondicoes == null) {
      this.problemasCondicoes = new ArrayList<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift>();
    }
    this.problemasCondicoes.add(elem);
  }

  public List<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift> getProblemasCondicoes() {
    return this.problemasCondicoes;
  }

  public void setProblemasCondicoes(List<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift> problemasCondicoes) {
    this.problemasCondicoes = problemasCondicoes;
  }

  public void unsetProblemasCondicoes() {
    this.problemasCondicoes = null;
  }

  /** Returns true if field problemasCondicoes is set (has been assigned a value) and false otherwise */
  public boolean isSetProblemasCondicoes() {
    return this.problemasCondicoes != null;
  }

  public void setProblemasCondicoesIsSet(boolean value) {
    if (!value) {
      this.problemasCondicoes = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case CNS_CIDADAO:
      if (value == null) {
        unsetCnsCidadao();
      } else {
        setCnsCidadao((String)value);
      }
      break;

    case DATA_NASCIMENTO:
      if (value == null) {
        unsetDataNascimento();
      } else {
        setDataNascimento((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((Long)value);
      }
      break;

    case LOCAL_ATENDIMENTO:
      if (value == null) {
        unsetLocalAtendimento();
      } else {
        setLocalAtendimento((Long)value);
      }
      break;

    case ATENCAO_DOMICILIAR_MODALIDADE:
      if (value == null) {
        unsetAtencaoDomiciliarModalidade();
      } else {
        setAtencaoDomiciliarModalidade((Long)value);
      }
      break;

    case TIPO_ATENDIMENTO:
      if (value == null) {
        unsetTipoAtendimento();
      } else {
        setTipoAtendimento((Long)value);
      }
      break;

    case CONDICOES_AVALIADAS:
      if (value == null) {
        unsetCondicoesAvaliadas();
      } else {
        setCondicoesAvaliadas((List<Long>)value);
      }
      break;

    case PROCEDIMENTOS:
      if (value == null) {
        unsetProcedimentos();
      } else {
        setProcedimentos((List<String>)value);
      }
      break;

    case CONDUTA_DESFECHO:
      if (value == null) {
        unsetCondutaDesfecho();
      } else {
        setCondutaDesfecho((Long)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    case PROBLEMAS_CONDICOES:
      if (value == null) {
        unsetProblemasCondicoes();
      } else {
        setProblemasCondicoes((List<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TURNO:
      return getTurno();

    case CNS_CIDADAO:
      return getCnsCidadao();

    case DATA_NASCIMENTO:
      return getDataNascimento();

    case SEXO:
      return getSexo();

    case LOCAL_ATENDIMENTO:
      return getLocalAtendimento();

    case ATENCAO_DOMICILIAR_MODALIDADE:
      return getAtencaoDomiciliarModalidade();

    case TIPO_ATENDIMENTO:
      return getTipoAtendimento();

    case CONDICOES_AVALIADAS:
      return getCondicoesAvaliadas();

    case PROCEDIMENTOS:
      return getProcedimentos();

    case CONDUTA_DESFECHO:
      return getCondutaDesfecho();

    case CPF_CIDADAO:
      return getCpfCidadao();

    case PROBLEMAS_CONDICOES:
      return getProblemasCondicoes();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TURNO:
      return isSetTurno();
    case CNS_CIDADAO:
      return isSetCnsCidadao();
    case DATA_NASCIMENTO:
      return isSetDataNascimento();
    case SEXO:
      return isSetSexo();
    case LOCAL_ATENDIMENTO:
      return isSetLocalAtendimento();
    case ATENCAO_DOMICILIAR_MODALIDADE:
      return isSetAtencaoDomiciliarModalidade();
    case TIPO_ATENDIMENTO:
      return isSetTipoAtendimento();
    case CONDICOES_AVALIADAS:
      return isSetCondicoesAvaliadas();
    case PROCEDIMENTOS:
      return isSetProcedimentos();
    case CONDUTA_DESFECHO:
      return isSetCondutaDesfecho();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    case PROBLEMAS_CONDICOES:
      return isSetProblemasCondicoes();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAtendimentoDomiciliarChildThrift)
      return this.equals((FichaAtendimentoDomiciliarChildThrift)that);
    return false;
  }

  public boolean equals(FichaAtendimentoDomiciliarChildThrift that) {
    if (that == null)
      return false;

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_cnsCidadao = true && this.isSetCnsCidadao();
    boolean that_present_cnsCidadao = true && that.isSetCnsCidadao();
    if (this_present_cnsCidadao || that_present_cnsCidadao) {
      if (!(this_present_cnsCidadao && that_present_cnsCidadao))
        return false;
      if (!this.cnsCidadao.equals(that.cnsCidadao))
        return false;
    }

    boolean this_present_dataNascimento = true && this.isSetDataNascimento();
    boolean that_present_dataNascimento = true && that.isSetDataNascimento();
    if (this_present_dataNascimento || that_present_dataNascimento) {
      if (!(this_present_dataNascimento && that_present_dataNascimento))
        return false;
      if (this.dataNascimento != that.dataNascimento)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (this.sexo != that.sexo)
        return false;
    }

    boolean this_present_localAtendimento = true && this.isSetLocalAtendimento();
    boolean that_present_localAtendimento = true && that.isSetLocalAtendimento();
    if (this_present_localAtendimento || that_present_localAtendimento) {
      if (!(this_present_localAtendimento && that_present_localAtendimento))
        return false;
      if (this.localAtendimento != that.localAtendimento)
        return false;
    }

    boolean this_present_atencaoDomiciliarModalidade = true && this.isSetAtencaoDomiciliarModalidade();
    boolean that_present_atencaoDomiciliarModalidade = true && that.isSetAtencaoDomiciliarModalidade();
    if (this_present_atencaoDomiciliarModalidade || that_present_atencaoDomiciliarModalidade) {
      if (!(this_present_atencaoDomiciliarModalidade && that_present_atencaoDomiciliarModalidade))
        return false;
      if (this.atencaoDomiciliarModalidade != that.atencaoDomiciliarModalidade)
        return false;
    }

    boolean this_present_tipoAtendimento = true && this.isSetTipoAtendimento();
    boolean that_present_tipoAtendimento = true && that.isSetTipoAtendimento();
    if (this_present_tipoAtendimento || that_present_tipoAtendimento) {
      if (!(this_present_tipoAtendimento && that_present_tipoAtendimento))
        return false;
      if (this.tipoAtendimento != that.tipoAtendimento)
        return false;
    }

    boolean this_present_condicoesAvaliadas = true && this.isSetCondicoesAvaliadas();
    boolean that_present_condicoesAvaliadas = true && that.isSetCondicoesAvaliadas();
    if (this_present_condicoesAvaliadas || that_present_condicoesAvaliadas) {
      if (!(this_present_condicoesAvaliadas && that_present_condicoesAvaliadas))
        return false;
      if (!this.condicoesAvaliadas.equals(that.condicoesAvaliadas))
        return false;
    }

    boolean this_present_procedimentos = true && this.isSetProcedimentos();
    boolean that_present_procedimentos = true && that.isSetProcedimentos();
    if (this_present_procedimentos || that_present_procedimentos) {
      if (!(this_present_procedimentos && that_present_procedimentos))
        return false;
      if (!this.procedimentos.equals(that.procedimentos))
        return false;
    }

    boolean this_present_condutaDesfecho = true && this.isSetCondutaDesfecho();
    boolean that_present_condutaDesfecho = true && that.isSetCondutaDesfecho();
    if (this_present_condutaDesfecho || that_present_condutaDesfecho) {
      if (!(this_present_condutaDesfecho && that_present_condutaDesfecho))
        return false;
      if (this.condutaDesfecho != that.condutaDesfecho)
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    boolean this_present_problemasCondicoes = true && this.isSetProblemasCondicoes();
    boolean that_present_problemasCondicoes = true && that.isSetProblemasCondicoes();
    if (this_present_problemasCondicoes || that_present_problemasCondicoes) {
      if (!(this_present_problemasCondicoes && that_present_problemasCondicoes))
        return false;
      if (!this.problemasCondicoes.equals(that.problemasCondicoes))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_turno = true && (isSetTurno());
    list.add(present_turno);
    if (present_turno)
      list.add(turno);

    boolean present_cnsCidadao = true && (isSetCnsCidadao());
    list.add(present_cnsCidadao);
    if (present_cnsCidadao)
      list.add(cnsCidadao);

    boolean present_dataNascimento = true && (isSetDataNascimento());
    list.add(present_dataNascimento);
    if (present_dataNascimento)
      list.add(dataNascimento);

    boolean present_sexo = true && (isSetSexo());
    list.add(present_sexo);
    if (present_sexo)
      list.add(sexo);

    boolean present_localAtendimento = true && (isSetLocalAtendimento());
    list.add(present_localAtendimento);
    if (present_localAtendimento)
      list.add(localAtendimento);

    boolean present_atencaoDomiciliarModalidade = true && (isSetAtencaoDomiciliarModalidade());
    list.add(present_atencaoDomiciliarModalidade);
    if (present_atencaoDomiciliarModalidade)
      list.add(atencaoDomiciliarModalidade);

    boolean present_tipoAtendimento = true && (isSetTipoAtendimento());
    list.add(present_tipoAtendimento);
    if (present_tipoAtendimento)
      list.add(tipoAtendimento);

    boolean present_condicoesAvaliadas = true && (isSetCondicoesAvaliadas());
    list.add(present_condicoesAvaliadas);
    if (present_condicoesAvaliadas)
      list.add(condicoesAvaliadas);

    boolean present_procedimentos = true && (isSetProcedimentos());
    list.add(present_procedimentos);
    if (present_procedimentos)
      list.add(procedimentos);

    boolean present_condutaDesfecho = true && (isSetCondutaDesfecho());
    list.add(present_condutaDesfecho);
    if (present_condutaDesfecho)
      list.add(condutaDesfecho);

    boolean present_cpfCidadao = true && (isSetCpfCidadao());
    list.add(present_cpfCidadao);
    if (present_cpfCidadao)
      list.add(cpfCidadao);

    boolean present_problemasCondicoes = true && (isSetProblemasCondicoes());
    list.add(present_problemasCondicoes);
    if (present_problemasCondicoes)
      list.add(problemasCondicoes);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaAtendimentoDomiciliarChildThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(other.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, other.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsCidadao()).compareTo(other.isSetCnsCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCidadao, other.cnsCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimento()).compareTo(other.isSetDataNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimento, other.dataNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(other.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, other.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalAtendimento()).compareTo(other.isSetLocalAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localAtendimento, other.localAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarModalidade()).compareTo(other.isSetAtencaoDomiciliarModalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarModalidade, other.atencaoDomiciliarModalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoAtendimento()).compareTo(other.isSetTipoAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoAtendimento, other.tipoAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondicoesAvaliadas()).compareTo(other.isSetCondicoesAvaliadas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondicoesAvaliadas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condicoesAvaliadas, other.condicoesAvaliadas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProcedimentos()).compareTo(other.isSetProcedimentos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcedimentos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.procedimentos, other.procedimentos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondutaDesfecho()).compareTo(other.isSetCondutaDesfecho());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondutaDesfecho()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condutaDesfecho, other.condutaDesfecho);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(other.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, other.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProblemasCondicoes()).compareTo(other.isSetProblemasCondicoes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProblemasCondicoes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.problemasCondicoes, other.problemasCondicoes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAtendimentoDomiciliarChildThrift(");
    boolean first = true;

    if (isSetTurno()) {
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetCnsCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cnsCidadao:");
      if (this.cnsCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCidadao);
      }
      first = false;
    }
    if (isSetDataNascimento()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimento:");
      sb.append(this.dataNascimento);
      first = false;
    }
    if (isSetSexo()) {
      if (!first) sb.append(", ");
      sb.append("sexo:");
      sb.append(this.sexo);
      first = false;
    }
    if (isSetLocalAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("localAtendimento:");
      sb.append(this.localAtendimento);
      first = false;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarModalidade:");
      sb.append(this.atencaoDomiciliarModalidade);
      first = false;
    }
    if (isSetTipoAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("tipoAtendimento:");
      sb.append(this.tipoAtendimento);
      first = false;
    }
    if (isSetCondicoesAvaliadas()) {
      if (!first) sb.append(", ");
      sb.append("condicoesAvaliadas:");
      if (this.condicoesAvaliadas == null) {
        sb.append("null");
      } else {
        sb.append(this.condicoesAvaliadas);
      }
      first = false;
    }
    if (isSetProcedimentos()) {
      if (!first) sb.append(", ");
      sb.append("procedimentos:");
      if (this.procedimentos == null) {
        sb.append("null");
      } else {
        sb.append(this.procedimentos);
      }
      first = false;
    }
    if (isSetCondutaDesfecho()) {
      if (!first) sb.append(", ");
      sb.append("condutaDesfecho:");
      sb.append(this.condutaDesfecho);
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    if (isSetProblemasCondicoes()) {
      if (!first) sb.append(", ");
      sb.append("problemasCondicoes:");
      if (this.problemasCondicoes == null) {
        sb.append("null");
      } else {
        sb.append(this.problemasCondicoes);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAtendimentoDomiciliarChildThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAtendimentoDomiciliarChildThriftStandardScheme getScheme() {
      return new FichaAtendimentoDomiciliarChildThriftStandardScheme();
    }
  }

  private static class FichaAtendimentoDomiciliarChildThriftStandardScheme extends StandardScheme<FichaAtendimentoDomiciliarChildThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAtendimentoDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CNS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCidadao = iprot.readString();
              struct.setCnsCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATA_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimento = iprot.readI64();
              struct.setDataNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexo = iprot.readI64();
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOCAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.localAtendimento = iprot.readI64();
              struct.setLocalAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ATENCAO_DOMICILIAR_MODALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarModalidade = iprot.readI64();
              struct.setAtencaoDomiciliarModalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TIPO_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoAtendimento = iprot.readI64();
              struct.setTipoAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CONDICOES_AVALIADAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.condicoesAvaliadas = new ArrayList<Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.condicoesAvaliadas.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCondicoesAvaliadasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PROCEDIMENTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.procedimentos = new ArrayList<String>(_list3.size);
                String _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readString();
                  struct.procedimentos.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setProcedimentosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CONDUTA_DESFECHO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.condutaDesfecho = iprot.readI64();
              struct.setCondutaDesfechoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PROBLEMAS_CONDICOES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.problemasCondicoes = new ArrayList<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift>(_list6.size);
                br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = new br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift();
                  _elem7.read(iprot);
                  struct.problemasCondicoes.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setProblemasCondicoesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAtendimentoDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.cnsCidadao != null) {
        if (struct.isSetCnsCidadao()) {
          oprot.writeFieldBegin(CNS_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cnsCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexo()) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI64(struct.sexo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLocalAtendimento()) {
        oprot.writeFieldBegin(LOCAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.localAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoAtendimento()) {
        oprot.writeFieldBegin(TIPO_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.tipoAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.condicoesAvaliadas != null) {
        if (struct.isSetCondicoesAvaliadas()) {
          oprot.writeFieldBegin(CONDICOES_AVALIADAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.condicoesAvaliadas.size()));
            for (long _iter9 : struct.condicoesAvaliadas)
            {
              oprot.writeI64(_iter9);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.procedimentos != null) {
        if (struct.isSetProcedimentos()) {
          oprot.writeFieldBegin(PROCEDIMENTOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.procedimentos.size()));
            for (String _iter10 : struct.procedimentos)
            {
              oprot.writeString(_iter10);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCondutaDesfecho()) {
        oprot.writeFieldBegin(CONDUTA_DESFECHO_FIELD_DESC);
        oprot.writeI64(struct.condutaDesfecho);
        oprot.writeFieldEnd();
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.problemasCondicoes != null) {
        if (struct.isSetProblemasCondicoes()) {
          oprot.writeFieldBegin(PROBLEMAS_CONDICOES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.problemasCondicoes.size()));
            for (br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift _iter11 : struct.problemasCondicoes)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAtendimentoDomiciliarChildThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAtendimentoDomiciliarChildThriftTupleScheme getScheme() {
      return new FichaAtendimentoDomiciliarChildThriftTupleScheme();
    }
  }

  private static class FichaAtendimentoDomiciliarChildThriftTupleScheme extends TupleScheme<FichaAtendimentoDomiciliarChildThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAtendimentoDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTurno()) {
        optionals.set(0);
      }
      if (struct.isSetCnsCidadao()) {
        optionals.set(1);
      }
      if (struct.isSetDataNascimento()) {
        optionals.set(2);
      }
      if (struct.isSetSexo()) {
        optionals.set(3);
      }
      if (struct.isSetLocalAtendimento()) {
        optionals.set(4);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        optionals.set(5);
      }
      if (struct.isSetTipoAtendimento()) {
        optionals.set(6);
      }
      if (struct.isSetCondicoesAvaliadas()) {
        optionals.set(7);
      }
      if (struct.isSetProcedimentos()) {
        optionals.set(8);
      }
      if (struct.isSetCondutaDesfecho()) {
        optionals.set(9);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(10);
      }
      if (struct.isSetProblemasCondicoes()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetCnsCidadao()) {
        oprot.writeString(struct.cnsCidadao);
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeI64(struct.dataNascimento);
      }
      if (struct.isSetSexo()) {
        oprot.writeI64(struct.sexo);
      }
      if (struct.isSetLocalAtendimento()) {
        oprot.writeI64(struct.localAtendimento);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
      }
      if (struct.isSetTipoAtendimento()) {
        oprot.writeI64(struct.tipoAtendimento);
      }
      if (struct.isSetCondicoesAvaliadas()) {
        {
          oprot.writeI32(struct.condicoesAvaliadas.size());
          for (long _iter12 : struct.condicoesAvaliadas)
          {
            oprot.writeI64(_iter12);
          }
        }
      }
      if (struct.isSetProcedimentos()) {
        {
          oprot.writeI32(struct.procedimentos.size());
          for (String _iter13 : struct.procedimentos)
          {
            oprot.writeString(_iter13);
          }
        }
      }
      if (struct.isSetCondutaDesfecho()) {
        oprot.writeI64(struct.condutaDesfecho);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
      if (struct.isSetProblemasCondicoes()) {
        {
          oprot.writeI32(struct.problemasCondicoes.size());
          for (br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift _iter14 : struct.problemasCondicoes)
          {
            _iter14.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAtendimentoDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cnsCidadao = iprot.readString();
        struct.setCnsCidadaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dataNascimento = iprot.readI64();
        struct.setDataNascimentoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.sexo = iprot.readI64();
        struct.setSexoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.localAtendimento = iprot.readI64();
        struct.setLocalAtendimentoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.atencaoDomiciliarModalidade = iprot.readI64();
        struct.setAtencaoDomiciliarModalidadeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.tipoAtendimento = iprot.readI64();
        struct.setTipoAtendimentoIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.condicoesAvaliadas = new ArrayList<Long>(_list15.size);
          long _elem16;
          for (int _i17 = 0; _i17 < _list15.size; ++_i17)
          {
            _elem16 = iprot.readI64();
            struct.condicoesAvaliadas.add(_elem16);
          }
        }
        struct.setCondicoesAvaliadasIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list18 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.procedimentos = new ArrayList<String>(_list18.size);
          String _elem19;
          for (int _i20 = 0; _i20 < _list18.size; ++_i20)
          {
            _elem19 = iprot.readString();
            struct.procedimentos.add(_elem19);
          }
        }
        struct.setProcedimentosIsSet(true);
      }
      if (incoming.get(9)) {
        struct.condutaDesfecho = iprot.readI64();
        struct.setCondutaDesfechoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TList _list21 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.problemasCondicoes = new ArrayList<br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift>(_list21.size);
          br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new br.gov.saude.esusab.ras.common.ProblemaCondicaoThrift();
            _elem22.read(iprot);
            struct.problemasCondicoes.add(_elem22);
          }
        }
        struct.setProblemasCondicoesIsSet(true);
      }
    }
  }

}

