/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.vacinacao;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-11")
public class VacinaRowThrift implements org.apache.thrift.TBase<VacinaRowThrift, VacinaRowThrift._Fields>, java.io.Serializable, Cloneable, Comparable<VacinaRowThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("VacinaRowThrift");

  private static final org.apache.thrift.protocol.TField IMUNOBIOLOGICO_FIELD_DESC = new org.apache.thrift.protocol.TField("imunobiologico", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ESTRATEGIA_VACINACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("estrategiaVacinacao", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField DOSE_FIELD_DESC = new org.apache.thrift.protocol.TField("dose", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField LOTE_FIELD_DESC = new org.apache.thrift.protocol.TField("lote", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField FABRICANTE_FIELD_DESC = new org.apache.thrift.protocol.TField("fabricante", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField GRUPO_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("grupoAtendimento", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField ST_REGISTRO_ANTERIOR_FIELD_DESC = new org.apache.thrift.protocol.TField("stRegistroAnterior", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField DATA_REGISTRO_ANTERIOR_FIELD_DESC = new org.apache.thrift.protocol.TField("dataRegistroAnterior", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField ST_APLICADO_EXTERIOR_FIELD_DESC = new org.apache.thrift.protocol.TField("stAplicadoExterior", org.apache.thrift.protocol.TType.BOOL, (short)9);
  private static final org.apache.thrift.protocol.TField UUID_RNDS_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidRnds", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CBO_PRESCRITOR_CODIGO2002_FIELD_DESC = new org.apache.thrift.protocol.TField("cboPrescritorCodigo2002", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CID10_MOTIVO_INDICACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10MotivoIndicacao", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField ST_PESQUISA_CLINICA_FIELD_DESC = new org.apache.thrift.protocol.TField("stPesquisaClinica", org.apache.thrift.protocol.TType.BOOL, (short)13);
  private static final org.apache.thrift.protocol.TField ANVISA_PROTOCOLO_ESTUDO_FIELD_DESC = new org.apache.thrift.protocol.TField("anvisaProtocoloEstudo", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField ANVISA_PROTOCOLO_VERSAO_FIELD_DESC = new org.apache.thrift.protocol.TField("anvisaProtocoloVersao", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ANVISA_NUMERO_REGISTRO_FIELD_DESC = new org.apache.thrift.protocol.TField("anvisaNumeroRegistro", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new VacinaRowThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new VacinaRowThriftTupleSchemeFactory());
  }

  private long imunobiologico; // optional
  private long estrategiaVacinacao; // optional
  private long dose; // optional
  private String lote; // optional
  private String fabricante; // optional
  private long grupoAtendimento; // optional
  private boolean stRegistroAnterior; // optional
  private long dataRegistroAnterior; // optional
  private boolean stAplicadoExterior; // optional
  private String uuidRnds; // optional
  private String cboPrescritorCodigo2002; // optional
  private String cid10MotivoIndicacao; // optional
  private boolean stPesquisaClinica; // optional
  private String anvisaProtocoloEstudo; // optional
  private String anvisaProtocoloVersao; // optional
  private String anvisaNumeroRegistro; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    IMUNOBIOLOGICO((short)1, "imunobiologico"),
    ESTRATEGIA_VACINACAO((short)2, "estrategiaVacinacao"),
    DOSE((short)3, "dose"),
    LOTE((short)4, "lote"),
    FABRICANTE((short)5, "fabricante"),
    GRUPO_ATENDIMENTO((short)6, "grupoAtendimento"),
    ST_REGISTRO_ANTERIOR((short)7, "stRegistroAnterior"),
    DATA_REGISTRO_ANTERIOR((short)8, "dataRegistroAnterior"),
    ST_APLICADO_EXTERIOR((short)9, "stAplicadoExterior"),
    UUID_RNDS((short)10, "uuidRnds"),
    CBO_PRESCRITOR_CODIGO2002((short)11, "cboPrescritorCodigo2002"),
    CID10_MOTIVO_INDICACAO((short)12, "cid10MotivoIndicacao"),
    ST_PESQUISA_CLINICA((short)13, "stPesquisaClinica"),
    ANVISA_PROTOCOLO_ESTUDO((short)14, "anvisaProtocoloEstudo"),
    ANVISA_PROTOCOLO_VERSAO((short)15, "anvisaProtocoloVersao"),
    ANVISA_NUMERO_REGISTRO((short)16, "anvisaNumeroRegistro");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // IMUNOBIOLOGICO
          return IMUNOBIOLOGICO;
        case 2: // ESTRATEGIA_VACINACAO
          return ESTRATEGIA_VACINACAO;
        case 3: // DOSE
          return DOSE;
        case 4: // LOTE
          return LOTE;
        case 5: // FABRICANTE
          return FABRICANTE;
        case 6: // GRUPO_ATENDIMENTO
          return GRUPO_ATENDIMENTO;
        case 7: // ST_REGISTRO_ANTERIOR
          return ST_REGISTRO_ANTERIOR;
        case 8: // DATA_REGISTRO_ANTERIOR
          return DATA_REGISTRO_ANTERIOR;
        case 9: // ST_APLICADO_EXTERIOR
          return ST_APLICADO_EXTERIOR;
        case 10: // UUID_RNDS
          return UUID_RNDS;
        case 11: // CBO_PRESCRITOR_CODIGO2002
          return CBO_PRESCRITOR_CODIGO2002;
        case 12: // CID10_MOTIVO_INDICACAO
          return CID10_MOTIVO_INDICACAO;
        case 13: // ST_PESQUISA_CLINICA
          return ST_PESQUISA_CLINICA;
        case 14: // ANVISA_PROTOCOLO_ESTUDO
          return ANVISA_PROTOCOLO_ESTUDO;
        case 15: // ANVISA_PROTOCOLO_VERSAO
          return ANVISA_PROTOCOLO_VERSAO;
        case 16: // ANVISA_NUMERO_REGISTRO
          return ANVISA_NUMERO_REGISTRO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IMUNOBIOLOGICO_ISSET_ID = 0;
  private static final int __ESTRATEGIAVACINACAO_ISSET_ID = 1;
  private static final int __DOSE_ISSET_ID = 2;
  private static final int __GRUPOATENDIMENTO_ISSET_ID = 3;
  private static final int __STREGISTROANTERIOR_ISSET_ID = 4;
  private static final int __DATAREGISTROANTERIOR_ISSET_ID = 5;
  private static final int __STAPLICADOEXTERIOR_ISSET_ID = 6;
  private static final int __STPESQUISACLINICA_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.IMUNOBIOLOGICO,_Fields.ESTRATEGIA_VACINACAO,_Fields.DOSE,_Fields.LOTE,_Fields.FABRICANTE,_Fields.GRUPO_ATENDIMENTO,_Fields.ST_REGISTRO_ANTERIOR,_Fields.DATA_REGISTRO_ANTERIOR,_Fields.ST_APLICADO_EXTERIOR,_Fields.UUID_RNDS,_Fields.CBO_PRESCRITOR_CODIGO2002,_Fields.CID10_MOTIVO_INDICACAO,_Fields.ST_PESQUISA_CLINICA,_Fields.ANVISA_PROTOCOLO_ESTUDO,_Fields.ANVISA_PROTOCOLO_VERSAO,_Fields.ANVISA_NUMERO_REGISTRO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.IMUNOBIOLOGICO, new org.apache.thrift.meta_data.FieldMetaData("imunobiologico", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ESTRATEGIA_VACINACAO, new org.apache.thrift.meta_data.FieldMetaData("estrategiaVacinacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DOSE, new org.apache.thrift.meta_data.FieldMetaData("dose", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOTE, new org.apache.thrift.meta_data.FieldMetaData("lote", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FABRICANTE, new org.apache.thrift.meta_data.FieldMetaData("fabricante", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GRUPO_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("grupoAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ST_REGISTRO_ANTERIOR, new org.apache.thrift.meta_data.FieldMetaData("stRegistroAnterior", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DATA_REGISTRO_ANTERIOR, new org.apache.thrift.meta_data.FieldMetaData("dataRegistroAnterior", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ST_APLICADO_EXTERIOR, new org.apache.thrift.meta_data.FieldMetaData("stAplicadoExterior", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.UUID_RNDS, new org.apache.thrift.meta_data.FieldMetaData("uuidRnds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CBO_PRESCRITOR_CODIGO2002, new org.apache.thrift.meta_data.FieldMetaData("cboPrescritorCodigo2002", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CID10_MOTIVO_INDICACAO, new org.apache.thrift.meta_data.FieldMetaData("cid10MotivoIndicacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ST_PESQUISA_CLINICA, new org.apache.thrift.meta_data.FieldMetaData("stPesquisaClinica", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ANVISA_PROTOCOLO_ESTUDO, new org.apache.thrift.meta_data.FieldMetaData("anvisaProtocoloEstudo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ANVISA_PROTOCOLO_VERSAO, new org.apache.thrift.meta_data.FieldMetaData("anvisaProtocoloVersao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ANVISA_NUMERO_REGISTRO, new org.apache.thrift.meta_data.FieldMetaData("anvisaNumeroRegistro", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(VacinaRowThrift.class, metaDataMap);
  }

  public VacinaRowThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public VacinaRowThrift(VacinaRowThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.imunobiologico = other.imunobiologico;
    this.estrategiaVacinacao = other.estrategiaVacinacao;
    this.dose = other.dose;
    if (other.isSetLote()) {
      this.lote = other.lote;
    }
    if (other.isSetFabricante()) {
      this.fabricante = other.fabricante;
    }
    this.grupoAtendimento = other.grupoAtendimento;
    this.stRegistroAnterior = other.stRegistroAnterior;
    this.dataRegistroAnterior = other.dataRegistroAnterior;
    this.stAplicadoExterior = other.stAplicadoExterior;
    if (other.isSetUuidRnds()) {
      this.uuidRnds = other.uuidRnds;
    }
    if (other.isSetCboPrescritorCodigo2002()) {
      this.cboPrescritorCodigo2002 = other.cboPrescritorCodigo2002;
    }
    if (other.isSetCid10MotivoIndicacao()) {
      this.cid10MotivoIndicacao = other.cid10MotivoIndicacao;
    }
    this.stPesquisaClinica = other.stPesquisaClinica;
    if (other.isSetAnvisaProtocoloEstudo()) {
      this.anvisaProtocoloEstudo = other.anvisaProtocoloEstudo;
    }
    if (other.isSetAnvisaProtocoloVersao()) {
      this.anvisaProtocoloVersao = other.anvisaProtocoloVersao;
    }
    if (other.isSetAnvisaNumeroRegistro()) {
      this.anvisaNumeroRegistro = other.anvisaNumeroRegistro;
    }
  }

  public VacinaRowThrift deepCopy() {
    return new VacinaRowThrift(this);
  }

  @Override
  public void clear() {
    setImunobiologicoIsSet(false);
    this.imunobiologico = 0;
    setEstrategiaVacinacaoIsSet(false);
    this.estrategiaVacinacao = 0;
    setDoseIsSet(false);
    this.dose = 0;
    this.lote = null;
    this.fabricante = null;
    setGrupoAtendimentoIsSet(false);
    this.grupoAtendimento = 0;
    setStRegistroAnteriorIsSet(false);
    this.stRegistroAnterior = false;
    setDataRegistroAnteriorIsSet(false);
    this.dataRegistroAnterior = 0;
    setStAplicadoExteriorIsSet(false);
    this.stAplicadoExterior = false;
    this.uuidRnds = null;
    this.cboPrescritorCodigo2002 = null;
    this.cid10MotivoIndicacao = null;
    setStPesquisaClinicaIsSet(false);
    this.stPesquisaClinica = false;
    this.anvisaProtocoloEstudo = null;
    this.anvisaProtocoloVersao = null;
    this.anvisaNumeroRegistro = null;
  }

  public long getImunobiologico() {
    return this.imunobiologico;
  }

  public void setImunobiologico(long imunobiologico) {
    this.imunobiologico = imunobiologico;
    setImunobiologicoIsSet(true);
  }

  public void unsetImunobiologico() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __IMUNOBIOLOGICO_ISSET_ID);
  }

  /** Returns true if field imunobiologico is set (has been assigned a value) and false otherwise */
  public boolean isSetImunobiologico() {
    return EncodingUtils.testBit(__isset_bitfield, __IMUNOBIOLOGICO_ISSET_ID);
  }

  public void setImunobiologicoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __IMUNOBIOLOGICO_ISSET_ID, value);
  }

  public long getEstrategiaVacinacao() {
    return this.estrategiaVacinacao;
  }

  public void setEstrategiaVacinacao(long estrategiaVacinacao) {
    this.estrategiaVacinacao = estrategiaVacinacao;
    setEstrategiaVacinacaoIsSet(true);
  }

  public void unsetEstrategiaVacinacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESTRATEGIAVACINACAO_ISSET_ID);
  }

  /** Returns true if field estrategiaVacinacao is set (has been assigned a value) and false otherwise */
  public boolean isSetEstrategiaVacinacao() {
    return EncodingUtils.testBit(__isset_bitfield, __ESTRATEGIAVACINACAO_ISSET_ID);
  }

  public void setEstrategiaVacinacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESTRATEGIAVACINACAO_ISSET_ID, value);
  }

  public long getDose() {
    return this.dose;
  }

  public void setDose(long dose) {
    this.dose = dose;
    setDoseIsSet(true);
  }

  public void unsetDose() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DOSE_ISSET_ID);
  }

  /** Returns true if field dose is set (has been assigned a value) and false otherwise */
  public boolean isSetDose() {
    return EncodingUtils.testBit(__isset_bitfield, __DOSE_ISSET_ID);
  }

  public void setDoseIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DOSE_ISSET_ID, value);
  }

  public String getLote() {
    return this.lote;
  }

  public void setLote(String lote) {
    this.lote = lote;
  }

  public void unsetLote() {
    this.lote = null;
  }

  /** Returns true if field lote is set (has been assigned a value) and false otherwise */
  public boolean isSetLote() {
    return this.lote != null;
  }

  public void setLoteIsSet(boolean value) {
    if (!value) {
      this.lote = null;
    }
  }

  public String getFabricante() {
    return this.fabricante;
  }

  public void setFabricante(String fabricante) {
    this.fabricante = fabricante;
  }

  public void unsetFabricante() {
    this.fabricante = null;
  }

  /** Returns true if field fabricante is set (has been assigned a value) and false otherwise */
  public boolean isSetFabricante() {
    return this.fabricante != null;
  }

  public void setFabricanteIsSet(boolean value) {
    if (!value) {
      this.fabricante = null;
    }
  }

  public long getGrupoAtendimento() {
    return this.grupoAtendimento;
  }

  public void setGrupoAtendimento(long grupoAtendimento) {
    this.grupoAtendimento = grupoAtendimento;
    setGrupoAtendimentoIsSet(true);
  }

  public void unsetGrupoAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GRUPOATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field grupoAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetGrupoAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __GRUPOATENDIMENTO_ISSET_ID);
  }

  public void setGrupoAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GRUPOATENDIMENTO_ISSET_ID, value);
  }

  public boolean isStRegistroAnterior() {
    return this.stRegistroAnterior;
  }

  public void setStRegistroAnterior(boolean stRegistroAnterior) {
    this.stRegistroAnterior = stRegistroAnterior;
    setStRegistroAnteriorIsSet(true);
  }

  public void unsetStRegistroAnterior() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STREGISTROANTERIOR_ISSET_ID);
  }

  /** Returns true if field stRegistroAnterior is set (has been assigned a value) and false otherwise */
  public boolean isSetStRegistroAnterior() {
    return EncodingUtils.testBit(__isset_bitfield, __STREGISTROANTERIOR_ISSET_ID);
  }

  public void setStRegistroAnteriorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STREGISTROANTERIOR_ISSET_ID, value);
  }

  public long getDataRegistroAnterior() {
    return this.dataRegistroAnterior;
  }

  public void setDataRegistroAnterior(long dataRegistroAnterior) {
    this.dataRegistroAnterior = dataRegistroAnterior;
    setDataRegistroAnteriorIsSet(true);
  }

  public void unsetDataRegistroAnterior() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATAREGISTROANTERIOR_ISSET_ID);
  }

  /** Returns true if field dataRegistroAnterior is set (has been assigned a value) and false otherwise */
  public boolean isSetDataRegistroAnterior() {
    return EncodingUtils.testBit(__isset_bitfield, __DATAREGISTROANTERIOR_ISSET_ID);
  }

  public void setDataRegistroAnteriorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATAREGISTROANTERIOR_ISSET_ID, value);
  }

  public boolean isStAplicadoExterior() {
    return this.stAplicadoExterior;
  }

  public void setStAplicadoExterior(boolean stAplicadoExterior) {
    this.stAplicadoExterior = stAplicadoExterior;
    setStAplicadoExteriorIsSet(true);
  }

  public void unsetStAplicadoExterior() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STAPLICADOEXTERIOR_ISSET_ID);
  }

  /** Returns true if field stAplicadoExterior is set (has been assigned a value) and false otherwise */
  public boolean isSetStAplicadoExterior() {
    return EncodingUtils.testBit(__isset_bitfield, __STAPLICADOEXTERIOR_ISSET_ID);
  }

  public void setStAplicadoExteriorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STAPLICADOEXTERIOR_ISSET_ID, value);
  }

  public String getUuidRnds() {
    return this.uuidRnds;
  }

  public void setUuidRnds(String uuidRnds) {
    this.uuidRnds = uuidRnds;
  }

  public void unsetUuidRnds() {
    this.uuidRnds = null;
  }

  /** Returns true if field uuidRnds is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidRnds() {
    return this.uuidRnds != null;
  }

  public void setUuidRndsIsSet(boolean value) {
    if (!value) {
      this.uuidRnds = null;
    }
  }

  public String getCboPrescritorCodigo2002() {
    return this.cboPrescritorCodigo2002;
  }

  public void setCboPrescritorCodigo2002(String cboPrescritorCodigo2002) {
    this.cboPrescritorCodigo2002 = cboPrescritorCodigo2002;
  }

  public void unsetCboPrescritorCodigo2002() {
    this.cboPrescritorCodigo2002 = null;
  }

  /** Returns true if field cboPrescritorCodigo2002 is set (has been assigned a value) and false otherwise */
  public boolean isSetCboPrescritorCodigo2002() {
    return this.cboPrescritorCodigo2002 != null;
  }

  public void setCboPrescritorCodigo2002IsSet(boolean value) {
    if (!value) {
      this.cboPrescritorCodigo2002 = null;
    }
  }

  public String getCid10MotivoIndicacao() {
    return this.cid10MotivoIndicacao;
  }

  public void setCid10MotivoIndicacao(String cid10MotivoIndicacao) {
    this.cid10MotivoIndicacao = cid10MotivoIndicacao;
  }

  public void unsetCid10MotivoIndicacao() {
    this.cid10MotivoIndicacao = null;
  }

  /** Returns true if field cid10MotivoIndicacao is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10MotivoIndicacao() {
    return this.cid10MotivoIndicacao != null;
  }

  public void setCid10MotivoIndicacaoIsSet(boolean value) {
    if (!value) {
      this.cid10MotivoIndicacao = null;
    }
  }

  public boolean isStPesquisaClinica() {
    return this.stPesquisaClinica;
  }

  public void setStPesquisaClinica(boolean stPesquisaClinica) {
    this.stPesquisaClinica = stPesquisaClinica;
    setStPesquisaClinicaIsSet(true);
  }

  public void unsetStPesquisaClinica() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STPESQUISACLINICA_ISSET_ID);
  }

  /** Returns true if field stPesquisaClinica is set (has been assigned a value) and false otherwise */
  public boolean isSetStPesquisaClinica() {
    return EncodingUtils.testBit(__isset_bitfield, __STPESQUISACLINICA_ISSET_ID);
  }

  public void setStPesquisaClinicaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STPESQUISACLINICA_ISSET_ID, value);
  }

  public String getAnvisaProtocoloEstudo() {
    return this.anvisaProtocoloEstudo;
  }

  public void setAnvisaProtocoloEstudo(String anvisaProtocoloEstudo) {
    this.anvisaProtocoloEstudo = anvisaProtocoloEstudo;
  }

  public void unsetAnvisaProtocoloEstudo() {
    this.anvisaProtocoloEstudo = null;
  }

  /** Returns true if field anvisaProtocoloEstudo is set (has been assigned a value) and false otherwise */
  public boolean isSetAnvisaProtocoloEstudo() {
    return this.anvisaProtocoloEstudo != null;
  }

  public void setAnvisaProtocoloEstudoIsSet(boolean value) {
    if (!value) {
      this.anvisaProtocoloEstudo = null;
    }
  }

  public String getAnvisaProtocoloVersao() {
    return this.anvisaProtocoloVersao;
  }

  public void setAnvisaProtocoloVersao(String anvisaProtocoloVersao) {
    this.anvisaProtocoloVersao = anvisaProtocoloVersao;
  }

  public void unsetAnvisaProtocoloVersao() {
    this.anvisaProtocoloVersao = null;
  }

  /** Returns true if field anvisaProtocoloVersao is set (has been assigned a value) and false otherwise */
  public boolean isSetAnvisaProtocoloVersao() {
    return this.anvisaProtocoloVersao != null;
  }

  public void setAnvisaProtocoloVersaoIsSet(boolean value) {
    if (!value) {
      this.anvisaProtocoloVersao = null;
    }
  }

  public String getAnvisaNumeroRegistro() {
    return this.anvisaNumeroRegistro;
  }

  public void setAnvisaNumeroRegistro(String anvisaNumeroRegistro) {
    this.anvisaNumeroRegistro = anvisaNumeroRegistro;
  }

  public void unsetAnvisaNumeroRegistro() {
    this.anvisaNumeroRegistro = null;
  }

  /** Returns true if field anvisaNumeroRegistro is set (has been assigned a value) and false otherwise */
  public boolean isSetAnvisaNumeroRegistro() {
    return this.anvisaNumeroRegistro != null;
  }

  public void setAnvisaNumeroRegistroIsSet(boolean value) {
    if (!value) {
      this.anvisaNumeroRegistro = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case IMUNOBIOLOGICO:
      if (value == null) {
        unsetImunobiologico();
      } else {
        setImunobiologico((Long)value);
      }
      break;

    case ESTRATEGIA_VACINACAO:
      if (value == null) {
        unsetEstrategiaVacinacao();
      } else {
        setEstrategiaVacinacao((Long)value);
      }
      break;

    case DOSE:
      if (value == null) {
        unsetDose();
      } else {
        setDose((Long)value);
      }
      break;

    case LOTE:
      if (value == null) {
        unsetLote();
      } else {
        setLote((String)value);
      }
      break;

    case FABRICANTE:
      if (value == null) {
        unsetFabricante();
      } else {
        setFabricante((String)value);
      }
      break;

    case GRUPO_ATENDIMENTO:
      if (value == null) {
        unsetGrupoAtendimento();
      } else {
        setGrupoAtendimento((Long)value);
      }
      break;

    case ST_REGISTRO_ANTERIOR:
      if (value == null) {
        unsetStRegistroAnterior();
      } else {
        setStRegistroAnterior((Boolean)value);
      }
      break;

    case DATA_REGISTRO_ANTERIOR:
      if (value == null) {
        unsetDataRegistroAnterior();
      } else {
        setDataRegistroAnterior((Long)value);
      }
      break;

    case ST_APLICADO_EXTERIOR:
      if (value == null) {
        unsetStAplicadoExterior();
      } else {
        setStAplicadoExterior((Boolean)value);
      }
      break;

    case UUID_RNDS:
      if (value == null) {
        unsetUuidRnds();
      } else {
        setUuidRnds((String)value);
      }
      break;

    case CBO_PRESCRITOR_CODIGO2002:
      if (value == null) {
        unsetCboPrescritorCodigo2002();
      } else {
        setCboPrescritorCodigo2002((String)value);
      }
      break;

    case CID10_MOTIVO_INDICACAO:
      if (value == null) {
        unsetCid10MotivoIndicacao();
      } else {
        setCid10MotivoIndicacao((String)value);
      }
      break;

    case ST_PESQUISA_CLINICA:
      if (value == null) {
        unsetStPesquisaClinica();
      } else {
        setStPesquisaClinica((Boolean)value);
      }
      break;

    case ANVISA_PROTOCOLO_ESTUDO:
      if (value == null) {
        unsetAnvisaProtocoloEstudo();
      } else {
        setAnvisaProtocoloEstudo((String)value);
      }
      break;

    case ANVISA_PROTOCOLO_VERSAO:
      if (value == null) {
        unsetAnvisaProtocoloVersao();
      } else {
        setAnvisaProtocoloVersao((String)value);
      }
      break;

    case ANVISA_NUMERO_REGISTRO:
      if (value == null) {
        unsetAnvisaNumeroRegistro();
      } else {
        setAnvisaNumeroRegistro((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case IMUNOBIOLOGICO:
      return getImunobiologico();

    case ESTRATEGIA_VACINACAO:
      return getEstrategiaVacinacao();

    case DOSE:
      return getDose();

    case LOTE:
      return getLote();

    case FABRICANTE:
      return getFabricante();

    case GRUPO_ATENDIMENTO:
      return getGrupoAtendimento();

    case ST_REGISTRO_ANTERIOR:
      return isStRegistroAnterior();

    case DATA_REGISTRO_ANTERIOR:
      return getDataRegistroAnterior();

    case ST_APLICADO_EXTERIOR:
      return isStAplicadoExterior();

    case UUID_RNDS:
      return getUuidRnds();

    case CBO_PRESCRITOR_CODIGO2002:
      return getCboPrescritorCodigo2002();

    case CID10_MOTIVO_INDICACAO:
      return getCid10MotivoIndicacao();

    case ST_PESQUISA_CLINICA:
      return isStPesquisaClinica();

    case ANVISA_PROTOCOLO_ESTUDO:
      return getAnvisaProtocoloEstudo();

    case ANVISA_PROTOCOLO_VERSAO:
      return getAnvisaProtocoloVersao();

    case ANVISA_NUMERO_REGISTRO:
      return getAnvisaNumeroRegistro();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case IMUNOBIOLOGICO:
      return isSetImunobiologico();
    case ESTRATEGIA_VACINACAO:
      return isSetEstrategiaVacinacao();
    case DOSE:
      return isSetDose();
    case LOTE:
      return isSetLote();
    case FABRICANTE:
      return isSetFabricante();
    case GRUPO_ATENDIMENTO:
      return isSetGrupoAtendimento();
    case ST_REGISTRO_ANTERIOR:
      return isSetStRegistroAnterior();
    case DATA_REGISTRO_ANTERIOR:
      return isSetDataRegistroAnterior();
    case ST_APLICADO_EXTERIOR:
      return isSetStAplicadoExterior();
    case UUID_RNDS:
      return isSetUuidRnds();
    case CBO_PRESCRITOR_CODIGO2002:
      return isSetCboPrescritorCodigo2002();
    case CID10_MOTIVO_INDICACAO:
      return isSetCid10MotivoIndicacao();
    case ST_PESQUISA_CLINICA:
      return isSetStPesquisaClinica();
    case ANVISA_PROTOCOLO_ESTUDO:
      return isSetAnvisaProtocoloEstudo();
    case ANVISA_PROTOCOLO_VERSAO:
      return isSetAnvisaProtocoloVersao();
    case ANVISA_NUMERO_REGISTRO:
      return isSetAnvisaNumeroRegistro();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof VacinaRowThrift)
      return this.equals((VacinaRowThrift)that);
    return false;
  }

  public boolean equals(VacinaRowThrift that) {
    if (that == null)
      return false;

    boolean this_present_imunobiologico = true && this.isSetImunobiologico();
    boolean that_present_imunobiologico = true && that.isSetImunobiologico();
    if (this_present_imunobiologico || that_present_imunobiologico) {
      if (!(this_present_imunobiologico && that_present_imunobiologico))
        return false;
      if (this.imunobiologico != that.imunobiologico)
        return false;
    }

    boolean this_present_estrategiaVacinacao = true && this.isSetEstrategiaVacinacao();
    boolean that_present_estrategiaVacinacao = true && that.isSetEstrategiaVacinacao();
    if (this_present_estrategiaVacinacao || that_present_estrategiaVacinacao) {
      if (!(this_present_estrategiaVacinacao && that_present_estrategiaVacinacao))
        return false;
      if (this.estrategiaVacinacao != that.estrategiaVacinacao)
        return false;
    }

    boolean this_present_dose = true && this.isSetDose();
    boolean that_present_dose = true && that.isSetDose();
    if (this_present_dose || that_present_dose) {
      if (!(this_present_dose && that_present_dose))
        return false;
      if (this.dose != that.dose)
        return false;
    }

    boolean this_present_lote = true && this.isSetLote();
    boolean that_present_lote = true && that.isSetLote();
    if (this_present_lote || that_present_lote) {
      if (!(this_present_lote && that_present_lote))
        return false;
      if (!this.lote.equals(that.lote))
        return false;
    }

    boolean this_present_fabricante = true && this.isSetFabricante();
    boolean that_present_fabricante = true && that.isSetFabricante();
    if (this_present_fabricante || that_present_fabricante) {
      if (!(this_present_fabricante && that_present_fabricante))
        return false;
      if (!this.fabricante.equals(that.fabricante))
        return false;
    }

    boolean this_present_grupoAtendimento = true && this.isSetGrupoAtendimento();
    boolean that_present_grupoAtendimento = true && that.isSetGrupoAtendimento();
    if (this_present_grupoAtendimento || that_present_grupoAtendimento) {
      if (!(this_present_grupoAtendimento && that_present_grupoAtendimento))
        return false;
      if (this.grupoAtendimento != that.grupoAtendimento)
        return false;
    }

    boolean this_present_stRegistroAnterior = true && this.isSetStRegistroAnterior();
    boolean that_present_stRegistroAnterior = true && that.isSetStRegistroAnterior();
    if (this_present_stRegistroAnterior || that_present_stRegistroAnterior) {
      if (!(this_present_stRegistroAnterior && that_present_stRegistroAnterior))
        return false;
      if (this.stRegistroAnterior != that.stRegistroAnterior)
        return false;
    }

    boolean this_present_dataRegistroAnterior = true && this.isSetDataRegistroAnterior();
    boolean that_present_dataRegistroAnterior = true && that.isSetDataRegistroAnterior();
    if (this_present_dataRegistroAnterior || that_present_dataRegistroAnterior) {
      if (!(this_present_dataRegistroAnterior && that_present_dataRegistroAnterior))
        return false;
      if (this.dataRegistroAnterior != that.dataRegistroAnterior)
        return false;
    }

    boolean this_present_stAplicadoExterior = true && this.isSetStAplicadoExterior();
    boolean that_present_stAplicadoExterior = true && that.isSetStAplicadoExterior();
    if (this_present_stAplicadoExterior || that_present_stAplicadoExterior) {
      if (!(this_present_stAplicadoExterior && that_present_stAplicadoExterior))
        return false;
      if (this.stAplicadoExterior != that.stAplicadoExterior)
        return false;
    }

    boolean this_present_uuidRnds = true && this.isSetUuidRnds();
    boolean that_present_uuidRnds = true && that.isSetUuidRnds();
    if (this_present_uuidRnds || that_present_uuidRnds) {
      if (!(this_present_uuidRnds && that_present_uuidRnds))
        return false;
      if (!this.uuidRnds.equals(that.uuidRnds))
        return false;
    }

    boolean this_present_cboPrescritorCodigo2002 = true && this.isSetCboPrescritorCodigo2002();
    boolean that_present_cboPrescritorCodigo2002 = true && that.isSetCboPrescritorCodigo2002();
    if (this_present_cboPrescritorCodigo2002 || that_present_cboPrescritorCodigo2002) {
      if (!(this_present_cboPrescritorCodigo2002 && that_present_cboPrescritorCodigo2002))
        return false;
      if (!this.cboPrescritorCodigo2002.equals(that.cboPrescritorCodigo2002))
        return false;
    }

    boolean this_present_cid10MotivoIndicacao = true && this.isSetCid10MotivoIndicacao();
    boolean that_present_cid10MotivoIndicacao = true && that.isSetCid10MotivoIndicacao();
    if (this_present_cid10MotivoIndicacao || that_present_cid10MotivoIndicacao) {
      if (!(this_present_cid10MotivoIndicacao && that_present_cid10MotivoIndicacao))
        return false;
      if (!this.cid10MotivoIndicacao.equals(that.cid10MotivoIndicacao))
        return false;
    }

    boolean this_present_stPesquisaClinica = true && this.isSetStPesquisaClinica();
    boolean that_present_stPesquisaClinica = true && that.isSetStPesquisaClinica();
    if (this_present_stPesquisaClinica || that_present_stPesquisaClinica) {
      if (!(this_present_stPesquisaClinica && that_present_stPesquisaClinica))
        return false;
      if (this.stPesquisaClinica != that.stPesquisaClinica)
        return false;
    }

    boolean this_present_anvisaProtocoloEstudo = true && this.isSetAnvisaProtocoloEstudo();
    boolean that_present_anvisaProtocoloEstudo = true && that.isSetAnvisaProtocoloEstudo();
    if (this_present_anvisaProtocoloEstudo || that_present_anvisaProtocoloEstudo) {
      if (!(this_present_anvisaProtocoloEstudo && that_present_anvisaProtocoloEstudo))
        return false;
      if (!this.anvisaProtocoloEstudo.equals(that.anvisaProtocoloEstudo))
        return false;
    }

    boolean this_present_anvisaProtocoloVersao = true && this.isSetAnvisaProtocoloVersao();
    boolean that_present_anvisaProtocoloVersao = true && that.isSetAnvisaProtocoloVersao();
    if (this_present_anvisaProtocoloVersao || that_present_anvisaProtocoloVersao) {
      if (!(this_present_anvisaProtocoloVersao && that_present_anvisaProtocoloVersao))
        return false;
      if (!this.anvisaProtocoloVersao.equals(that.anvisaProtocoloVersao))
        return false;
    }

    boolean this_present_anvisaNumeroRegistro = true && this.isSetAnvisaNumeroRegistro();
    boolean that_present_anvisaNumeroRegistro = true && that.isSetAnvisaNumeroRegistro();
    if (this_present_anvisaNumeroRegistro || that_present_anvisaNumeroRegistro) {
      if (!(this_present_anvisaNumeroRegistro && that_present_anvisaNumeroRegistro))
        return false;
      if (!this.anvisaNumeroRegistro.equals(that.anvisaNumeroRegistro))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_imunobiologico = true && (isSetImunobiologico());
    list.add(present_imunobiologico);
    if (present_imunobiologico)
      list.add(imunobiologico);

    boolean present_estrategiaVacinacao = true && (isSetEstrategiaVacinacao());
    list.add(present_estrategiaVacinacao);
    if (present_estrategiaVacinacao)
      list.add(estrategiaVacinacao);

    boolean present_dose = true && (isSetDose());
    list.add(present_dose);
    if (present_dose)
      list.add(dose);

    boolean present_lote = true && (isSetLote());
    list.add(present_lote);
    if (present_lote)
      list.add(lote);

    boolean present_fabricante = true && (isSetFabricante());
    list.add(present_fabricante);
    if (present_fabricante)
      list.add(fabricante);

    boolean present_grupoAtendimento = true && (isSetGrupoAtendimento());
    list.add(present_grupoAtendimento);
    if (present_grupoAtendimento)
      list.add(grupoAtendimento);

    boolean present_stRegistroAnterior = true && (isSetStRegistroAnterior());
    list.add(present_stRegistroAnterior);
    if (present_stRegistroAnterior)
      list.add(stRegistroAnterior);

    boolean present_dataRegistroAnterior = true && (isSetDataRegistroAnterior());
    list.add(present_dataRegistroAnterior);
    if (present_dataRegistroAnterior)
      list.add(dataRegistroAnterior);

    boolean present_stAplicadoExterior = true && (isSetStAplicadoExterior());
    list.add(present_stAplicadoExterior);
    if (present_stAplicadoExterior)
      list.add(stAplicadoExterior);

    boolean present_uuidRnds = true && (isSetUuidRnds());
    list.add(present_uuidRnds);
    if (present_uuidRnds)
      list.add(uuidRnds);

    boolean present_cboPrescritorCodigo2002 = true && (isSetCboPrescritorCodigo2002());
    list.add(present_cboPrescritorCodigo2002);
    if (present_cboPrescritorCodigo2002)
      list.add(cboPrescritorCodigo2002);

    boolean present_cid10MotivoIndicacao = true && (isSetCid10MotivoIndicacao());
    list.add(present_cid10MotivoIndicacao);
    if (present_cid10MotivoIndicacao)
      list.add(cid10MotivoIndicacao);

    boolean present_stPesquisaClinica = true && (isSetStPesquisaClinica());
    list.add(present_stPesquisaClinica);
    if (present_stPesquisaClinica)
      list.add(stPesquisaClinica);

    boolean present_anvisaProtocoloEstudo = true && (isSetAnvisaProtocoloEstudo());
    list.add(present_anvisaProtocoloEstudo);
    if (present_anvisaProtocoloEstudo)
      list.add(anvisaProtocoloEstudo);

    boolean present_anvisaProtocoloVersao = true && (isSetAnvisaProtocoloVersao());
    list.add(present_anvisaProtocoloVersao);
    if (present_anvisaProtocoloVersao)
      list.add(anvisaProtocoloVersao);

    boolean present_anvisaNumeroRegistro = true && (isSetAnvisaNumeroRegistro());
    list.add(present_anvisaNumeroRegistro);
    if (present_anvisaNumeroRegistro)
      list.add(anvisaNumeroRegistro);

    return list.hashCode();
  }

  @Override
  public int compareTo(VacinaRowThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetImunobiologico()).compareTo(other.isSetImunobiologico());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImunobiologico()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imunobiologico, other.imunobiologico);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEstrategiaVacinacao()).compareTo(other.isSetEstrategiaVacinacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstrategiaVacinacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estrategiaVacinacao, other.estrategiaVacinacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDose()).compareTo(other.isSetDose());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDose()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dose, other.dose);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLote()).compareTo(other.isSetLote());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLote()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lote, other.lote);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFabricante()).compareTo(other.isSetFabricante());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFabricante()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fabricante, other.fabricante);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGrupoAtendimento()).compareTo(other.isSetGrupoAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrupoAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grupoAtendimento, other.grupoAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStRegistroAnterior()).compareTo(other.isSetStRegistroAnterior());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStRegistroAnterior()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stRegistroAnterior, other.stRegistroAnterior);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataRegistroAnterior()).compareTo(other.isSetDataRegistroAnterior());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataRegistroAnterior()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataRegistroAnterior, other.dataRegistroAnterior);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStAplicadoExterior()).compareTo(other.isSetStAplicadoExterior());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStAplicadoExterior()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stAplicadoExterior, other.stAplicadoExterior);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidRnds()).compareTo(other.isSetUuidRnds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidRnds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidRnds, other.uuidRnds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCboPrescritorCodigo2002()).compareTo(other.isSetCboPrescritorCodigo2002());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCboPrescritorCodigo2002()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cboPrescritorCodigo2002, other.cboPrescritorCodigo2002);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10MotivoIndicacao()).compareTo(other.isSetCid10MotivoIndicacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10MotivoIndicacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10MotivoIndicacao, other.cid10MotivoIndicacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStPesquisaClinica()).compareTo(other.isSetStPesquisaClinica());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStPesquisaClinica()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stPesquisaClinica, other.stPesquisaClinica);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAnvisaProtocoloEstudo()).compareTo(other.isSetAnvisaProtocoloEstudo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnvisaProtocoloEstudo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anvisaProtocoloEstudo, other.anvisaProtocoloEstudo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAnvisaProtocoloVersao()).compareTo(other.isSetAnvisaProtocoloVersao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnvisaProtocoloVersao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anvisaProtocoloVersao, other.anvisaProtocoloVersao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAnvisaNumeroRegistro()).compareTo(other.isSetAnvisaNumeroRegistro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnvisaNumeroRegistro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.anvisaNumeroRegistro, other.anvisaNumeroRegistro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("VacinaRowThrift(");
    boolean first = true;

    if (isSetImunobiologico()) {
      sb.append("imunobiologico:");
      sb.append(this.imunobiologico);
      first = false;
    }
    if (isSetEstrategiaVacinacao()) {
      if (!first) sb.append(", ");
      sb.append("estrategiaVacinacao:");
      sb.append(this.estrategiaVacinacao);
      first = false;
    }
    if (isSetDose()) {
      if (!first) sb.append(", ");
      sb.append("dose:");
      sb.append(this.dose);
      first = false;
    }
    if (isSetLote()) {
      if (!first) sb.append(", ");
      sb.append("lote:");
      if (this.lote == null) {
        sb.append("null");
      } else {
        sb.append(this.lote);
      }
      first = false;
    }
    if (isSetFabricante()) {
      if (!first) sb.append(", ");
      sb.append("fabricante:");
      if (this.fabricante == null) {
        sb.append("null");
      } else {
        sb.append(this.fabricante);
      }
      first = false;
    }
    if (isSetGrupoAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("grupoAtendimento:");
      sb.append(this.grupoAtendimento);
      first = false;
    }
    if (isSetStRegistroAnterior()) {
      if (!first) sb.append(", ");
      sb.append("stRegistroAnterior:");
      sb.append(this.stRegistroAnterior);
      first = false;
    }
    if (isSetDataRegistroAnterior()) {
      if (!first) sb.append(", ");
      sb.append("dataRegistroAnterior:");
      sb.append(this.dataRegistroAnterior);
      first = false;
    }
    if (isSetStAplicadoExterior()) {
      if (!first) sb.append(", ");
      sb.append("stAplicadoExterior:");
      sb.append(this.stAplicadoExterior);
      first = false;
    }
    if (isSetUuidRnds()) {
      if (!first) sb.append(", ");
      sb.append("uuidRnds:");
      if (this.uuidRnds == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidRnds);
      }
      first = false;
    }
    if (isSetCboPrescritorCodigo2002()) {
      if (!first) sb.append(", ");
      sb.append("cboPrescritorCodigo2002:");
      if (this.cboPrescritorCodigo2002 == null) {
        sb.append("null");
      } else {
        sb.append(this.cboPrescritorCodigo2002);
      }
      first = false;
    }
    if (isSetCid10MotivoIndicacao()) {
      if (!first) sb.append(", ");
      sb.append("cid10MotivoIndicacao:");
      if (this.cid10MotivoIndicacao == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10MotivoIndicacao);
      }
      first = false;
    }
    if (isSetStPesquisaClinica()) {
      if (!first) sb.append(", ");
      sb.append("stPesquisaClinica:");
      sb.append(this.stPesquisaClinica);
      first = false;
    }
    if (isSetAnvisaProtocoloEstudo()) {
      if (!first) sb.append(", ");
      sb.append("anvisaProtocoloEstudo:");
      if (this.anvisaProtocoloEstudo == null) {
        sb.append("null");
      } else {
        sb.append(this.anvisaProtocoloEstudo);
      }
      first = false;
    }
    if (isSetAnvisaProtocoloVersao()) {
      if (!first) sb.append(", ");
      sb.append("anvisaProtocoloVersao:");
      if (this.anvisaProtocoloVersao == null) {
        sb.append("null");
      } else {
        sb.append(this.anvisaProtocoloVersao);
      }
      first = false;
    }
    if (isSetAnvisaNumeroRegistro()) {
      if (!first) sb.append(", ");
      sb.append("anvisaNumeroRegistro:");
      if (this.anvisaNumeroRegistro == null) {
        sb.append("null");
      } else {
        sb.append(this.anvisaNumeroRegistro);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VacinaRowThriftStandardSchemeFactory implements SchemeFactory {
    public VacinaRowThriftStandardScheme getScheme() {
      return new VacinaRowThriftStandardScheme();
    }
  }

  private static class VacinaRowThriftStandardScheme extends StandardScheme<VacinaRowThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, VacinaRowThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // IMUNOBIOLOGICO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.imunobiologico = iprot.readI64();
              struct.setImunobiologicoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ESTRATEGIA_VACINACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.estrategiaVacinacao = iprot.readI64();
              struct.setEstrategiaVacinacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DOSE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dose = iprot.readI64();
              struct.setDoseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOTE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lote = iprot.readString();
              struct.setLoteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FABRICANTE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fabricante = iprot.readString();
              struct.setFabricanteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // GRUPO_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.grupoAtendimento = iprot.readI64();
              struct.setGrupoAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ST_REGISTRO_ANTERIOR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stRegistroAnterior = iprot.readBool();
              struct.setStRegistroAnteriorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DATA_REGISTRO_ANTERIOR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataRegistroAnterior = iprot.readI64();
              struct.setDataRegistroAnteriorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ST_APLICADO_EXTERIOR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stAplicadoExterior = iprot.readBool();
              struct.setStAplicadoExteriorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UUID_RNDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidRnds = iprot.readString();
              struct.setUuidRndsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CBO_PRESCRITOR_CODIGO2002
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cboPrescritorCodigo2002 = iprot.readString();
              struct.setCboPrescritorCodigo2002IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CID10_MOTIVO_INDICACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10MotivoIndicacao = iprot.readString();
              struct.setCid10MotivoIndicacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ST_PESQUISA_CLINICA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stPesquisaClinica = iprot.readBool();
              struct.setStPesquisaClinicaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ANVISA_PROTOCOLO_ESTUDO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.anvisaProtocoloEstudo = iprot.readString();
              struct.setAnvisaProtocoloEstudoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // ANVISA_PROTOCOLO_VERSAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.anvisaProtocoloVersao = iprot.readString();
              struct.setAnvisaProtocoloVersaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ANVISA_NUMERO_REGISTRO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.anvisaNumeroRegistro = iprot.readString();
              struct.setAnvisaNumeroRegistroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, VacinaRowThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetImunobiologico()) {
        oprot.writeFieldBegin(IMUNOBIOLOGICO_FIELD_DESC);
        oprot.writeI64(struct.imunobiologico);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEstrategiaVacinacao()) {
        oprot.writeFieldBegin(ESTRATEGIA_VACINACAO_FIELD_DESC);
        oprot.writeI64(struct.estrategiaVacinacao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDose()) {
        oprot.writeFieldBegin(DOSE_FIELD_DESC);
        oprot.writeI64(struct.dose);
        oprot.writeFieldEnd();
      }
      if (struct.lote != null) {
        if (struct.isSetLote()) {
          oprot.writeFieldBegin(LOTE_FIELD_DESC);
          oprot.writeString(struct.lote);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fabricante != null) {
        if (struct.isSetFabricante()) {
          oprot.writeFieldBegin(FABRICANTE_FIELD_DESC);
          oprot.writeString(struct.fabricante);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetGrupoAtendimento()) {
        oprot.writeFieldBegin(GRUPO_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.grupoAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStRegistroAnterior()) {
        oprot.writeFieldBegin(ST_REGISTRO_ANTERIOR_FIELD_DESC);
        oprot.writeBool(struct.stRegistroAnterior);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataRegistroAnterior()) {
        oprot.writeFieldBegin(DATA_REGISTRO_ANTERIOR_FIELD_DESC);
        oprot.writeI64(struct.dataRegistroAnterior);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStAplicadoExterior()) {
        oprot.writeFieldBegin(ST_APLICADO_EXTERIOR_FIELD_DESC);
        oprot.writeBool(struct.stAplicadoExterior);
        oprot.writeFieldEnd();
      }
      if (struct.uuidRnds != null) {
        if (struct.isSetUuidRnds()) {
          oprot.writeFieldBegin(UUID_RNDS_FIELD_DESC);
          oprot.writeString(struct.uuidRnds);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cboPrescritorCodigo2002 != null) {
        if (struct.isSetCboPrescritorCodigo2002()) {
          oprot.writeFieldBegin(CBO_PRESCRITOR_CODIGO2002_FIELD_DESC);
          oprot.writeString(struct.cboPrescritorCodigo2002);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10MotivoIndicacao != null) {
        if (struct.isSetCid10MotivoIndicacao()) {
          oprot.writeFieldBegin(CID10_MOTIVO_INDICACAO_FIELD_DESC);
          oprot.writeString(struct.cid10MotivoIndicacao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStPesquisaClinica()) {
        oprot.writeFieldBegin(ST_PESQUISA_CLINICA_FIELD_DESC);
        oprot.writeBool(struct.stPesquisaClinica);
        oprot.writeFieldEnd();
      }
      if (struct.anvisaProtocoloEstudo != null) {
        if (struct.isSetAnvisaProtocoloEstudo()) {
          oprot.writeFieldBegin(ANVISA_PROTOCOLO_ESTUDO_FIELD_DESC);
          oprot.writeString(struct.anvisaProtocoloEstudo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.anvisaProtocoloVersao != null) {
        if (struct.isSetAnvisaProtocoloVersao()) {
          oprot.writeFieldBegin(ANVISA_PROTOCOLO_VERSAO_FIELD_DESC);
          oprot.writeString(struct.anvisaProtocoloVersao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.anvisaNumeroRegistro != null) {
        if (struct.isSetAnvisaNumeroRegistro()) {
          oprot.writeFieldBegin(ANVISA_NUMERO_REGISTRO_FIELD_DESC);
          oprot.writeString(struct.anvisaNumeroRegistro);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VacinaRowThriftTupleSchemeFactory implements SchemeFactory {
    public VacinaRowThriftTupleScheme getScheme() {
      return new VacinaRowThriftTupleScheme();
    }
  }

  private static class VacinaRowThriftTupleScheme extends TupleScheme<VacinaRowThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, VacinaRowThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetImunobiologico()) {
        optionals.set(0);
      }
      if (struct.isSetEstrategiaVacinacao()) {
        optionals.set(1);
      }
      if (struct.isSetDose()) {
        optionals.set(2);
      }
      if (struct.isSetLote()) {
        optionals.set(3);
      }
      if (struct.isSetFabricante()) {
        optionals.set(4);
      }
      if (struct.isSetGrupoAtendimento()) {
        optionals.set(5);
      }
      if (struct.isSetStRegistroAnterior()) {
        optionals.set(6);
      }
      if (struct.isSetDataRegistroAnterior()) {
        optionals.set(7);
      }
      if (struct.isSetStAplicadoExterior()) {
        optionals.set(8);
      }
      if (struct.isSetUuidRnds()) {
        optionals.set(9);
      }
      if (struct.isSetCboPrescritorCodigo2002()) {
        optionals.set(10);
      }
      if (struct.isSetCid10MotivoIndicacao()) {
        optionals.set(11);
      }
      if (struct.isSetStPesquisaClinica()) {
        optionals.set(12);
      }
      if (struct.isSetAnvisaProtocoloEstudo()) {
        optionals.set(13);
      }
      if (struct.isSetAnvisaProtocoloVersao()) {
        optionals.set(14);
      }
      if (struct.isSetAnvisaNumeroRegistro()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetImunobiologico()) {
        oprot.writeI64(struct.imunobiologico);
      }
      if (struct.isSetEstrategiaVacinacao()) {
        oprot.writeI64(struct.estrategiaVacinacao);
      }
      if (struct.isSetDose()) {
        oprot.writeI64(struct.dose);
      }
      if (struct.isSetLote()) {
        oprot.writeString(struct.lote);
      }
      if (struct.isSetFabricante()) {
        oprot.writeString(struct.fabricante);
      }
      if (struct.isSetGrupoAtendimento()) {
        oprot.writeI64(struct.grupoAtendimento);
      }
      if (struct.isSetStRegistroAnterior()) {
        oprot.writeBool(struct.stRegistroAnterior);
      }
      if (struct.isSetDataRegistroAnterior()) {
        oprot.writeI64(struct.dataRegistroAnterior);
      }
      if (struct.isSetStAplicadoExterior()) {
        oprot.writeBool(struct.stAplicadoExterior);
      }
      if (struct.isSetUuidRnds()) {
        oprot.writeString(struct.uuidRnds);
      }
      if (struct.isSetCboPrescritorCodigo2002()) {
        oprot.writeString(struct.cboPrescritorCodigo2002);
      }
      if (struct.isSetCid10MotivoIndicacao()) {
        oprot.writeString(struct.cid10MotivoIndicacao);
      }
      if (struct.isSetStPesquisaClinica()) {
        oprot.writeBool(struct.stPesquisaClinica);
      }
      if (struct.isSetAnvisaProtocoloEstudo()) {
        oprot.writeString(struct.anvisaProtocoloEstudo);
      }
      if (struct.isSetAnvisaProtocoloVersao()) {
        oprot.writeString(struct.anvisaProtocoloVersao);
      }
      if (struct.isSetAnvisaNumeroRegistro()) {
        oprot.writeString(struct.anvisaNumeroRegistro);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, VacinaRowThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.imunobiologico = iprot.readI64();
        struct.setImunobiologicoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.estrategiaVacinacao = iprot.readI64();
        struct.setEstrategiaVacinacaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dose = iprot.readI64();
        struct.setDoseIsSet(true);
      }
      if (incoming.get(3)) {
        struct.lote = iprot.readString();
        struct.setLoteIsSet(true);
      }
      if (incoming.get(4)) {
        struct.fabricante = iprot.readString();
        struct.setFabricanteIsSet(true);
      }
      if (incoming.get(5)) {
        struct.grupoAtendimento = iprot.readI64();
        struct.setGrupoAtendimentoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.stRegistroAnterior = iprot.readBool();
        struct.setStRegistroAnteriorIsSet(true);
      }
      if (incoming.get(7)) {
        struct.dataRegistroAnterior = iprot.readI64();
        struct.setDataRegistroAnteriorIsSet(true);
      }
      if (incoming.get(8)) {
        struct.stAplicadoExterior = iprot.readBool();
        struct.setStAplicadoExteriorIsSet(true);
      }
      if (incoming.get(9)) {
        struct.uuidRnds = iprot.readString();
        struct.setUuidRndsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.cboPrescritorCodigo2002 = iprot.readString();
        struct.setCboPrescritorCodigo2002IsSet(true);
      }
      if (incoming.get(11)) {
        struct.cid10MotivoIndicacao = iprot.readString();
        struct.setCid10MotivoIndicacaoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.stPesquisaClinica = iprot.readBool();
        struct.setStPesquisaClinicaIsSet(true);
      }
      if (incoming.get(13)) {
        struct.anvisaProtocoloEstudo = iprot.readString();
        struct.setAnvisaProtocoloEstudoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.anvisaProtocoloVersao = iprot.readString();
        struct.setAnvisaProtocoloVersaoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.anvisaNumeroRegistro = iprot.readString();
        struct.setAnvisaNumeroRegistroIsSet(true);
      }
    }
  }

}

