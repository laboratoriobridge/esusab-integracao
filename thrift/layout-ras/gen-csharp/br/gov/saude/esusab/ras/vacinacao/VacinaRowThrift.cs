/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.vacinacao
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class VacinaRowThrift : TBase
  {
    private long _imunobiologico;
    private long _estrategiaVacinacao;
    private long _dose;
    private string _lote;
    private string _fabricante;
    private long _grupoAtendimento;
    private bool _stRegistroAnterior;
    private long _dataRegistroAnterior;
    private bool _stAplicadoExterior;
    private string _uuidRnds;
    private string _cboPrescritorCodigo2002;
    private string _cid10MotivoIndicacao;
    private bool _stPesquisaClinica;
    private string _anvisaProtocoloEstudo;
    private string _anvisaProtocoloVersao;
    private string _anvisaNumeroRegistro;

    public long Imunobiologico
    {
      get
      {
        return _imunobiologico;
      }
      set
      {
        __isset.imunobiologico = true;
        this._imunobiologico = value;
      }
    }

    public long EstrategiaVacinacao
    {
      get
      {
        return _estrategiaVacinacao;
      }
      set
      {
        __isset.estrategiaVacinacao = true;
        this._estrategiaVacinacao = value;
      }
    }

    public long Dose
    {
      get
      {
        return _dose;
      }
      set
      {
        __isset.dose = true;
        this._dose = value;
      }
    }

    public string Lote
    {
      get
      {
        return _lote;
      }
      set
      {
        __isset.lote = true;
        this._lote = value;
      }
    }

    public string Fabricante
    {
      get
      {
        return _fabricante;
      }
      set
      {
        __isset.fabricante = true;
        this._fabricante = value;
      }
    }

    public long GrupoAtendimento
    {
      get
      {
        return _grupoAtendimento;
      }
      set
      {
        __isset.grupoAtendimento = true;
        this._grupoAtendimento = value;
      }
    }

    public bool StRegistroAnterior
    {
      get
      {
        return _stRegistroAnterior;
      }
      set
      {
        __isset.stRegistroAnterior = true;
        this._stRegistroAnterior = value;
      }
    }

    public long DataRegistroAnterior
    {
      get
      {
        return _dataRegistroAnterior;
      }
      set
      {
        __isset.dataRegistroAnterior = true;
        this._dataRegistroAnterior = value;
      }
    }

    public bool StAplicadoExterior
    {
      get
      {
        return _stAplicadoExterior;
      }
      set
      {
        __isset.stAplicadoExterior = true;
        this._stAplicadoExterior = value;
      }
    }

    public string UuidRnds
    {
      get
      {
        return _uuidRnds;
      }
      set
      {
        __isset.uuidRnds = true;
        this._uuidRnds = value;
      }
    }

    public string CboPrescritorCodigo2002
    {
      get
      {
        return _cboPrescritorCodigo2002;
      }
      set
      {
        __isset.cboPrescritorCodigo2002 = true;
        this._cboPrescritorCodigo2002 = value;
      }
    }

    public string Cid10MotivoIndicacao
    {
      get
      {
        return _cid10MotivoIndicacao;
      }
      set
      {
        __isset.cid10MotivoIndicacao = true;
        this._cid10MotivoIndicacao = value;
      }
    }

    public bool StPesquisaClinica
    {
      get
      {
        return _stPesquisaClinica;
      }
      set
      {
        __isset.stPesquisaClinica = true;
        this._stPesquisaClinica = value;
      }
    }

    public string AnvisaProtocoloEstudo
    {
      get
      {
        return _anvisaProtocoloEstudo;
      }
      set
      {
        __isset.anvisaProtocoloEstudo = true;
        this._anvisaProtocoloEstudo = value;
      }
    }

    public string AnvisaProtocoloVersao
    {
      get
      {
        return _anvisaProtocoloVersao;
      }
      set
      {
        __isset.anvisaProtocoloVersao = true;
        this._anvisaProtocoloVersao = value;
      }
    }

    public string AnvisaNumeroRegistro
    {
      get
      {
        return _anvisaNumeroRegistro;
      }
      set
      {
        __isset.anvisaNumeroRegistro = true;
        this._anvisaNumeroRegistro = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool imunobiologico;
      public bool estrategiaVacinacao;
      public bool dose;
      public bool lote;
      public bool fabricante;
      public bool grupoAtendimento;
      public bool stRegistroAnterior;
      public bool dataRegistroAnterior;
      public bool stAplicadoExterior;
      public bool uuidRnds;
      public bool cboPrescritorCodigo2002;
      public bool cid10MotivoIndicacao;
      public bool stPesquisaClinica;
      public bool anvisaProtocoloEstudo;
      public bool anvisaProtocoloVersao;
      public bool anvisaNumeroRegistro;
    }

    public VacinaRowThrift() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I64) {
                Imunobiologico = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.I64) {
                EstrategiaVacinacao = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.I64) {
                Dose = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                Lote = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Fabricante = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I64) {
                GrupoAtendimento = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.Bool) {
                StRegistroAnterior = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.I64) {
                DataRegistroAnterior = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.Bool) {
                StAplicadoExterior = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.String) {
                UuidRnds = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 11:
              if (field.Type == TType.String) {
                CboPrescritorCodigo2002 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 12:
              if (field.Type == TType.String) {
                Cid10MotivoIndicacao = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 13:
              if (field.Type == TType.Bool) {
                StPesquisaClinica = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 14:
              if (field.Type == TType.String) {
                AnvisaProtocoloEstudo = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 15:
              if (field.Type == TType.String) {
                AnvisaProtocoloVersao = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 16:
              if (field.Type == TType.String) {
                AnvisaNumeroRegistro = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("VacinaRowThrift");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.imunobiologico) {
          field.Name = "imunobiologico";
          field.Type = TType.I64;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Imunobiologico);
          oprot.WriteFieldEnd();
        }
        if (__isset.estrategiaVacinacao) {
          field.Name = "estrategiaVacinacao";
          field.Type = TType.I64;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(EstrategiaVacinacao);
          oprot.WriteFieldEnd();
        }
        if (__isset.dose) {
          field.Name = "dose";
          field.Type = TType.I64;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Dose);
          oprot.WriteFieldEnd();
        }
        if (Lote != null && __isset.lote) {
          field.Name = "lote";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Lote);
          oprot.WriteFieldEnd();
        }
        if (Fabricante != null && __isset.fabricante) {
          field.Name = "fabricante";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Fabricante);
          oprot.WriteFieldEnd();
        }
        if (__isset.grupoAtendimento) {
          field.Name = "grupoAtendimento";
          field.Type = TType.I64;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(GrupoAtendimento);
          oprot.WriteFieldEnd();
        }
        if (__isset.stRegistroAnterior) {
          field.Name = "stRegistroAnterior";
          field.Type = TType.Bool;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(StRegistroAnterior);
          oprot.WriteFieldEnd();
        }
        if (__isset.dataRegistroAnterior) {
          field.Name = "dataRegistroAnterior";
          field.Type = TType.I64;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DataRegistroAnterior);
          oprot.WriteFieldEnd();
        }
        if (__isset.stAplicadoExterior) {
          field.Name = "stAplicadoExterior";
          field.Type = TType.Bool;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(StAplicadoExterior);
          oprot.WriteFieldEnd();
        }
        if (UuidRnds != null && __isset.uuidRnds) {
          field.Name = "uuidRnds";
          field.Type = TType.String;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UuidRnds);
          oprot.WriteFieldEnd();
        }
        if (CboPrescritorCodigo2002 != null && __isset.cboPrescritorCodigo2002) {
          field.Name = "cboPrescritorCodigo2002";
          field.Type = TType.String;
          field.ID = 11;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CboPrescritorCodigo2002);
          oprot.WriteFieldEnd();
        }
        if (Cid10MotivoIndicacao != null && __isset.cid10MotivoIndicacao) {
          field.Name = "cid10MotivoIndicacao";
          field.Type = TType.String;
          field.ID = 12;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cid10MotivoIndicacao);
          oprot.WriteFieldEnd();
        }
        if (__isset.stPesquisaClinica) {
          field.Name = "stPesquisaClinica";
          field.Type = TType.Bool;
          field.ID = 13;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(StPesquisaClinica);
          oprot.WriteFieldEnd();
        }
        if (AnvisaProtocoloEstudo != null && __isset.anvisaProtocoloEstudo) {
          field.Name = "anvisaProtocoloEstudo";
          field.Type = TType.String;
          field.ID = 14;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(AnvisaProtocoloEstudo);
          oprot.WriteFieldEnd();
        }
        if (AnvisaProtocoloVersao != null && __isset.anvisaProtocoloVersao) {
          field.Name = "anvisaProtocoloVersao";
          field.Type = TType.String;
          field.ID = 15;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(AnvisaProtocoloVersao);
          oprot.WriteFieldEnd();
        }
        if (AnvisaNumeroRegistro != null && __isset.anvisaNumeroRegistro) {
          field.Name = "anvisaNumeroRegistro";
          field.Type = TType.String;
          field.ID = 16;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(AnvisaNumeroRegistro);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("VacinaRowThrift(");
      bool __first = true;
      if (__isset.imunobiologico) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Imunobiologico: ");
        __sb.Append(Imunobiologico);
      }
      if (__isset.estrategiaVacinacao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EstrategiaVacinacao: ");
        __sb.Append(EstrategiaVacinacao);
      }
      if (__isset.dose) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dose: ");
        __sb.Append(Dose);
      }
      if (Lote != null && __isset.lote) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Lote: ");
        __sb.Append(Lote);
      }
      if (Fabricante != null && __isset.fabricante) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Fabricante: ");
        __sb.Append(Fabricante);
      }
      if (__isset.grupoAtendimento) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("GrupoAtendimento: ");
        __sb.Append(GrupoAtendimento);
      }
      if (__isset.stRegistroAnterior) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StRegistroAnterior: ");
        __sb.Append(StRegistroAnterior);
      }
      if (__isset.dataRegistroAnterior) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataRegistroAnterior: ");
        __sb.Append(DataRegistroAnterior);
      }
      if (__isset.stAplicadoExterior) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StAplicadoExterior: ");
        __sb.Append(StAplicadoExterior);
      }
      if (UuidRnds != null && __isset.uuidRnds) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UuidRnds: ");
        __sb.Append(UuidRnds);
      }
      if (CboPrescritorCodigo2002 != null && __isset.cboPrescritorCodigo2002) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CboPrescritorCodigo2002: ");
        __sb.Append(CboPrescritorCodigo2002);
      }
      if (Cid10MotivoIndicacao != null && __isset.cid10MotivoIndicacao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cid10MotivoIndicacao: ");
        __sb.Append(Cid10MotivoIndicacao);
      }
      if (__isset.stPesquisaClinica) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StPesquisaClinica: ");
        __sb.Append(StPesquisaClinica);
      }
      if (AnvisaProtocoloEstudo != null && __isset.anvisaProtocoloEstudo) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AnvisaProtocoloEstudo: ");
        __sb.Append(AnvisaProtocoloEstudo);
      }
      if (AnvisaProtocoloVersao != null && __isset.anvisaProtocoloVersao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AnvisaProtocoloVersao: ");
        __sb.Append(AnvisaProtocoloVersao);
      }
      if (AnvisaNumeroRegistro != null && __isset.anvisaNumeroRegistro) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("AnvisaNumeroRegistro: ");
        __sb.Append(AnvisaNumeroRegistro);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
