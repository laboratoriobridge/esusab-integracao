/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.cadastrodomiciliar;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-05")
public class CondicaoMoradiaThrift implements org.apache.thrift.TBase<CondicaoMoradiaThrift, CondicaoMoradiaThrift._Fields>, java.io.Serializable, Cloneable, Comparable<CondicaoMoradiaThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CondicaoMoradiaThrift");

  private static final org.apache.thrift.protocol.TField ABASTECIMENTO_AGUA_FIELD_DESC = new org.apache.thrift.protocol.TField("abastecimentoAgua", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField AREA_PRODUCAO_RURAL_FIELD_DESC = new org.apache.thrift.protocol.TField("areaProducaoRural", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField DESTINO_LIXO_FIELD_DESC = new org.apache.thrift.protocol.TField("destinoLixo", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField FORMA_ESCOAMENTO_BANHEIRO_FIELD_DESC = new org.apache.thrift.protocol.TField("formaEscoamentoBanheiro", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField LOCALIZACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("localizacao", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("materialPredominanteParedesExtDomicilio", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField NU_COMODOS_FIELD_DESC = new org.apache.thrift.protocol.TField("nuComodos", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField NU_MORADORES_FIELD_DESC = new org.apache.thrift.protocol.TField("nuMoradores", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SITUACAO_MORADIA_POSSE_TERRA_FIELD_DESC = new org.apache.thrift.protocol.TField("situacaoMoradiaPosseTerra", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField ST_DISPONIBILIDADE_ENERGIA_ELETRICA_FIELD_DESC = new org.apache.thrift.protocol.TField("stDisponibilidadeEnergiaEletrica", org.apache.thrift.protocol.TType.BOOL, (short)10);
  private static final org.apache.thrift.protocol.TField TIPO_ACESSO_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoAcessoDomicilio", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField TIPO_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoDomicilio", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField AGUA_CONSUMO_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("aguaConsumoDomicilio", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField TIPO_ORIGEM_ENERGIA_ELETRICA_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoOrigemEnergiaEletrica", org.apache.thrift.protocol.TType.I64, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CondicaoMoradiaThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CondicaoMoradiaThriftTupleSchemeFactory());
  }

  private long abastecimentoAgua; // optional
  private long areaProducaoRural; // optional
  private long destinoLixo; // optional
  private long formaEscoamentoBanheiro; // optional
  private long localizacao; // optional
  private long materialPredominanteParedesExtDomicilio; // optional
  private String nuComodos; // optional
  private String nuMoradores; // optional
  private long situacaoMoradiaPosseTerra; // optional
  private boolean stDisponibilidadeEnergiaEletrica; // optional
  private long tipoAcessoDomicilio; // optional
  private long tipoDomicilio; // optional
  private long aguaConsumoDomicilio; // optional
  private long tipoOrigemEnergiaEletrica; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ABASTECIMENTO_AGUA((short)1, "abastecimentoAgua"),
    AREA_PRODUCAO_RURAL((short)2, "areaProducaoRural"),
    DESTINO_LIXO((short)3, "destinoLixo"),
    FORMA_ESCOAMENTO_BANHEIRO((short)4, "formaEscoamentoBanheiro"),
    LOCALIZACAO((short)5, "localizacao"),
    MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO((short)6, "materialPredominanteParedesExtDomicilio"),
    NU_COMODOS((short)7, "nuComodos"),
    NU_MORADORES((short)8, "nuMoradores"),
    SITUACAO_MORADIA_POSSE_TERRA((short)9, "situacaoMoradiaPosseTerra"),
    ST_DISPONIBILIDADE_ENERGIA_ELETRICA((short)10, "stDisponibilidadeEnergiaEletrica"),
    TIPO_ACESSO_DOMICILIO((short)11, "tipoAcessoDomicilio"),
    TIPO_DOMICILIO((short)12, "tipoDomicilio"),
    AGUA_CONSUMO_DOMICILIO((short)13, "aguaConsumoDomicilio"),
    TIPO_ORIGEM_ENERGIA_ELETRICA((short)14, "tipoOrigemEnergiaEletrica");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ABASTECIMENTO_AGUA
          return ABASTECIMENTO_AGUA;
        case 2: // AREA_PRODUCAO_RURAL
          return AREA_PRODUCAO_RURAL;
        case 3: // DESTINO_LIXO
          return DESTINO_LIXO;
        case 4: // FORMA_ESCOAMENTO_BANHEIRO
          return FORMA_ESCOAMENTO_BANHEIRO;
        case 5: // LOCALIZACAO
          return LOCALIZACAO;
        case 6: // MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO
          return MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO;
        case 7: // NU_COMODOS
          return NU_COMODOS;
        case 8: // NU_MORADORES
          return NU_MORADORES;
        case 9: // SITUACAO_MORADIA_POSSE_TERRA
          return SITUACAO_MORADIA_POSSE_TERRA;
        case 10: // ST_DISPONIBILIDADE_ENERGIA_ELETRICA
          return ST_DISPONIBILIDADE_ENERGIA_ELETRICA;
        case 11: // TIPO_ACESSO_DOMICILIO
          return TIPO_ACESSO_DOMICILIO;
        case 12: // TIPO_DOMICILIO
          return TIPO_DOMICILIO;
        case 13: // AGUA_CONSUMO_DOMICILIO
          return AGUA_CONSUMO_DOMICILIO;
        case 14: // TIPO_ORIGEM_ENERGIA_ELETRICA
          return TIPO_ORIGEM_ENERGIA_ELETRICA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ABASTECIMENTOAGUA_ISSET_ID = 0;
  private static final int __AREAPRODUCAORURAL_ISSET_ID = 1;
  private static final int __DESTINOLIXO_ISSET_ID = 2;
  private static final int __FORMAESCOAMENTOBANHEIRO_ISSET_ID = 3;
  private static final int __LOCALIZACAO_ISSET_ID = 4;
  private static final int __MATERIALPREDOMINANTEPAREDESEXTDOMICILIO_ISSET_ID = 5;
  private static final int __SITUACAOMORADIAPOSSETERRA_ISSET_ID = 6;
  private static final int __STDISPONIBILIDADEENERGIAELETRICA_ISSET_ID = 7;
  private static final int __TIPOACESSODOMICILIO_ISSET_ID = 8;
  private static final int __TIPODOMICILIO_ISSET_ID = 9;
  private static final int __AGUACONSUMODOMICILIO_ISSET_ID = 10;
  private static final int __TIPOORIGEMENERGIAELETRICA_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ABASTECIMENTO_AGUA,_Fields.AREA_PRODUCAO_RURAL,_Fields.DESTINO_LIXO,_Fields.FORMA_ESCOAMENTO_BANHEIRO,_Fields.LOCALIZACAO,_Fields.MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO,_Fields.NU_COMODOS,_Fields.NU_MORADORES,_Fields.SITUACAO_MORADIA_POSSE_TERRA,_Fields.ST_DISPONIBILIDADE_ENERGIA_ELETRICA,_Fields.TIPO_ACESSO_DOMICILIO,_Fields.TIPO_DOMICILIO,_Fields.AGUA_CONSUMO_DOMICILIO,_Fields.TIPO_ORIGEM_ENERGIA_ELETRICA};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ABASTECIMENTO_AGUA, new org.apache.thrift.meta_data.FieldMetaData("abastecimentoAgua", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AREA_PRODUCAO_RURAL, new org.apache.thrift.meta_data.FieldMetaData("areaProducaoRural", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DESTINO_LIXO, new org.apache.thrift.meta_data.FieldMetaData("destinoLixo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FORMA_ESCOAMENTO_BANHEIRO, new org.apache.thrift.meta_data.FieldMetaData("formaEscoamentoBanheiro", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCALIZACAO, new org.apache.thrift.meta_data.FieldMetaData("localizacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("materialPredominanteParedesExtDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NU_COMODOS, new org.apache.thrift.meta_data.FieldMetaData("nuComodos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NU_MORADORES, new org.apache.thrift.meta_data.FieldMetaData("nuMoradores", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SITUACAO_MORADIA_POSSE_TERRA, new org.apache.thrift.meta_data.FieldMetaData("situacaoMoradiaPosseTerra", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ST_DISPONIBILIDADE_ENERGIA_ELETRICA, new org.apache.thrift.meta_data.FieldMetaData("stDisponibilidadeEnergiaEletrica", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TIPO_ACESSO_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("tipoAcessoDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIPO_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("tipoDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.AGUA_CONSUMO_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("aguaConsumoDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIPO_ORIGEM_ENERGIA_ELETRICA, new org.apache.thrift.meta_data.FieldMetaData("tipoOrigemEnergiaEletrica", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CondicaoMoradiaThrift.class, metaDataMap);
  }

  public CondicaoMoradiaThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CondicaoMoradiaThrift(CondicaoMoradiaThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.abastecimentoAgua = other.abastecimentoAgua;
    this.areaProducaoRural = other.areaProducaoRural;
    this.destinoLixo = other.destinoLixo;
    this.formaEscoamentoBanheiro = other.formaEscoamentoBanheiro;
    this.localizacao = other.localizacao;
    this.materialPredominanteParedesExtDomicilio = other.materialPredominanteParedesExtDomicilio;
    if (other.isSetNuComodos()) {
      this.nuComodos = other.nuComodos;
    }
    if (other.isSetNuMoradores()) {
      this.nuMoradores = other.nuMoradores;
    }
    this.situacaoMoradiaPosseTerra = other.situacaoMoradiaPosseTerra;
    this.stDisponibilidadeEnergiaEletrica = other.stDisponibilidadeEnergiaEletrica;
    this.tipoAcessoDomicilio = other.tipoAcessoDomicilio;
    this.tipoDomicilio = other.tipoDomicilio;
    this.aguaConsumoDomicilio = other.aguaConsumoDomicilio;
    this.tipoOrigemEnergiaEletrica = other.tipoOrigemEnergiaEletrica;
  }

  public CondicaoMoradiaThrift deepCopy() {
    return new CondicaoMoradiaThrift(this);
  }

  @Override
  public void clear() {
    setAbastecimentoAguaIsSet(false);
    this.abastecimentoAgua = 0;
    setAreaProducaoRuralIsSet(false);
    this.areaProducaoRural = 0;
    setDestinoLixoIsSet(false);
    this.destinoLixo = 0;
    setFormaEscoamentoBanheiroIsSet(false);
    this.formaEscoamentoBanheiro = 0;
    setLocalizacaoIsSet(false);
    this.localizacao = 0;
    setMaterialPredominanteParedesExtDomicilioIsSet(false);
    this.materialPredominanteParedesExtDomicilio = 0;
    this.nuComodos = null;
    this.nuMoradores = null;
    setSituacaoMoradiaPosseTerraIsSet(false);
    this.situacaoMoradiaPosseTerra = 0;
    setStDisponibilidadeEnergiaEletricaIsSet(false);
    this.stDisponibilidadeEnergiaEletrica = false;
    setTipoAcessoDomicilioIsSet(false);
    this.tipoAcessoDomicilio = 0;
    setTipoDomicilioIsSet(false);
    this.tipoDomicilio = 0;
    setAguaConsumoDomicilioIsSet(false);
    this.aguaConsumoDomicilio = 0;
    setTipoOrigemEnergiaEletricaIsSet(false);
    this.tipoOrigemEnergiaEletrica = 0;
  }

  public long getAbastecimentoAgua() {
    return this.abastecimentoAgua;
  }

  public void setAbastecimentoAgua(long abastecimentoAgua) {
    this.abastecimentoAgua = abastecimentoAgua;
    setAbastecimentoAguaIsSet(true);
  }

  public void unsetAbastecimentoAgua() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ABASTECIMENTOAGUA_ISSET_ID);
  }

  /** Returns true if field abastecimentoAgua is set (has been assigned a value) and false otherwise */
  public boolean isSetAbastecimentoAgua() {
    return EncodingUtils.testBit(__isset_bitfield, __ABASTECIMENTOAGUA_ISSET_ID);
  }

  public void setAbastecimentoAguaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ABASTECIMENTOAGUA_ISSET_ID, value);
  }

  public long getAreaProducaoRural() {
    return this.areaProducaoRural;
  }

  public void setAreaProducaoRural(long areaProducaoRural) {
    this.areaProducaoRural = areaProducaoRural;
    setAreaProducaoRuralIsSet(true);
  }

  public void unsetAreaProducaoRural() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AREAPRODUCAORURAL_ISSET_ID);
  }

  /** Returns true if field areaProducaoRural is set (has been assigned a value) and false otherwise */
  public boolean isSetAreaProducaoRural() {
    return EncodingUtils.testBit(__isset_bitfield, __AREAPRODUCAORURAL_ISSET_ID);
  }

  public void setAreaProducaoRuralIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AREAPRODUCAORURAL_ISSET_ID, value);
  }

  public long getDestinoLixo() {
    return this.destinoLixo;
  }

  public void setDestinoLixo(long destinoLixo) {
    this.destinoLixo = destinoLixo;
    setDestinoLixoIsSet(true);
  }

  public void unsetDestinoLixo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESTINOLIXO_ISSET_ID);
  }

  /** Returns true if field destinoLixo is set (has been assigned a value) and false otherwise */
  public boolean isSetDestinoLixo() {
    return EncodingUtils.testBit(__isset_bitfield, __DESTINOLIXO_ISSET_ID);
  }

  public void setDestinoLixoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESTINOLIXO_ISSET_ID, value);
  }

  public long getFormaEscoamentoBanheiro() {
    return this.formaEscoamentoBanheiro;
  }

  public void setFormaEscoamentoBanheiro(long formaEscoamentoBanheiro) {
    this.formaEscoamentoBanheiro = formaEscoamentoBanheiro;
    setFormaEscoamentoBanheiroIsSet(true);
  }

  public void unsetFormaEscoamentoBanheiro() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FORMAESCOAMENTOBANHEIRO_ISSET_ID);
  }

  /** Returns true if field formaEscoamentoBanheiro is set (has been assigned a value) and false otherwise */
  public boolean isSetFormaEscoamentoBanheiro() {
    return EncodingUtils.testBit(__isset_bitfield, __FORMAESCOAMENTOBANHEIRO_ISSET_ID);
  }

  public void setFormaEscoamentoBanheiroIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FORMAESCOAMENTOBANHEIRO_ISSET_ID, value);
  }

  public long getLocalizacao() {
    return this.localizacao;
  }

  public void setLocalizacao(long localizacao) {
    this.localizacao = localizacao;
    setLocalizacaoIsSet(true);
  }

  public void unsetLocalizacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCALIZACAO_ISSET_ID);
  }

  /** Returns true if field localizacao is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalizacao() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCALIZACAO_ISSET_ID);
  }

  public void setLocalizacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCALIZACAO_ISSET_ID, value);
  }

  public long getMaterialPredominanteParedesExtDomicilio() {
    return this.materialPredominanteParedesExtDomicilio;
  }

  public void setMaterialPredominanteParedesExtDomicilio(long materialPredominanteParedesExtDomicilio) {
    this.materialPredominanteParedesExtDomicilio = materialPredominanteParedesExtDomicilio;
    setMaterialPredominanteParedesExtDomicilioIsSet(true);
  }

  public void unsetMaterialPredominanteParedesExtDomicilio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MATERIALPREDOMINANTEPAREDESEXTDOMICILIO_ISSET_ID);
  }

  /** Returns true if field materialPredominanteParedesExtDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetMaterialPredominanteParedesExtDomicilio() {
    return EncodingUtils.testBit(__isset_bitfield, __MATERIALPREDOMINANTEPAREDESEXTDOMICILIO_ISSET_ID);
  }

  public void setMaterialPredominanteParedesExtDomicilioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MATERIALPREDOMINANTEPAREDESEXTDOMICILIO_ISSET_ID, value);
  }

  public String getNuComodos() {
    return this.nuComodos;
  }

  public void setNuComodos(String nuComodos) {
    this.nuComodos = nuComodos;
  }

  public void unsetNuComodos() {
    this.nuComodos = null;
  }

  /** Returns true if field nuComodos is set (has been assigned a value) and false otherwise */
  public boolean isSetNuComodos() {
    return this.nuComodos != null;
  }

  public void setNuComodosIsSet(boolean value) {
    if (!value) {
      this.nuComodos = null;
    }
  }

  public String getNuMoradores() {
    return this.nuMoradores;
  }

  public void setNuMoradores(String nuMoradores) {
    this.nuMoradores = nuMoradores;
  }

  public void unsetNuMoradores() {
    this.nuMoradores = null;
  }

  /** Returns true if field nuMoradores is set (has been assigned a value) and false otherwise */
  public boolean isSetNuMoradores() {
    return this.nuMoradores != null;
  }

  public void setNuMoradoresIsSet(boolean value) {
    if (!value) {
      this.nuMoradores = null;
    }
  }

  public long getSituacaoMoradiaPosseTerra() {
    return this.situacaoMoradiaPosseTerra;
  }

  public void setSituacaoMoradiaPosseTerra(long situacaoMoradiaPosseTerra) {
    this.situacaoMoradiaPosseTerra = situacaoMoradiaPosseTerra;
    setSituacaoMoradiaPosseTerraIsSet(true);
  }

  public void unsetSituacaoMoradiaPosseTerra() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SITUACAOMORADIAPOSSETERRA_ISSET_ID);
  }

  /** Returns true if field situacaoMoradiaPosseTerra is set (has been assigned a value) and false otherwise */
  public boolean isSetSituacaoMoradiaPosseTerra() {
    return EncodingUtils.testBit(__isset_bitfield, __SITUACAOMORADIAPOSSETERRA_ISSET_ID);
  }

  public void setSituacaoMoradiaPosseTerraIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SITUACAOMORADIAPOSSETERRA_ISSET_ID, value);
  }

  public boolean isStDisponibilidadeEnergiaEletrica() {
    return this.stDisponibilidadeEnergiaEletrica;
  }

  public void setStDisponibilidadeEnergiaEletrica(boolean stDisponibilidadeEnergiaEletrica) {
    this.stDisponibilidadeEnergiaEletrica = stDisponibilidadeEnergiaEletrica;
    setStDisponibilidadeEnergiaEletricaIsSet(true);
  }

  public void unsetStDisponibilidadeEnergiaEletrica() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STDISPONIBILIDADEENERGIAELETRICA_ISSET_ID);
  }

  /** Returns true if field stDisponibilidadeEnergiaEletrica is set (has been assigned a value) and false otherwise */
  public boolean isSetStDisponibilidadeEnergiaEletrica() {
    return EncodingUtils.testBit(__isset_bitfield, __STDISPONIBILIDADEENERGIAELETRICA_ISSET_ID);
  }

  public void setStDisponibilidadeEnergiaEletricaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STDISPONIBILIDADEENERGIAELETRICA_ISSET_ID, value);
  }

  public long getTipoAcessoDomicilio() {
    return this.tipoAcessoDomicilio;
  }

  public void setTipoAcessoDomicilio(long tipoAcessoDomicilio) {
    this.tipoAcessoDomicilio = tipoAcessoDomicilio;
    setTipoAcessoDomicilioIsSet(true);
  }

  public void unsetTipoAcessoDomicilio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOACESSODOMICILIO_ISSET_ID);
  }

  /** Returns true if field tipoAcessoDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoAcessoDomicilio() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOACESSODOMICILIO_ISSET_ID);
  }

  public void setTipoAcessoDomicilioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOACESSODOMICILIO_ISSET_ID, value);
  }

  public long getTipoDomicilio() {
    return this.tipoDomicilio;
  }

  public void setTipoDomicilio(long tipoDomicilio) {
    this.tipoDomicilio = tipoDomicilio;
    setTipoDomicilioIsSet(true);
  }

  public void unsetTipoDomicilio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPODOMICILIO_ISSET_ID);
  }

  /** Returns true if field tipoDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoDomicilio() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPODOMICILIO_ISSET_ID);
  }

  public void setTipoDomicilioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPODOMICILIO_ISSET_ID, value);
  }

  public long getAguaConsumoDomicilio() {
    return this.aguaConsumoDomicilio;
  }

  public void setAguaConsumoDomicilio(long aguaConsumoDomicilio) {
    this.aguaConsumoDomicilio = aguaConsumoDomicilio;
    setAguaConsumoDomicilioIsSet(true);
  }

  public void unsetAguaConsumoDomicilio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __AGUACONSUMODOMICILIO_ISSET_ID);
  }

  /** Returns true if field aguaConsumoDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetAguaConsumoDomicilio() {
    return EncodingUtils.testBit(__isset_bitfield, __AGUACONSUMODOMICILIO_ISSET_ID);
  }

  public void setAguaConsumoDomicilioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __AGUACONSUMODOMICILIO_ISSET_ID, value);
  }

  public long getTipoOrigemEnergiaEletrica() {
    return this.tipoOrigemEnergiaEletrica;
  }

  public void setTipoOrigemEnergiaEletrica(long tipoOrigemEnergiaEletrica) {
    this.tipoOrigemEnergiaEletrica = tipoOrigemEnergiaEletrica;
    setTipoOrigemEnergiaEletricaIsSet(true);
  }

  public void unsetTipoOrigemEnergiaEletrica() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOORIGEMENERGIAELETRICA_ISSET_ID);
  }

  /** Returns true if field tipoOrigemEnergiaEletrica is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoOrigemEnergiaEletrica() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOORIGEMENERGIAELETRICA_ISSET_ID);
  }

  public void setTipoOrigemEnergiaEletricaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOORIGEMENERGIAELETRICA_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ABASTECIMENTO_AGUA:
      if (value == null) {
        unsetAbastecimentoAgua();
      } else {
        setAbastecimentoAgua((Long)value);
      }
      break;

    case AREA_PRODUCAO_RURAL:
      if (value == null) {
        unsetAreaProducaoRural();
      } else {
        setAreaProducaoRural((Long)value);
      }
      break;

    case DESTINO_LIXO:
      if (value == null) {
        unsetDestinoLixo();
      } else {
        setDestinoLixo((Long)value);
      }
      break;

    case FORMA_ESCOAMENTO_BANHEIRO:
      if (value == null) {
        unsetFormaEscoamentoBanheiro();
      } else {
        setFormaEscoamentoBanheiro((Long)value);
      }
      break;

    case LOCALIZACAO:
      if (value == null) {
        unsetLocalizacao();
      } else {
        setLocalizacao((Long)value);
      }
      break;

    case MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO:
      if (value == null) {
        unsetMaterialPredominanteParedesExtDomicilio();
      } else {
        setMaterialPredominanteParedesExtDomicilio((Long)value);
      }
      break;

    case NU_COMODOS:
      if (value == null) {
        unsetNuComodos();
      } else {
        setNuComodos((String)value);
      }
      break;

    case NU_MORADORES:
      if (value == null) {
        unsetNuMoradores();
      } else {
        setNuMoradores((String)value);
      }
      break;

    case SITUACAO_MORADIA_POSSE_TERRA:
      if (value == null) {
        unsetSituacaoMoradiaPosseTerra();
      } else {
        setSituacaoMoradiaPosseTerra((Long)value);
      }
      break;

    case ST_DISPONIBILIDADE_ENERGIA_ELETRICA:
      if (value == null) {
        unsetStDisponibilidadeEnergiaEletrica();
      } else {
        setStDisponibilidadeEnergiaEletrica((Boolean)value);
      }
      break;

    case TIPO_ACESSO_DOMICILIO:
      if (value == null) {
        unsetTipoAcessoDomicilio();
      } else {
        setTipoAcessoDomicilio((Long)value);
      }
      break;

    case TIPO_DOMICILIO:
      if (value == null) {
        unsetTipoDomicilio();
      } else {
        setTipoDomicilio((Long)value);
      }
      break;

    case AGUA_CONSUMO_DOMICILIO:
      if (value == null) {
        unsetAguaConsumoDomicilio();
      } else {
        setAguaConsumoDomicilio((Long)value);
      }
      break;

    case TIPO_ORIGEM_ENERGIA_ELETRICA:
      if (value == null) {
        unsetTipoOrigemEnergiaEletrica();
      } else {
        setTipoOrigemEnergiaEletrica((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ABASTECIMENTO_AGUA:
      return getAbastecimentoAgua();

    case AREA_PRODUCAO_RURAL:
      return getAreaProducaoRural();

    case DESTINO_LIXO:
      return getDestinoLixo();

    case FORMA_ESCOAMENTO_BANHEIRO:
      return getFormaEscoamentoBanheiro();

    case LOCALIZACAO:
      return getLocalizacao();

    case MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO:
      return getMaterialPredominanteParedesExtDomicilio();

    case NU_COMODOS:
      return getNuComodos();

    case NU_MORADORES:
      return getNuMoradores();

    case SITUACAO_MORADIA_POSSE_TERRA:
      return getSituacaoMoradiaPosseTerra();

    case ST_DISPONIBILIDADE_ENERGIA_ELETRICA:
      return isStDisponibilidadeEnergiaEletrica();

    case TIPO_ACESSO_DOMICILIO:
      return getTipoAcessoDomicilio();

    case TIPO_DOMICILIO:
      return getTipoDomicilio();

    case AGUA_CONSUMO_DOMICILIO:
      return getAguaConsumoDomicilio();

    case TIPO_ORIGEM_ENERGIA_ELETRICA:
      return getTipoOrigemEnergiaEletrica();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ABASTECIMENTO_AGUA:
      return isSetAbastecimentoAgua();
    case AREA_PRODUCAO_RURAL:
      return isSetAreaProducaoRural();
    case DESTINO_LIXO:
      return isSetDestinoLixo();
    case FORMA_ESCOAMENTO_BANHEIRO:
      return isSetFormaEscoamentoBanheiro();
    case LOCALIZACAO:
      return isSetLocalizacao();
    case MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO:
      return isSetMaterialPredominanteParedesExtDomicilio();
    case NU_COMODOS:
      return isSetNuComodos();
    case NU_MORADORES:
      return isSetNuMoradores();
    case SITUACAO_MORADIA_POSSE_TERRA:
      return isSetSituacaoMoradiaPosseTerra();
    case ST_DISPONIBILIDADE_ENERGIA_ELETRICA:
      return isSetStDisponibilidadeEnergiaEletrica();
    case TIPO_ACESSO_DOMICILIO:
      return isSetTipoAcessoDomicilio();
    case TIPO_DOMICILIO:
      return isSetTipoDomicilio();
    case AGUA_CONSUMO_DOMICILIO:
      return isSetAguaConsumoDomicilio();
    case TIPO_ORIGEM_ENERGIA_ELETRICA:
      return isSetTipoOrigemEnergiaEletrica();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CondicaoMoradiaThrift)
      return this.equals((CondicaoMoradiaThrift)that);
    return false;
  }

  public boolean equals(CondicaoMoradiaThrift that) {
    if (that == null)
      return false;

    boolean this_present_abastecimentoAgua = true && this.isSetAbastecimentoAgua();
    boolean that_present_abastecimentoAgua = true && that.isSetAbastecimentoAgua();
    if (this_present_abastecimentoAgua || that_present_abastecimentoAgua) {
      if (!(this_present_abastecimentoAgua && that_present_abastecimentoAgua))
        return false;
      if (this.abastecimentoAgua != that.abastecimentoAgua)
        return false;
    }

    boolean this_present_areaProducaoRural = true && this.isSetAreaProducaoRural();
    boolean that_present_areaProducaoRural = true && that.isSetAreaProducaoRural();
    if (this_present_areaProducaoRural || that_present_areaProducaoRural) {
      if (!(this_present_areaProducaoRural && that_present_areaProducaoRural))
        return false;
      if (this.areaProducaoRural != that.areaProducaoRural)
        return false;
    }

    boolean this_present_destinoLixo = true && this.isSetDestinoLixo();
    boolean that_present_destinoLixo = true && that.isSetDestinoLixo();
    if (this_present_destinoLixo || that_present_destinoLixo) {
      if (!(this_present_destinoLixo && that_present_destinoLixo))
        return false;
      if (this.destinoLixo != that.destinoLixo)
        return false;
    }

    boolean this_present_formaEscoamentoBanheiro = true && this.isSetFormaEscoamentoBanheiro();
    boolean that_present_formaEscoamentoBanheiro = true && that.isSetFormaEscoamentoBanheiro();
    if (this_present_formaEscoamentoBanheiro || that_present_formaEscoamentoBanheiro) {
      if (!(this_present_formaEscoamentoBanheiro && that_present_formaEscoamentoBanheiro))
        return false;
      if (this.formaEscoamentoBanheiro != that.formaEscoamentoBanheiro)
        return false;
    }

    boolean this_present_localizacao = true && this.isSetLocalizacao();
    boolean that_present_localizacao = true && that.isSetLocalizacao();
    if (this_present_localizacao || that_present_localizacao) {
      if (!(this_present_localizacao && that_present_localizacao))
        return false;
      if (this.localizacao != that.localizacao)
        return false;
    }

    boolean this_present_materialPredominanteParedesExtDomicilio = true && this.isSetMaterialPredominanteParedesExtDomicilio();
    boolean that_present_materialPredominanteParedesExtDomicilio = true && that.isSetMaterialPredominanteParedesExtDomicilio();
    if (this_present_materialPredominanteParedesExtDomicilio || that_present_materialPredominanteParedesExtDomicilio) {
      if (!(this_present_materialPredominanteParedesExtDomicilio && that_present_materialPredominanteParedesExtDomicilio))
        return false;
      if (this.materialPredominanteParedesExtDomicilio != that.materialPredominanteParedesExtDomicilio)
        return false;
    }

    boolean this_present_nuComodos = true && this.isSetNuComodos();
    boolean that_present_nuComodos = true && that.isSetNuComodos();
    if (this_present_nuComodos || that_present_nuComodos) {
      if (!(this_present_nuComodos && that_present_nuComodos))
        return false;
      if (!this.nuComodos.equals(that.nuComodos))
        return false;
    }

    boolean this_present_nuMoradores = true && this.isSetNuMoradores();
    boolean that_present_nuMoradores = true && that.isSetNuMoradores();
    if (this_present_nuMoradores || that_present_nuMoradores) {
      if (!(this_present_nuMoradores && that_present_nuMoradores))
        return false;
      if (!this.nuMoradores.equals(that.nuMoradores))
        return false;
    }

    boolean this_present_situacaoMoradiaPosseTerra = true && this.isSetSituacaoMoradiaPosseTerra();
    boolean that_present_situacaoMoradiaPosseTerra = true && that.isSetSituacaoMoradiaPosseTerra();
    if (this_present_situacaoMoradiaPosseTerra || that_present_situacaoMoradiaPosseTerra) {
      if (!(this_present_situacaoMoradiaPosseTerra && that_present_situacaoMoradiaPosseTerra))
        return false;
      if (this.situacaoMoradiaPosseTerra != that.situacaoMoradiaPosseTerra)
        return false;
    }

    boolean this_present_stDisponibilidadeEnergiaEletrica = true && this.isSetStDisponibilidadeEnergiaEletrica();
    boolean that_present_stDisponibilidadeEnergiaEletrica = true && that.isSetStDisponibilidadeEnergiaEletrica();
    if (this_present_stDisponibilidadeEnergiaEletrica || that_present_stDisponibilidadeEnergiaEletrica) {
      if (!(this_present_stDisponibilidadeEnergiaEletrica && that_present_stDisponibilidadeEnergiaEletrica))
        return false;
      if (this.stDisponibilidadeEnergiaEletrica != that.stDisponibilidadeEnergiaEletrica)
        return false;
    }

    boolean this_present_tipoAcessoDomicilio = true && this.isSetTipoAcessoDomicilio();
    boolean that_present_tipoAcessoDomicilio = true && that.isSetTipoAcessoDomicilio();
    if (this_present_tipoAcessoDomicilio || that_present_tipoAcessoDomicilio) {
      if (!(this_present_tipoAcessoDomicilio && that_present_tipoAcessoDomicilio))
        return false;
      if (this.tipoAcessoDomicilio != that.tipoAcessoDomicilio)
        return false;
    }

    boolean this_present_tipoDomicilio = true && this.isSetTipoDomicilio();
    boolean that_present_tipoDomicilio = true && that.isSetTipoDomicilio();
    if (this_present_tipoDomicilio || that_present_tipoDomicilio) {
      if (!(this_present_tipoDomicilio && that_present_tipoDomicilio))
        return false;
      if (this.tipoDomicilio != that.tipoDomicilio)
        return false;
    }

    boolean this_present_aguaConsumoDomicilio = true && this.isSetAguaConsumoDomicilio();
    boolean that_present_aguaConsumoDomicilio = true && that.isSetAguaConsumoDomicilio();
    if (this_present_aguaConsumoDomicilio || that_present_aguaConsumoDomicilio) {
      if (!(this_present_aguaConsumoDomicilio && that_present_aguaConsumoDomicilio))
        return false;
      if (this.aguaConsumoDomicilio != that.aguaConsumoDomicilio)
        return false;
    }

    boolean this_present_tipoOrigemEnergiaEletrica = true && this.isSetTipoOrigemEnergiaEletrica();
    boolean that_present_tipoOrigemEnergiaEletrica = true && that.isSetTipoOrigemEnergiaEletrica();
    if (this_present_tipoOrigemEnergiaEletrica || that_present_tipoOrigemEnergiaEletrica) {
      if (!(this_present_tipoOrigemEnergiaEletrica && that_present_tipoOrigemEnergiaEletrica))
        return false;
      if (this.tipoOrigemEnergiaEletrica != that.tipoOrigemEnergiaEletrica)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_abastecimentoAgua = true && (isSetAbastecimentoAgua());
    list.add(present_abastecimentoAgua);
    if (present_abastecimentoAgua)
      list.add(abastecimentoAgua);

    boolean present_areaProducaoRural = true && (isSetAreaProducaoRural());
    list.add(present_areaProducaoRural);
    if (present_areaProducaoRural)
      list.add(areaProducaoRural);

    boolean present_destinoLixo = true && (isSetDestinoLixo());
    list.add(present_destinoLixo);
    if (present_destinoLixo)
      list.add(destinoLixo);

    boolean present_formaEscoamentoBanheiro = true && (isSetFormaEscoamentoBanheiro());
    list.add(present_formaEscoamentoBanheiro);
    if (present_formaEscoamentoBanheiro)
      list.add(formaEscoamentoBanheiro);

    boolean present_localizacao = true && (isSetLocalizacao());
    list.add(present_localizacao);
    if (present_localizacao)
      list.add(localizacao);

    boolean present_materialPredominanteParedesExtDomicilio = true && (isSetMaterialPredominanteParedesExtDomicilio());
    list.add(present_materialPredominanteParedesExtDomicilio);
    if (present_materialPredominanteParedesExtDomicilio)
      list.add(materialPredominanteParedesExtDomicilio);

    boolean present_nuComodos = true && (isSetNuComodos());
    list.add(present_nuComodos);
    if (present_nuComodos)
      list.add(nuComodos);

    boolean present_nuMoradores = true && (isSetNuMoradores());
    list.add(present_nuMoradores);
    if (present_nuMoradores)
      list.add(nuMoradores);

    boolean present_situacaoMoradiaPosseTerra = true && (isSetSituacaoMoradiaPosseTerra());
    list.add(present_situacaoMoradiaPosseTerra);
    if (present_situacaoMoradiaPosseTerra)
      list.add(situacaoMoradiaPosseTerra);

    boolean present_stDisponibilidadeEnergiaEletrica = true && (isSetStDisponibilidadeEnergiaEletrica());
    list.add(present_stDisponibilidadeEnergiaEletrica);
    if (present_stDisponibilidadeEnergiaEletrica)
      list.add(stDisponibilidadeEnergiaEletrica);

    boolean present_tipoAcessoDomicilio = true && (isSetTipoAcessoDomicilio());
    list.add(present_tipoAcessoDomicilio);
    if (present_tipoAcessoDomicilio)
      list.add(tipoAcessoDomicilio);

    boolean present_tipoDomicilio = true && (isSetTipoDomicilio());
    list.add(present_tipoDomicilio);
    if (present_tipoDomicilio)
      list.add(tipoDomicilio);

    boolean present_aguaConsumoDomicilio = true && (isSetAguaConsumoDomicilio());
    list.add(present_aguaConsumoDomicilio);
    if (present_aguaConsumoDomicilio)
      list.add(aguaConsumoDomicilio);

    boolean present_tipoOrigemEnergiaEletrica = true && (isSetTipoOrigemEnergiaEletrica());
    list.add(present_tipoOrigemEnergiaEletrica);
    if (present_tipoOrigemEnergiaEletrica)
      list.add(tipoOrigemEnergiaEletrica);

    return list.hashCode();
  }

  @Override
  public int compareTo(CondicaoMoradiaThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAbastecimentoAgua()).compareTo(other.isSetAbastecimentoAgua());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAbastecimentoAgua()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.abastecimentoAgua, other.abastecimentoAgua);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAreaProducaoRural()).compareTo(other.isSetAreaProducaoRural());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAreaProducaoRural()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.areaProducaoRural, other.areaProducaoRural);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDestinoLixo()).compareTo(other.isSetDestinoLixo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDestinoLixo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.destinoLixo, other.destinoLixo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFormaEscoamentoBanheiro()).compareTo(other.isSetFormaEscoamentoBanheiro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFormaEscoamentoBanheiro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.formaEscoamentoBanheiro, other.formaEscoamentoBanheiro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalizacao()).compareTo(other.isSetLocalizacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalizacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localizacao, other.localizacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaterialPredominanteParedesExtDomicilio()).compareTo(other.isSetMaterialPredominanteParedesExtDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaterialPredominanteParedesExtDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.materialPredominanteParedesExtDomicilio, other.materialPredominanteParedesExtDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNuComodos()).compareTo(other.isSetNuComodos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNuComodos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nuComodos, other.nuComodos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNuMoradores()).compareTo(other.isSetNuMoradores());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNuMoradores()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nuMoradores, other.nuMoradores);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSituacaoMoradiaPosseTerra()).compareTo(other.isSetSituacaoMoradiaPosseTerra());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSituacaoMoradiaPosseTerra()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.situacaoMoradiaPosseTerra, other.situacaoMoradiaPosseTerra);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStDisponibilidadeEnergiaEletrica()).compareTo(other.isSetStDisponibilidadeEnergiaEletrica());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStDisponibilidadeEnergiaEletrica()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stDisponibilidadeEnergiaEletrica, other.stDisponibilidadeEnergiaEletrica);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoAcessoDomicilio()).compareTo(other.isSetTipoAcessoDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoAcessoDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoAcessoDomicilio, other.tipoAcessoDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoDomicilio()).compareTo(other.isSetTipoDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoDomicilio, other.tipoDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAguaConsumoDomicilio()).compareTo(other.isSetAguaConsumoDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAguaConsumoDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aguaConsumoDomicilio, other.aguaConsumoDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoOrigemEnergiaEletrica()).compareTo(other.isSetTipoOrigemEnergiaEletrica());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoOrigemEnergiaEletrica()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoOrigemEnergiaEletrica, other.tipoOrigemEnergiaEletrica);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CondicaoMoradiaThrift(");
    boolean first = true;

    if (isSetAbastecimentoAgua()) {
      sb.append("abastecimentoAgua:");
      sb.append(this.abastecimentoAgua);
      first = false;
    }
    if (isSetAreaProducaoRural()) {
      if (!first) sb.append(", ");
      sb.append("areaProducaoRural:");
      sb.append(this.areaProducaoRural);
      first = false;
    }
    if (isSetDestinoLixo()) {
      if (!first) sb.append(", ");
      sb.append("destinoLixo:");
      sb.append(this.destinoLixo);
      first = false;
    }
    if (isSetFormaEscoamentoBanheiro()) {
      if (!first) sb.append(", ");
      sb.append("formaEscoamentoBanheiro:");
      sb.append(this.formaEscoamentoBanheiro);
      first = false;
    }
    if (isSetLocalizacao()) {
      if (!first) sb.append(", ");
      sb.append("localizacao:");
      sb.append(this.localizacao);
      first = false;
    }
    if (isSetMaterialPredominanteParedesExtDomicilio()) {
      if (!first) sb.append(", ");
      sb.append("materialPredominanteParedesExtDomicilio:");
      sb.append(this.materialPredominanteParedesExtDomicilio);
      first = false;
    }
    if (isSetNuComodos()) {
      if (!first) sb.append(", ");
      sb.append("nuComodos:");
      if (this.nuComodos == null) {
        sb.append("null");
      } else {
        sb.append(this.nuComodos);
      }
      first = false;
    }
    if (isSetNuMoradores()) {
      if (!first) sb.append(", ");
      sb.append("nuMoradores:");
      if (this.nuMoradores == null) {
        sb.append("null");
      } else {
        sb.append(this.nuMoradores);
      }
      first = false;
    }
    if (isSetSituacaoMoradiaPosseTerra()) {
      if (!first) sb.append(", ");
      sb.append("situacaoMoradiaPosseTerra:");
      sb.append(this.situacaoMoradiaPosseTerra);
      first = false;
    }
    if (isSetStDisponibilidadeEnergiaEletrica()) {
      if (!first) sb.append(", ");
      sb.append("stDisponibilidadeEnergiaEletrica:");
      sb.append(this.stDisponibilidadeEnergiaEletrica);
      first = false;
    }
    if (isSetTipoAcessoDomicilio()) {
      if (!first) sb.append(", ");
      sb.append("tipoAcessoDomicilio:");
      sb.append(this.tipoAcessoDomicilio);
      first = false;
    }
    if (isSetTipoDomicilio()) {
      if (!first) sb.append(", ");
      sb.append("tipoDomicilio:");
      sb.append(this.tipoDomicilio);
      first = false;
    }
    if (isSetAguaConsumoDomicilio()) {
      if (!first) sb.append(", ");
      sb.append("aguaConsumoDomicilio:");
      sb.append(this.aguaConsumoDomicilio);
      first = false;
    }
    if (isSetTipoOrigemEnergiaEletrica()) {
      if (!first) sb.append(", ");
      sb.append("tipoOrigemEnergiaEletrica:");
      sb.append(this.tipoOrigemEnergiaEletrica);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CondicaoMoradiaThriftStandardSchemeFactory implements SchemeFactory {
    public CondicaoMoradiaThriftStandardScheme getScheme() {
      return new CondicaoMoradiaThriftStandardScheme();
    }
  }

  private static class CondicaoMoradiaThriftStandardScheme extends StandardScheme<CondicaoMoradiaThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CondicaoMoradiaThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ABASTECIMENTO_AGUA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.abastecimentoAgua = iprot.readI64();
              struct.setAbastecimentoAguaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AREA_PRODUCAO_RURAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.areaProducaoRural = iprot.readI64();
              struct.setAreaProducaoRuralIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DESTINO_LIXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.destinoLixo = iprot.readI64();
              struct.setDestinoLixoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FORMA_ESCOAMENTO_BANHEIRO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.formaEscoamentoBanheiro = iprot.readI64();
              struct.setFormaEscoamentoBanheiroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LOCALIZACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.localizacao = iprot.readI64();
              struct.setLocalizacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.materialPredominanteParedesExtDomicilio = iprot.readI64();
              struct.setMaterialPredominanteParedesExtDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NU_COMODOS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nuComodos = iprot.readString();
              struct.setNuComodosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NU_MORADORES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nuMoradores = iprot.readString();
              struct.setNuMoradoresIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SITUACAO_MORADIA_POSSE_TERRA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.situacaoMoradiaPosseTerra = iprot.readI64();
              struct.setSituacaoMoradiaPosseTerraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ST_DISPONIBILIDADE_ENERGIA_ELETRICA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stDisponibilidadeEnergiaEletrica = iprot.readBool();
              struct.setStDisponibilidadeEnergiaEletricaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TIPO_ACESSO_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoAcessoDomicilio = iprot.readI64();
              struct.setTipoAcessoDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // TIPO_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoDomicilio = iprot.readI64();
              struct.setTipoDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // AGUA_CONSUMO_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.aguaConsumoDomicilio = iprot.readI64();
              struct.setAguaConsumoDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // TIPO_ORIGEM_ENERGIA_ELETRICA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoOrigemEnergiaEletrica = iprot.readI64();
              struct.setTipoOrigemEnergiaEletricaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CondicaoMoradiaThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAbastecimentoAgua()) {
        oprot.writeFieldBegin(ABASTECIMENTO_AGUA_FIELD_DESC);
        oprot.writeI64(struct.abastecimentoAgua);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAreaProducaoRural()) {
        oprot.writeFieldBegin(AREA_PRODUCAO_RURAL_FIELD_DESC);
        oprot.writeI64(struct.areaProducaoRural);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDestinoLixo()) {
        oprot.writeFieldBegin(DESTINO_LIXO_FIELD_DESC);
        oprot.writeI64(struct.destinoLixo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFormaEscoamentoBanheiro()) {
        oprot.writeFieldBegin(FORMA_ESCOAMENTO_BANHEIRO_FIELD_DESC);
        oprot.writeI64(struct.formaEscoamentoBanheiro);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLocalizacao()) {
        oprot.writeFieldBegin(LOCALIZACAO_FIELD_DESC);
        oprot.writeI64(struct.localizacao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetMaterialPredominanteParedesExtDomicilio()) {
        oprot.writeFieldBegin(MATERIAL_PREDOMINANTE_PAREDES_EXT_DOMICILIO_FIELD_DESC);
        oprot.writeI64(struct.materialPredominanteParedesExtDomicilio);
        oprot.writeFieldEnd();
      }
      if (struct.nuComodos != null) {
        if (struct.isSetNuComodos()) {
          oprot.writeFieldBegin(NU_COMODOS_FIELD_DESC);
          oprot.writeString(struct.nuComodos);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nuMoradores != null) {
        if (struct.isSetNuMoradores()) {
          oprot.writeFieldBegin(NU_MORADORES_FIELD_DESC);
          oprot.writeString(struct.nuMoradores);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSituacaoMoradiaPosseTerra()) {
        oprot.writeFieldBegin(SITUACAO_MORADIA_POSSE_TERRA_FIELD_DESC);
        oprot.writeI64(struct.situacaoMoradiaPosseTerra);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStDisponibilidadeEnergiaEletrica()) {
        oprot.writeFieldBegin(ST_DISPONIBILIDADE_ENERGIA_ELETRICA_FIELD_DESC);
        oprot.writeBool(struct.stDisponibilidadeEnergiaEletrica);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoAcessoDomicilio()) {
        oprot.writeFieldBegin(TIPO_ACESSO_DOMICILIO_FIELD_DESC);
        oprot.writeI64(struct.tipoAcessoDomicilio);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoDomicilio()) {
        oprot.writeFieldBegin(TIPO_DOMICILIO_FIELD_DESC);
        oprot.writeI64(struct.tipoDomicilio);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAguaConsumoDomicilio()) {
        oprot.writeFieldBegin(AGUA_CONSUMO_DOMICILIO_FIELD_DESC);
        oprot.writeI64(struct.aguaConsumoDomicilio);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoOrigemEnergiaEletrica()) {
        oprot.writeFieldBegin(TIPO_ORIGEM_ENERGIA_ELETRICA_FIELD_DESC);
        oprot.writeI64(struct.tipoOrigemEnergiaEletrica);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CondicaoMoradiaThriftTupleSchemeFactory implements SchemeFactory {
    public CondicaoMoradiaThriftTupleScheme getScheme() {
      return new CondicaoMoradiaThriftTupleScheme();
    }
  }

  private static class CondicaoMoradiaThriftTupleScheme extends TupleScheme<CondicaoMoradiaThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CondicaoMoradiaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAbastecimentoAgua()) {
        optionals.set(0);
      }
      if (struct.isSetAreaProducaoRural()) {
        optionals.set(1);
      }
      if (struct.isSetDestinoLixo()) {
        optionals.set(2);
      }
      if (struct.isSetFormaEscoamentoBanheiro()) {
        optionals.set(3);
      }
      if (struct.isSetLocalizacao()) {
        optionals.set(4);
      }
      if (struct.isSetMaterialPredominanteParedesExtDomicilio()) {
        optionals.set(5);
      }
      if (struct.isSetNuComodos()) {
        optionals.set(6);
      }
      if (struct.isSetNuMoradores()) {
        optionals.set(7);
      }
      if (struct.isSetSituacaoMoradiaPosseTerra()) {
        optionals.set(8);
      }
      if (struct.isSetStDisponibilidadeEnergiaEletrica()) {
        optionals.set(9);
      }
      if (struct.isSetTipoAcessoDomicilio()) {
        optionals.set(10);
      }
      if (struct.isSetTipoDomicilio()) {
        optionals.set(11);
      }
      if (struct.isSetAguaConsumoDomicilio()) {
        optionals.set(12);
      }
      if (struct.isSetTipoOrigemEnergiaEletrica()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetAbastecimentoAgua()) {
        oprot.writeI64(struct.abastecimentoAgua);
      }
      if (struct.isSetAreaProducaoRural()) {
        oprot.writeI64(struct.areaProducaoRural);
      }
      if (struct.isSetDestinoLixo()) {
        oprot.writeI64(struct.destinoLixo);
      }
      if (struct.isSetFormaEscoamentoBanheiro()) {
        oprot.writeI64(struct.formaEscoamentoBanheiro);
      }
      if (struct.isSetLocalizacao()) {
        oprot.writeI64(struct.localizacao);
      }
      if (struct.isSetMaterialPredominanteParedesExtDomicilio()) {
        oprot.writeI64(struct.materialPredominanteParedesExtDomicilio);
      }
      if (struct.isSetNuComodos()) {
        oprot.writeString(struct.nuComodos);
      }
      if (struct.isSetNuMoradores()) {
        oprot.writeString(struct.nuMoradores);
      }
      if (struct.isSetSituacaoMoradiaPosseTerra()) {
        oprot.writeI64(struct.situacaoMoradiaPosseTerra);
      }
      if (struct.isSetStDisponibilidadeEnergiaEletrica()) {
        oprot.writeBool(struct.stDisponibilidadeEnergiaEletrica);
      }
      if (struct.isSetTipoAcessoDomicilio()) {
        oprot.writeI64(struct.tipoAcessoDomicilio);
      }
      if (struct.isSetTipoDomicilio()) {
        oprot.writeI64(struct.tipoDomicilio);
      }
      if (struct.isSetAguaConsumoDomicilio()) {
        oprot.writeI64(struct.aguaConsumoDomicilio);
      }
      if (struct.isSetTipoOrigemEnergiaEletrica()) {
        oprot.writeI64(struct.tipoOrigemEnergiaEletrica);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CondicaoMoradiaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.abastecimentoAgua = iprot.readI64();
        struct.setAbastecimentoAguaIsSet(true);
      }
      if (incoming.get(1)) {
        struct.areaProducaoRural = iprot.readI64();
        struct.setAreaProducaoRuralIsSet(true);
      }
      if (incoming.get(2)) {
        struct.destinoLixo = iprot.readI64();
        struct.setDestinoLixoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.formaEscoamentoBanheiro = iprot.readI64();
        struct.setFormaEscoamentoBanheiroIsSet(true);
      }
      if (incoming.get(4)) {
        struct.localizacao = iprot.readI64();
        struct.setLocalizacaoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.materialPredominanteParedesExtDomicilio = iprot.readI64();
        struct.setMaterialPredominanteParedesExtDomicilioIsSet(true);
      }
      if (incoming.get(6)) {
        struct.nuComodos = iprot.readString();
        struct.setNuComodosIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nuMoradores = iprot.readString();
        struct.setNuMoradoresIsSet(true);
      }
      if (incoming.get(8)) {
        struct.situacaoMoradiaPosseTerra = iprot.readI64();
        struct.setSituacaoMoradiaPosseTerraIsSet(true);
      }
      if (incoming.get(9)) {
        struct.stDisponibilidadeEnergiaEletrica = iprot.readBool();
        struct.setStDisponibilidadeEnergiaEletricaIsSet(true);
      }
      if (incoming.get(10)) {
        struct.tipoAcessoDomicilio = iprot.readI64();
        struct.setTipoAcessoDomicilioIsSet(true);
      }
      if (incoming.get(11)) {
        struct.tipoDomicilio = iprot.readI64();
        struct.setTipoDomicilioIsSet(true);
      }
      if (incoming.get(12)) {
        struct.aguaConsumoDomicilio = iprot.readI64();
        struct.setAguaConsumoDomicilioIsSet(true);
      }
      if (incoming.get(13)) {
        struct.tipoOrigemEnergiaEletrica = iprot.readI64();
        struct.setTipoOrigemEnergiaEletricaIsSet(true);
      }
    }
  }

}

