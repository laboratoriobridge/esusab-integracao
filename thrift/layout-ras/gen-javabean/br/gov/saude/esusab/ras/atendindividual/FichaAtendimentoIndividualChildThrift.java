/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.atendindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2024-05-23")
public class FichaAtendimentoIndividualChildThrift implements org.apache.thrift.TBase<FichaAtendimentoIndividualChildThrift, FichaAtendimentoIndividualChildThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaAtendimentoIndividualChildThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAtendimentoIndividualChildThrift");

  private static final org.apache.thrift.protocol.TField NUMERO_PRONTUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroProntuario", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CNS_FIELD_DESC = new org.apache.thrift.protocol.TField("cns", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimento", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField LOCAL_DE_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("localDeAtendimento", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField TIPO_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoAtendimento", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField PESO_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("pesoAcompanhamentoNutricional", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField ALTURA_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("alturaAcompanhamentoNutricional", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField ALEITAMENTO_MATERNO_FIELD_DESC = new org.apache.thrift.protocol.TField("aleitamentoMaterno", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField DUM_DA_GESTANTE_FIELD_DESC = new org.apache.thrift.protocol.TField("dumDaGestante", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField IDADE_GESTACIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("idadeGestacional", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarModalidade", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField PROBLEMA_CONDICAO_AVALIADA_FIELD_DESC = new org.apache.thrift.protocol.TField("problemaCondicaoAvaliada", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField EXAME_FIELD_DESC = new org.apache.thrift.protocol.TField("exame", org.apache.thrift.protocol.TType.LIST, (short)17);
  private static final org.apache.thrift.protocol.TField VACINA_EM_DIA_FIELD_DESC = new org.apache.thrift.protocol.TField("vacinaEmDia", org.apache.thrift.protocol.TType.BOOL, (short)18);
  private static final org.apache.thrift.protocol.TField PIC_FIELD_DESC = new org.apache.thrift.protocol.TField("pic", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField FICOU_EM_OBSERVACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("ficouEmObservacao", org.apache.thrift.protocol.TType.BOOL, (short)20);
  private static final org.apache.thrift.protocol.TField NASFS_FIELD_DESC = new org.apache.thrift.protocol.TField("nasfs", org.apache.thrift.protocol.TType.LIST, (short)21);
  private static final org.apache.thrift.protocol.TField CONDUTAS_FIELD_DESC = new org.apache.thrift.protocol.TField("condutas", org.apache.thrift.protocol.TType.LIST, (short)22);
  private static final org.apache.thrift.protocol.TField ST_GRAVIDEZ_PLANEJADA_FIELD_DESC = new org.apache.thrift.protocol.TField("stGravidezPlanejada", org.apache.thrift.protocol.TType.BOOL, (short)23);
  private static final org.apache.thrift.protocol.TField NU_GESTAS_PREVIAS_FIELD_DESC = new org.apache.thrift.protocol.TField("nuGestasPrevias", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField NU_PARTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("nuPartos", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField RACIONALIDADE_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("racionalidadeSaude", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField PERIMETRO_CEFALICO_FIELD_DESC = new org.apache.thrift.protocol.TField("perimetroCefalico", org.apache.thrift.protocol.TType.DOUBLE, (short)27);
  private static final org.apache.thrift.protocol.TField DATA_HORA_INICIAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataHoraInicialAtendimento", org.apache.thrift.protocol.TType.I64, (short)28);
  private static final org.apache.thrift.protocol.TField DATA_HORA_FINAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataHoraFinalAtendimento", org.apache.thrift.protocol.TType.I64, (short)29);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField MEDICAMENTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("medicamentos", org.apache.thrift.protocol.TType.LIST, (short)31);
  private static final org.apache.thrift.protocol.TField ENCAMINHAMENTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("encaminhamentos", org.apache.thrift.protocol.TType.LIST, (short)32);
  private static final org.apache.thrift.protocol.TField RESULTADOS_EXAMES_FIELD_DESC = new org.apache.thrift.protocol.TField("resultadosExames", org.apache.thrift.protocol.TType.LIST, (short)33);
  private static final org.apache.thrift.protocol.TField UUID_RNDS_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidRnds", org.apache.thrift.protocol.TType.STRING, (short)34);
  private static final org.apache.thrift.protocol.TField FINALIZADOR_OBSERVACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("finalizadorObservacao", org.apache.thrift.protocol.TType.STRUCT, (short)35);
  private static final org.apache.thrift.protocol.TField TIPO_PARTICIPACAO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoParticipacaoCidadao", org.apache.thrift.protocol.TType.I64, (short)36);
  private static final org.apache.thrift.protocol.TField TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoParticipacaoProfissionalConvidado", org.apache.thrift.protocol.TType.I64, (short)37);
  private static final org.apache.thrift.protocol.TField EMULTIS_FIELD_DESC = new org.apache.thrift.protocol.TField("emultis", org.apache.thrift.protocol.TType.LIST, (short)38);
  private static final org.apache.thrift.protocol.TField MEDICOES_FIELD_DESC = new org.apache.thrift.protocol.TField("medicoes", org.apache.thrift.protocol.TType.STRUCT, (short)39);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAtendimentoIndividualChildThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAtendimentoIndividualChildThriftTupleSchemeFactory());
  }

  private String numeroProntuario; // optional
  private String cns; // optional
  private long dataNascimento; // optional
  private long localDeAtendimento; // optional
  private long sexo; // optional
  private long turno; // optional
  private long tipoAtendimento; // optional
  private double pesoAcompanhamentoNutricional; // optional
  private double alturaAcompanhamentoNutricional; // optional
  private long aleitamentoMaterno; // optional
  private long dumDaGestante; // optional
  private int idadeGestacional; // optional
  private long atencaoDomiciliarModalidade; // optional
  private ProblemaCondicaoAvaliacaoAIThrift problemaCondicaoAvaliada; // optional
  private List<ExameThrift> exame; // optional
  private boolean vacinaEmDia; // optional
  private long pic; // optional
  private boolean ficouEmObservacao; // optional
  private List<Long> nasfs; // optional
  private List<Long> condutas; // optional
  private boolean stGravidezPlanejada; // optional
  private int nuGestasPrevias; // optional
  private int nuPartos; // optional
  private long racionalidadeSaude; // optional
  private double perimetroCefalico; // optional
  private long dataHoraInicialAtendimento; // optional
  private long dataHoraFinalAtendimento; // optional
  private String cpfCidadao; // optional
  private List<br.gov.saude.esusab.ras.common.MedicamentoThrift> medicamentos; // optional
  private List<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift> encaminhamentos; // optional
  private List<br.gov.saude.esusab.ras.common.ResultadosExameThrift> resultadosExames; // optional
  private String uuidRnds; // optional
  private br.gov.saude.esusab.ras.common.LotacaoHeaderThrift finalizadorObservacao; // optional
  private long tipoParticipacaoCidadao; // optional
  private long tipoParticipacaoProfissionalConvidado; // optional
  private List<Long> emultis; // optional
  private br.gov.saude.esusab.ras.common.MedicoesThrift medicoes; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NUMERO_PRONTUARIO((short)1, "numeroProntuario"),
    CNS((short)2, "cns"),
    DATA_NASCIMENTO((short)3, "dataNascimento"),
    LOCAL_DE_ATENDIMENTO((short)4, "localDeAtendimento"),
    SEXO((short)5, "sexo"),
    TURNO((short)6, "turno"),
    TIPO_ATENDIMENTO((short)7, "tipoAtendimento"),
    PESO_ACOMPANHAMENTO_NUTRICIONAL((short)8, "pesoAcompanhamentoNutricional"),
    ALTURA_ACOMPANHAMENTO_NUTRICIONAL((short)9, "alturaAcompanhamentoNutricional"),
    ALEITAMENTO_MATERNO((short)10, "aleitamentoMaterno"),
    DUM_DA_GESTANTE((short)11, "dumDaGestante"),
    IDADE_GESTACIONAL((short)12, "idadeGestacional"),
    ATENCAO_DOMICILIAR_MODALIDADE((short)13, "atencaoDomiciliarModalidade"),
    PROBLEMA_CONDICAO_AVALIADA((short)14, "problemaCondicaoAvaliada"),
    EXAME((short)17, "exame"),
    VACINA_EM_DIA((short)18, "vacinaEmDia"),
    PIC((short)19, "pic"),
    FICOU_EM_OBSERVACAO((short)20, "ficouEmObservacao"),
    NASFS((short)21, "nasfs"),
    CONDUTAS((short)22, "condutas"),
    ST_GRAVIDEZ_PLANEJADA((short)23, "stGravidezPlanejada"),
    NU_GESTAS_PREVIAS((short)24, "nuGestasPrevias"),
    NU_PARTOS((short)25, "nuPartos"),
    RACIONALIDADE_SAUDE((short)26, "racionalidadeSaude"),
    PERIMETRO_CEFALICO((short)27, "perimetroCefalico"),
    DATA_HORA_INICIAL_ATENDIMENTO((short)28, "dataHoraInicialAtendimento"),
    DATA_HORA_FINAL_ATENDIMENTO((short)29, "dataHoraFinalAtendimento"),
    CPF_CIDADAO((short)30, "cpfCidadao"),
    MEDICAMENTOS((short)31, "medicamentos"),
    ENCAMINHAMENTOS((short)32, "encaminhamentos"),
    RESULTADOS_EXAMES((short)33, "resultadosExames"),
    UUID_RNDS((short)34, "uuidRnds"),
    FINALIZADOR_OBSERVACAO((short)35, "finalizadorObservacao"),
    TIPO_PARTICIPACAO_CIDADAO((short)36, "tipoParticipacaoCidadao"),
    TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO((short)37, "tipoParticipacaoProfissionalConvidado"),
    EMULTIS((short)38, "emultis"),
    MEDICOES((short)39, "medicoes");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NUMERO_PRONTUARIO
          return NUMERO_PRONTUARIO;
        case 2: // CNS
          return CNS;
        case 3: // DATA_NASCIMENTO
          return DATA_NASCIMENTO;
        case 4: // LOCAL_DE_ATENDIMENTO
          return LOCAL_DE_ATENDIMENTO;
        case 5: // SEXO
          return SEXO;
        case 6: // TURNO
          return TURNO;
        case 7: // TIPO_ATENDIMENTO
          return TIPO_ATENDIMENTO;
        case 8: // PESO_ACOMPANHAMENTO_NUTRICIONAL
          return PESO_ACOMPANHAMENTO_NUTRICIONAL;
        case 9: // ALTURA_ACOMPANHAMENTO_NUTRICIONAL
          return ALTURA_ACOMPANHAMENTO_NUTRICIONAL;
        case 10: // ALEITAMENTO_MATERNO
          return ALEITAMENTO_MATERNO;
        case 11: // DUM_DA_GESTANTE
          return DUM_DA_GESTANTE;
        case 12: // IDADE_GESTACIONAL
          return IDADE_GESTACIONAL;
        case 13: // ATENCAO_DOMICILIAR_MODALIDADE
          return ATENCAO_DOMICILIAR_MODALIDADE;
        case 14: // PROBLEMA_CONDICAO_AVALIADA
          return PROBLEMA_CONDICAO_AVALIADA;
        case 17: // EXAME
          return EXAME;
        case 18: // VACINA_EM_DIA
          return VACINA_EM_DIA;
        case 19: // PIC
          return PIC;
        case 20: // FICOU_EM_OBSERVACAO
          return FICOU_EM_OBSERVACAO;
        case 21: // NASFS
          return NASFS;
        case 22: // CONDUTAS
          return CONDUTAS;
        case 23: // ST_GRAVIDEZ_PLANEJADA
          return ST_GRAVIDEZ_PLANEJADA;
        case 24: // NU_GESTAS_PREVIAS
          return NU_GESTAS_PREVIAS;
        case 25: // NU_PARTOS
          return NU_PARTOS;
        case 26: // RACIONALIDADE_SAUDE
          return RACIONALIDADE_SAUDE;
        case 27: // PERIMETRO_CEFALICO
          return PERIMETRO_CEFALICO;
        case 28: // DATA_HORA_INICIAL_ATENDIMENTO
          return DATA_HORA_INICIAL_ATENDIMENTO;
        case 29: // DATA_HORA_FINAL_ATENDIMENTO
          return DATA_HORA_FINAL_ATENDIMENTO;
        case 30: // CPF_CIDADAO
          return CPF_CIDADAO;
        case 31: // MEDICAMENTOS
          return MEDICAMENTOS;
        case 32: // ENCAMINHAMENTOS
          return ENCAMINHAMENTOS;
        case 33: // RESULTADOS_EXAMES
          return RESULTADOS_EXAMES;
        case 34: // UUID_RNDS
          return UUID_RNDS;
        case 35: // FINALIZADOR_OBSERVACAO
          return FINALIZADOR_OBSERVACAO;
        case 36: // TIPO_PARTICIPACAO_CIDADAO
          return TIPO_PARTICIPACAO_CIDADAO;
        case 37: // TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO
          return TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO;
        case 38: // EMULTIS
          return EMULTIS;
        case 39: // MEDICOES
          return MEDICOES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATANASCIMENTO_ISSET_ID = 0;
  private static final int __LOCALDEATENDIMENTO_ISSET_ID = 1;
  private static final int __SEXO_ISSET_ID = 2;
  private static final int __TURNO_ISSET_ID = 3;
  private static final int __TIPOATENDIMENTO_ISSET_ID = 4;
  private static final int __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID = 5;
  private static final int __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID = 6;
  private static final int __ALEITAMENTOMATERNO_ISSET_ID = 7;
  private static final int __DUMDAGESTANTE_ISSET_ID = 8;
  private static final int __IDADEGESTACIONAL_ISSET_ID = 9;
  private static final int __ATENCAODOMICILIARMODALIDADE_ISSET_ID = 10;
  private static final int __VACINAEMDIA_ISSET_ID = 11;
  private static final int __PIC_ISSET_ID = 12;
  private static final int __FICOUEMOBSERVACAO_ISSET_ID = 13;
  private static final int __STGRAVIDEZPLANEJADA_ISSET_ID = 14;
  private static final int __NUGESTASPREVIAS_ISSET_ID = 15;
  private static final int __NUPARTOS_ISSET_ID = 16;
  private static final int __RACIONALIDADESAUDE_ISSET_ID = 17;
  private static final int __PERIMETROCEFALICO_ISSET_ID = 18;
  private static final int __DATAHORAINICIALATENDIMENTO_ISSET_ID = 19;
  private static final int __DATAHORAFINALATENDIMENTO_ISSET_ID = 20;
  private static final int __TIPOPARTICIPACAOCIDADAO_ISSET_ID = 21;
  private static final int __TIPOPARTICIPACAOPROFISSIONALCONVIDADO_ISSET_ID = 22;
  private int __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.NUMERO_PRONTUARIO,_Fields.CNS,_Fields.DATA_NASCIMENTO,_Fields.LOCAL_DE_ATENDIMENTO,_Fields.SEXO,_Fields.TURNO,_Fields.TIPO_ATENDIMENTO,_Fields.PESO_ACOMPANHAMENTO_NUTRICIONAL,_Fields.ALTURA_ACOMPANHAMENTO_NUTRICIONAL,_Fields.ALEITAMENTO_MATERNO,_Fields.DUM_DA_GESTANTE,_Fields.IDADE_GESTACIONAL,_Fields.ATENCAO_DOMICILIAR_MODALIDADE,_Fields.PROBLEMA_CONDICAO_AVALIADA,_Fields.EXAME,_Fields.VACINA_EM_DIA,_Fields.PIC,_Fields.FICOU_EM_OBSERVACAO,_Fields.NASFS,_Fields.CONDUTAS,_Fields.ST_GRAVIDEZ_PLANEJADA,_Fields.NU_GESTAS_PREVIAS,_Fields.NU_PARTOS,_Fields.RACIONALIDADE_SAUDE,_Fields.PERIMETRO_CEFALICO,_Fields.DATA_HORA_INICIAL_ATENDIMENTO,_Fields.DATA_HORA_FINAL_ATENDIMENTO,_Fields.CPF_CIDADAO,_Fields.MEDICAMENTOS,_Fields.ENCAMINHAMENTOS,_Fields.RESULTADOS_EXAMES,_Fields.UUID_RNDS,_Fields.FINALIZADOR_OBSERVACAO,_Fields.TIPO_PARTICIPACAO_CIDADAO,_Fields.TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO,_Fields.EMULTIS,_Fields.MEDICOES};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NUMERO_PRONTUARIO, new org.apache.thrift.meta_data.FieldMetaData("numeroProntuario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNS, new org.apache.thrift.meta_data.FieldMetaData("cns", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCAL_DE_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("localDeAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIPO_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("tipoAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PESO_ACOMPANHAMENTO_NUTRICIONAL, new org.apache.thrift.meta_data.FieldMetaData("pesoAcompanhamentoNutricional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ALTURA_ACOMPANHAMENTO_NUTRICIONAL, new org.apache.thrift.meta_data.FieldMetaData("alturaAcompanhamentoNutricional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ALEITAMENTO_MATERNO, new org.apache.thrift.meta_data.FieldMetaData("aleitamentoMaterno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DUM_DA_GESTANTE, new org.apache.thrift.meta_data.FieldMetaData("dumDaGestante", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IDADE_GESTACIONAL, new org.apache.thrift.meta_data.FieldMetaData("idadeGestacional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_MODALIDADE, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarModalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROBLEMA_CONDICAO_AVALIADA, new org.apache.thrift.meta_data.FieldMetaData("problemaCondicaoAvaliada", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProblemaCondicaoAvaliacaoAIThrift.class)));
    tmpMap.put(_Fields.EXAME, new org.apache.thrift.meta_data.FieldMetaData("exame", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ExameThrift.class))));
    tmpMap.put(_Fields.VACINA_EM_DIA, new org.apache.thrift.meta_data.FieldMetaData("vacinaEmDia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PIC, new org.apache.thrift.meta_data.FieldMetaData("pic", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FICOU_EM_OBSERVACAO, new org.apache.thrift.meta_data.FieldMetaData("ficouEmObservacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NASFS, new org.apache.thrift.meta_data.FieldMetaData("nasfs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CONDUTAS, new org.apache.thrift.meta_data.FieldMetaData("condutas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.ST_GRAVIDEZ_PLANEJADA, new org.apache.thrift.meta_data.FieldMetaData("stGravidezPlanejada", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NU_GESTAS_PREVIAS, new org.apache.thrift.meta_data.FieldMetaData("nuGestasPrevias", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NU_PARTOS, new org.apache.thrift.meta_data.FieldMetaData("nuPartos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.RACIONALIDADE_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("racionalidadeSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PERIMETRO_CEFALICO, new org.apache.thrift.meta_data.FieldMetaData("perimetroCefalico", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DATA_HORA_INICIAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataHoraInicialAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DATA_HORA_FINAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataHoraFinalAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEDICAMENTOS, new org.apache.thrift.meta_data.FieldMetaData("medicamentos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.MedicamentoThrift.class))));
    tmpMap.put(_Fields.ENCAMINHAMENTOS, new org.apache.thrift.meta_data.FieldMetaData("encaminhamentos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift.class))));
    tmpMap.put(_Fields.RESULTADOS_EXAMES, new org.apache.thrift.meta_data.FieldMetaData("resultadosExames", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.ResultadosExameThrift.class))));
    tmpMap.put(_Fields.UUID_RNDS, new org.apache.thrift.meta_data.FieldMetaData("uuidRnds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FINALIZADOR_OBSERVACAO, new org.apache.thrift.meta_data.FieldMetaData("finalizadorObservacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.LotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.TIPO_PARTICIPACAO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("tipoParticipacaoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO, new org.apache.thrift.meta_data.FieldMetaData("tipoParticipacaoProfissionalConvidado", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EMULTIS, new org.apache.thrift.meta_data.FieldMetaData("emultis", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.MEDICOES, new org.apache.thrift.meta_data.FieldMetaData("medicoes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.MedicoesThrift.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAtendimentoIndividualChildThrift.class, metaDataMap);
  }

  public FichaAtendimentoIndividualChildThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAtendimentoIndividualChildThrift(FichaAtendimentoIndividualChildThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetNumeroProntuario()) {
      this.numeroProntuario = other.numeroProntuario;
    }
    if (other.isSetCns()) {
      this.cns = other.cns;
    }
    this.dataNascimento = other.dataNascimento;
    this.localDeAtendimento = other.localDeAtendimento;
    this.sexo = other.sexo;
    this.turno = other.turno;
    this.tipoAtendimento = other.tipoAtendimento;
    this.pesoAcompanhamentoNutricional = other.pesoAcompanhamentoNutricional;
    this.alturaAcompanhamentoNutricional = other.alturaAcompanhamentoNutricional;
    this.aleitamentoMaterno = other.aleitamentoMaterno;
    this.dumDaGestante = other.dumDaGestante;
    this.idadeGestacional = other.idadeGestacional;
    this.atencaoDomiciliarModalidade = other.atencaoDomiciliarModalidade;
    if (other.isSetProblemaCondicaoAvaliada()) {
      this.problemaCondicaoAvaliada = new ProblemaCondicaoAvaliacaoAIThrift(other.problemaCondicaoAvaliada);
    }
    if (other.isSetExame()) {
      List<ExameThrift> __this__exame = new ArrayList<ExameThrift>(other.exame.size());
      for (ExameThrift other_element : other.exame) {
        __this__exame.add(new ExameThrift(other_element));
      }
      this.exame = __this__exame;
    }
    this.vacinaEmDia = other.vacinaEmDia;
    this.pic = other.pic;
    this.ficouEmObservacao = other.ficouEmObservacao;
    if (other.isSetNasfs()) {
      List<Long> __this__nasfs = new ArrayList<Long>(other.nasfs);
      this.nasfs = __this__nasfs;
    }
    if (other.isSetCondutas()) {
      List<Long> __this__condutas = new ArrayList<Long>(other.condutas);
      this.condutas = __this__condutas;
    }
    this.stGravidezPlanejada = other.stGravidezPlanejada;
    this.nuGestasPrevias = other.nuGestasPrevias;
    this.nuPartos = other.nuPartos;
    this.racionalidadeSaude = other.racionalidadeSaude;
    this.perimetroCefalico = other.perimetroCefalico;
    this.dataHoraInicialAtendimento = other.dataHoraInicialAtendimento;
    this.dataHoraFinalAtendimento = other.dataHoraFinalAtendimento;
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
    if (other.isSetMedicamentos()) {
      List<br.gov.saude.esusab.ras.common.MedicamentoThrift> __this__medicamentos = new ArrayList<br.gov.saude.esusab.ras.common.MedicamentoThrift>(other.medicamentos.size());
      for (br.gov.saude.esusab.ras.common.MedicamentoThrift other_element : other.medicamentos) {
        __this__medicamentos.add(new br.gov.saude.esusab.ras.common.MedicamentoThrift(other_element));
      }
      this.medicamentos = __this__medicamentos;
    }
    if (other.isSetEncaminhamentos()) {
      List<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift> __this__encaminhamentos = new ArrayList<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift>(other.encaminhamentos.size());
      for (br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift other_element : other.encaminhamentos) {
        __this__encaminhamentos.add(new br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift(other_element));
      }
      this.encaminhamentos = __this__encaminhamentos;
    }
    if (other.isSetResultadosExames()) {
      List<br.gov.saude.esusab.ras.common.ResultadosExameThrift> __this__resultadosExames = new ArrayList<br.gov.saude.esusab.ras.common.ResultadosExameThrift>(other.resultadosExames.size());
      for (br.gov.saude.esusab.ras.common.ResultadosExameThrift other_element : other.resultadosExames) {
        __this__resultadosExames.add(new br.gov.saude.esusab.ras.common.ResultadosExameThrift(other_element));
      }
      this.resultadosExames = __this__resultadosExames;
    }
    if (other.isSetUuidRnds()) {
      this.uuidRnds = other.uuidRnds;
    }
    if (other.isSetFinalizadorObservacao()) {
      this.finalizadorObservacao = new br.gov.saude.esusab.ras.common.LotacaoHeaderThrift(other.finalizadorObservacao);
    }
    this.tipoParticipacaoCidadao = other.tipoParticipacaoCidadao;
    this.tipoParticipacaoProfissionalConvidado = other.tipoParticipacaoProfissionalConvidado;
    if (other.isSetEmultis()) {
      List<Long> __this__emultis = new ArrayList<Long>(other.emultis);
      this.emultis = __this__emultis;
    }
    if (other.isSetMedicoes()) {
      this.medicoes = new br.gov.saude.esusab.ras.common.MedicoesThrift(other.medicoes);
    }
  }

  public FichaAtendimentoIndividualChildThrift deepCopy() {
    return new FichaAtendimentoIndividualChildThrift(this);
  }

  @Override
  public void clear() {
    this.numeroProntuario = null;
    this.cns = null;
    setDataNascimentoIsSet(false);
    this.dataNascimento = 0;
    setLocalDeAtendimentoIsSet(false);
    this.localDeAtendimento = 0;
    setSexoIsSet(false);
    this.sexo = 0;
    setTurnoIsSet(false);
    this.turno = 0;
    setTipoAtendimentoIsSet(false);
    this.tipoAtendimento = 0;
    setPesoAcompanhamentoNutricionalIsSet(false);
    this.pesoAcompanhamentoNutricional = 0.0;
    setAlturaAcompanhamentoNutricionalIsSet(false);
    this.alturaAcompanhamentoNutricional = 0.0;
    setAleitamentoMaternoIsSet(false);
    this.aleitamentoMaterno = 0;
    setDumDaGestanteIsSet(false);
    this.dumDaGestante = 0;
    setIdadeGestacionalIsSet(false);
    this.idadeGestacional = 0;
    setAtencaoDomiciliarModalidadeIsSet(false);
    this.atencaoDomiciliarModalidade = 0;
    this.problemaCondicaoAvaliada = null;
    this.exame = null;
    setVacinaEmDiaIsSet(false);
    this.vacinaEmDia = false;
    setPicIsSet(false);
    this.pic = 0;
    setFicouEmObservacaoIsSet(false);
    this.ficouEmObservacao = false;
    this.nasfs = null;
    this.condutas = null;
    setStGravidezPlanejadaIsSet(false);
    this.stGravidezPlanejada = false;
    setNuGestasPreviasIsSet(false);
    this.nuGestasPrevias = 0;
    setNuPartosIsSet(false);
    this.nuPartos = 0;
    setRacionalidadeSaudeIsSet(false);
    this.racionalidadeSaude = 0;
    setPerimetroCefalicoIsSet(false);
    this.perimetroCefalico = 0.0;
    setDataHoraInicialAtendimentoIsSet(false);
    this.dataHoraInicialAtendimento = 0;
    setDataHoraFinalAtendimentoIsSet(false);
    this.dataHoraFinalAtendimento = 0;
    this.cpfCidadao = null;
    this.medicamentos = null;
    this.encaminhamentos = null;
    this.resultadosExames = null;
    this.uuidRnds = null;
    this.finalizadorObservacao = null;
    setTipoParticipacaoCidadaoIsSet(false);
    this.tipoParticipacaoCidadao = 0;
    setTipoParticipacaoProfissionalConvidadoIsSet(false);
    this.tipoParticipacaoProfissionalConvidado = 0;
    this.emultis = null;
    this.medicoes = null;
  }

  public String getNumeroProntuario() {
    return this.numeroProntuario;
  }

  public void setNumeroProntuario(String numeroProntuario) {
    this.numeroProntuario = numeroProntuario;
  }

  public void unsetNumeroProntuario() {
    this.numeroProntuario = null;
  }

  /** Returns true if field numeroProntuario is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroProntuario() {
    return this.numeroProntuario != null;
  }

  public void setNumeroProntuarioIsSet(boolean value) {
    if (!value) {
      this.numeroProntuario = null;
    }
  }

  public String getCns() {
    return this.cns;
  }

  public void setCns(String cns) {
    this.cns = cns;
  }

  public void unsetCns() {
    this.cns = null;
  }

  /** Returns true if field cns is set (has been assigned a value) and false otherwise */
  public boolean isSetCns() {
    return this.cns != null;
  }

  public void setCnsIsSet(boolean value) {
    if (!value) {
      this.cns = null;
    }
  }

  public long getDataNascimento() {
    return this.dataNascimento;
  }

  public void setDataNascimento(long dataNascimento) {
    this.dataNascimento = dataNascimento;
    setDataNascimentoIsSet(true);
  }

  public void unsetDataNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dataNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  public void setDataNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID, value);
  }

  public long getLocalDeAtendimento() {
    return this.localDeAtendimento;
  }

  public void setLocalDeAtendimento(long localDeAtendimento) {
    this.localDeAtendimento = localDeAtendimento;
    setLocalDeAtendimentoIsSet(true);
  }

  public void unsetLocalDeAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCALDEATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field localDeAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalDeAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCALDEATENDIMENTO_ISSET_ID);
  }

  public void setLocalDeAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCALDEATENDIMENTO_ISSET_ID, value);
  }

  public long getSexo() {
    return this.sexo;
  }

  public void setSexo(long sexo) {
    this.sexo = sexo;
    setSexoIsSet(true);
  }

  public void unsetSexo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  public void setSexoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXO_ISSET_ID, value);
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public long getTipoAtendimento() {
    return this.tipoAtendimento;
  }

  public void setTipoAtendimento(long tipoAtendimento) {
    this.tipoAtendimento = tipoAtendimento;
    setTipoAtendimentoIsSet(true);
  }

  public void unsetTipoAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field tipoAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID);
  }

  public void setTipoAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID, value);
  }

  public double getPesoAcompanhamentoNutricional() {
    return this.pesoAcompanhamentoNutricional;
  }

  public void setPesoAcompanhamentoNutricional(double pesoAcompanhamentoNutricional) {
    this.pesoAcompanhamentoNutricional = pesoAcompanhamentoNutricional;
    setPesoAcompanhamentoNutricionalIsSet(true);
  }

  public void unsetPesoAcompanhamentoNutricional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  /** Returns true if field pesoAcompanhamentoNutricional is set (has been assigned a value) and false otherwise */
  public boolean isSetPesoAcompanhamentoNutricional() {
    return EncodingUtils.testBit(__isset_bitfield, __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  public void setPesoAcompanhamentoNutricionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID, value);
  }

  public double getAlturaAcompanhamentoNutricional() {
    return this.alturaAcompanhamentoNutricional;
  }

  public void setAlturaAcompanhamentoNutricional(double alturaAcompanhamentoNutricional) {
    this.alturaAcompanhamentoNutricional = alturaAcompanhamentoNutricional;
    setAlturaAcompanhamentoNutricionalIsSet(true);
  }

  public void unsetAlturaAcompanhamentoNutricional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  /** Returns true if field alturaAcompanhamentoNutricional is set (has been assigned a value) and false otherwise */
  public boolean isSetAlturaAcompanhamentoNutricional() {
    return EncodingUtils.testBit(__isset_bitfield, __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  public void setAlturaAcompanhamentoNutricionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID, value);
  }

  public long getAleitamentoMaterno() {
    return this.aleitamentoMaterno;
  }

  public void setAleitamentoMaterno(long aleitamentoMaterno) {
    this.aleitamentoMaterno = aleitamentoMaterno;
    setAleitamentoMaternoIsSet(true);
  }

  public void unsetAleitamentoMaterno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ALEITAMENTOMATERNO_ISSET_ID);
  }

  /** Returns true if field aleitamentoMaterno is set (has been assigned a value) and false otherwise */
  public boolean isSetAleitamentoMaterno() {
    return EncodingUtils.testBit(__isset_bitfield, __ALEITAMENTOMATERNO_ISSET_ID);
  }

  public void setAleitamentoMaternoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ALEITAMENTOMATERNO_ISSET_ID, value);
  }

  public long getDumDaGestante() {
    return this.dumDaGestante;
  }

  public void setDumDaGestante(long dumDaGestante) {
    this.dumDaGestante = dumDaGestante;
    setDumDaGestanteIsSet(true);
  }

  public void unsetDumDaGestante() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DUMDAGESTANTE_ISSET_ID);
  }

  /** Returns true if field dumDaGestante is set (has been assigned a value) and false otherwise */
  public boolean isSetDumDaGestante() {
    return EncodingUtils.testBit(__isset_bitfield, __DUMDAGESTANTE_ISSET_ID);
  }

  public void setDumDaGestanteIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DUMDAGESTANTE_ISSET_ID, value);
  }

  public int getIdadeGestacional() {
    return this.idadeGestacional;
  }

  public void setIdadeGestacional(int idadeGestacional) {
    this.idadeGestacional = idadeGestacional;
    setIdadeGestacionalIsSet(true);
  }

  public void unsetIdadeGestacional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __IDADEGESTACIONAL_ISSET_ID);
  }

  /** Returns true if field idadeGestacional is set (has been assigned a value) and false otherwise */
  public boolean isSetIdadeGestacional() {
    return EncodingUtils.testBit(__isset_bitfield, __IDADEGESTACIONAL_ISSET_ID);
  }

  public void setIdadeGestacionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __IDADEGESTACIONAL_ISSET_ID, value);
  }

  public long getAtencaoDomiciliarModalidade() {
    return this.atencaoDomiciliarModalidade;
  }

  public void setAtencaoDomiciliarModalidade(long atencaoDomiciliarModalidade) {
    this.atencaoDomiciliarModalidade = atencaoDomiciliarModalidade;
    setAtencaoDomiciliarModalidadeIsSet(true);
  }

  public void unsetAtencaoDomiciliarModalidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarModalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarModalidade() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  public void setAtencaoDomiciliarModalidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID, value);
  }

  public ProblemaCondicaoAvaliacaoAIThrift getProblemaCondicaoAvaliada() {
    return this.problemaCondicaoAvaliada;
  }

  public void setProblemaCondicaoAvaliada(ProblemaCondicaoAvaliacaoAIThrift problemaCondicaoAvaliada) {
    this.problemaCondicaoAvaliada = problemaCondicaoAvaliada;
  }

  public void unsetProblemaCondicaoAvaliada() {
    this.problemaCondicaoAvaliada = null;
  }

  /** Returns true if field problemaCondicaoAvaliada is set (has been assigned a value) and false otherwise */
  public boolean isSetProblemaCondicaoAvaliada() {
    return this.problemaCondicaoAvaliada != null;
  }

  public void setProblemaCondicaoAvaliadaIsSet(boolean value) {
    if (!value) {
      this.problemaCondicaoAvaliada = null;
    }
  }

  public int getExameSize() {
    return (this.exame == null) ? 0 : this.exame.size();
  }

  public java.util.Iterator<ExameThrift> getExameIterator() {
    return (this.exame == null) ? null : this.exame.iterator();
  }

  public void addToExame(ExameThrift elem) {
    if (this.exame == null) {
      this.exame = new ArrayList<ExameThrift>();
    }
    this.exame.add(elem);
  }

  public List<ExameThrift> getExame() {
    return this.exame;
  }

  public void setExame(List<ExameThrift> exame) {
    this.exame = exame;
  }

  public void unsetExame() {
    this.exame = null;
  }

  /** Returns true if field exame is set (has been assigned a value) and false otherwise */
  public boolean isSetExame() {
    return this.exame != null;
  }

  public void setExameIsSet(boolean value) {
    if (!value) {
      this.exame = null;
    }
  }

  public boolean isVacinaEmDia() {
    return this.vacinaEmDia;
  }

  public void setVacinaEmDia(boolean vacinaEmDia) {
    this.vacinaEmDia = vacinaEmDia;
    setVacinaEmDiaIsSet(true);
  }

  public void unsetVacinaEmDia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VACINAEMDIA_ISSET_ID);
  }

  /** Returns true if field vacinaEmDia is set (has been assigned a value) and false otherwise */
  public boolean isSetVacinaEmDia() {
    return EncodingUtils.testBit(__isset_bitfield, __VACINAEMDIA_ISSET_ID);
  }

  public void setVacinaEmDiaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VACINAEMDIA_ISSET_ID, value);
  }

  public long getPic() {
    return this.pic;
  }

  public void setPic(long pic) {
    this.pic = pic;
    setPicIsSet(true);
  }

  public void unsetPic() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PIC_ISSET_ID);
  }

  /** Returns true if field pic is set (has been assigned a value) and false otherwise */
  public boolean isSetPic() {
    return EncodingUtils.testBit(__isset_bitfield, __PIC_ISSET_ID);
  }

  public void setPicIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PIC_ISSET_ID, value);
  }

  public boolean isFicouEmObservacao() {
    return this.ficouEmObservacao;
  }

  public void setFicouEmObservacao(boolean ficouEmObservacao) {
    this.ficouEmObservacao = ficouEmObservacao;
    setFicouEmObservacaoIsSet(true);
  }

  public void unsetFicouEmObservacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FICOUEMOBSERVACAO_ISSET_ID);
  }

  /** Returns true if field ficouEmObservacao is set (has been assigned a value) and false otherwise */
  public boolean isSetFicouEmObservacao() {
    return EncodingUtils.testBit(__isset_bitfield, __FICOUEMOBSERVACAO_ISSET_ID);
  }

  public void setFicouEmObservacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FICOUEMOBSERVACAO_ISSET_ID, value);
  }

  public int getNasfsSize() {
    return (this.nasfs == null) ? 0 : this.nasfs.size();
  }

  public java.util.Iterator<Long> getNasfsIterator() {
    return (this.nasfs == null) ? null : this.nasfs.iterator();
  }

  public void addToNasfs(long elem) {
    if (this.nasfs == null) {
      this.nasfs = new ArrayList<Long>();
    }
    this.nasfs.add(elem);
  }

  public List<Long> getNasfs() {
    return this.nasfs;
  }

  public void setNasfs(List<Long> nasfs) {
    this.nasfs = nasfs;
  }

  public void unsetNasfs() {
    this.nasfs = null;
  }

  /** Returns true if field nasfs is set (has been assigned a value) and false otherwise */
  public boolean isSetNasfs() {
    return this.nasfs != null;
  }

  public void setNasfsIsSet(boolean value) {
    if (!value) {
      this.nasfs = null;
    }
  }

  public int getCondutasSize() {
    return (this.condutas == null) ? 0 : this.condutas.size();
  }

  public java.util.Iterator<Long> getCondutasIterator() {
    return (this.condutas == null) ? null : this.condutas.iterator();
  }

  public void addToCondutas(long elem) {
    if (this.condutas == null) {
      this.condutas = new ArrayList<Long>();
    }
    this.condutas.add(elem);
  }

  public List<Long> getCondutas() {
    return this.condutas;
  }

  public void setCondutas(List<Long> condutas) {
    this.condutas = condutas;
  }

  public void unsetCondutas() {
    this.condutas = null;
  }

  /** Returns true if field condutas is set (has been assigned a value) and false otherwise */
  public boolean isSetCondutas() {
    return this.condutas != null;
  }

  public void setCondutasIsSet(boolean value) {
    if (!value) {
      this.condutas = null;
    }
  }

  public boolean isStGravidezPlanejada() {
    return this.stGravidezPlanejada;
  }

  public void setStGravidezPlanejada(boolean stGravidezPlanejada) {
    this.stGravidezPlanejada = stGravidezPlanejada;
    setStGravidezPlanejadaIsSet(true);
  }

  public void unsetStGravidezPlanejada() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STGRAVIDEZPLANEJADA_ISSET_ID);
  }

  /** Returns true if field stGravidezPlanejada is set (has been assigned a value) and false otherwise */
  public boolean isSetStGravidezPlanejada() {
    return EncodingUtils.testBit(__isset_bitfield, __STGRAVIDEZPLANEJADA_ISSET_ID);
  }

  public void setStGravidezPlanejadaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STGRAVIDEZPLANEJADA_ISSET_ID, value);
  }

  public int getNuGestasPrevias() {
    return this.nuGestasPrevias;
  }

  public void setNuGestasPrevias(int nuGestasPrevias) {
    this.nuGestasPrevias = nuGestasPrevias;
    setNuGestasPreviasIsSet(true);
  }

  public void unsetNuGestasPrevias() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUGESTASPREVIAS_ISSET_ID);
  }

  /** Returns true if field nuGestasPrevias is set (has been assigned a value) and false otherwise */
  public boolean isSetNuGestasPrevias() {
    return EncodingUtils.testBit(__isset_bitfield, __NUGESTASPREVIAS_ISSET_ID);
  }

  public void setNuGestasPreviasIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUGESTASPREVIAS_ISSET_ID, value);
  }

  public int getNuPartos() {
    return this.nuPartos;
  }

  public void setNuPartos(int nuPartos) {
    this.nuPartos = nuPartos;
    setNuPartosIsSet(true);
  }

  public void unsetNuPartos() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUPARTOS_ISSET_ID);
  }

  /** Returns true if field nuPartos is set (has been assigned a value) and false otherwise */
  public boolean isSetNuPartos() {
    return EncodingUtils.testBit(__isset_bitfield, __NUPARTOS_ISSET_ID);
  }

  public void setNuPartosIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUPARTOS_ISSET_ID, value);
  }

  public long getRacionalidadeSaude() {
    return this.racionalidadeSaude;
  }

  public void setRacionalidadeSaude(long racionalidadeSaude) {
    this.racionalidadeSaude = racionalidadeSaude;
    setRacionalidadeSaudeIsSet(true);
  }

  public void unsetRacionalidadeSaude() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACIONALIDADESAUDE_ISSET_ID);
  }

  /** Returns true if field racionalidadeSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetRacionalidadeSaude() {
    return EncodingUtils.testBit(__isset_bitfield, __RACIONALIDADESAUDE_ISSET_ID);
  }

  public void setRacionalidadeSaudeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACIONALIDADESAUDE_ISSET_ID, value);
  }

  public double getPerimetroCefalico() {
    return this.perimetroCefalico;
  }

  public void setPerimetroCefalico(double perimetroCefalico) {
    this.perimetroCefalico = perimetroCefalico;
    setPerimetroCefalicoIsSet(true);
  }

  public void unsetPerimetroCefalico() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PERIMETROCEFALICO_ISSET_ID);
  }

  /** Returns true if field perimetroCefalico is set (has been assigned a value) and false otherwise */
  public boolean isSetPerimetroCefalico() {
    return EncodingUtils.testBit(__isset_bitfield, __PERIMETROCEFALICO_ISSET_ID);
  }

  public void setPerimetroCefalicoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PERIMETROCEFALICO_ISSET_ID, value);
  }

  public long getDataHoraInicialAtendimento() {
    return this.dataHoraInicialAtendimento;
  }

  public void setDataHoraInicialAtendimento(long dataHoraInicialAtendimento) {
    this.dataHoraInicialAtendimento = dataHoraInicialAtendimento;
    setDataHoraInicialAtendimentoIsSet(true);
  }

  public void unsetDataHoraInicialAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATAHORAINICIALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field dataHoraInicialAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataHoraInicialAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATAHORAINICIALATENDIMENTO_ISSET_ID);
  }

  public void setDataHoraInicialAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATAHORAINICIALATENDIMENTO_ISSET_ID, value);
  }

  public long getDataHoraFinalAtendimento() {
    return this.dataHoraFinalAtendimento;
  }

  public void setDataHoraFinalAtendimento(long dataHoraFinalAtendimento) {
    this.dataHoraFinalAtendimento = dataHoraFinalAtendimento;
    setDataHoraFinalAtendimentoIsSet(true);
  }

  public void unsetDataHoraFinalAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATAHORAFINALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field dataHoraFinalAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataHoraFinalAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATAHORAFINALATENDIMENTO_ISSET_ID);
  }

  public void setDataHoraFinalAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATAHORAFINALATENDIMENTO_ISSET_ID, value);
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public int getMedicamentosSize() {
    return (this.medicamentos == null) ? 0 : this.medicamentos.size();
  }

  public java.util.Iterator<br.gov.saude.esusab.ras.common.MedicamentoThrift> getMedicamentosIterator() {
    return (this.medicamentos == null) ? null : this.medicamentos.iterator();
  }

  public void addToMedicamentos(br.gov.saude.esusab.ras.common.MedicamentoThrift elem) {
    if (this.medicamentos == null) {
      this.medicamentos = new ArrayList<br.gov.saude.esusab.ras.common.MedicamentoThrift>();
    }
    this.medicamentos.add(elem);
  }

  public List<br.gov.saude.esusab.ras.common.MedicamentoThrift> getMedicamentos() {
    return this.medicamentos;
  }

  public void setMedicamentos(List<br.gov.saude.esusab.ras.common.MedicamentoThrift> medicamentos) {
    this.medicamentos = medicamentos;
  }

  public void unsetMedicamentos() {
    this.medicamentos = null;
  }

  /** Returns true if field medicamentos is set (has been assigned a value) and false otherwise */
  public boolean isSetMedicamentos() {
    return this.medicamentos != null;
  }

  public void setMedicamentosIsSet(boolean value) {
    if (!value) {
      this.medicamentos = null;
    }
  }

  public int getEncaminhamentosSize() {
    return (this.encaminhamentos == null) ? 0 : this.encaminhamentos.size();
  }

  public java.util.Iterator<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift> getEncaminhamentosIterator() {
    return (this.encaminhamentos == null) ? null : this.encaminhamentos.iterator();
  }

  public void addToEncaminhamentos(br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift elem) {
    if (this.encaminhamentos == null) {
      this.encaminhamentos = new ArrayList<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift>();
    }
    this.encaminhamentos.add(elem);
  }

  public List<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift> getEncaminhamentos() {
    return this.encaminhamentos;
  }

  public void setEncaminhamentos(List<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift> encaminhamentos) {
    this.encaminhamentos = encaminhamentos;
  }

  public void unsetEncaminhamentos() {
    this.encaminhamentos = null;
  }

  /** Returns true if field encaminhamentos is set (has been assigned a value) and false otherwise */
  public boolean isSetEncaminhamentos() {
    return this.encaminhamentos != null;
  }

  public void setEncaminhamentosIsSet(boolean value) {
    if (!value) {
      this.encaminhamentos = null;
    }
  }

  public int getResultadosExamesSize() {
    return (this.resultadosExames == null) ? 0 : this.resultadosExames.size();
  }

  public java.util.Iterator<br.gov.saude.esusab.ras.common.ResultadosExameThrift> getResultadosExamesIterator() {
    return (this.resultadosExames == null) ? null : this.resultadosExames.iterator();
  }

  public void addToResultadosExames(br.gov.saude.esusab.ras.common.ResultadosExameThrift elem) {
    if (this.resultadosExames == null) {
      this.resultadosExames = new ArrayList<br.gov.saude.esusab.ras.common.ResultadosExameThrift>();
    }
    this.resultadosExames.add(elem);
  }

  public List<br.gov.saude.esusab.ras.common.ResultadosExameThrift> getResultadosExames() {
    return this.resultadosExames;
  }

  public void setResultadosExames(List<br.gov.saude.esusab.ras.common.ResultadosExameThrift> resultadosExames) {
    this.resultadosExames = resultadosExames;
  }

  public void unsetResultadosExames() {
    this.resultadosExames = null;
  }

  /** Returns true if field resultadosExames is set (has been assigned a value) and false otherwise */
  public boolean isSetResultadosExames() {
    return this.resultadosExames != null;
  }

  public void setResultadosExamesIsSet(boolean value) {
    if (!value) {
      this.resultadosExames = null;
    }
  }

  public String getUuidRnds() {
    return this.uuidRnds;
  }

  public void setUuidRnds(String uuidRnds) {
    this.uuidRnds = uuidRnds;
  }

  public void unsetUuidRnds() {
    this.uuidRnds = null;
  }

  /** Returns true if field uuidRnds is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidRnds() {
    return this.uuidRnds != null;
  }

  public void setUuidRndsIsSet(boolean value) {
    if (!value) {
      this.uuidRnds = null;
    }
  }

  public br.gov.saude.esusab.ras.common.LotacaoHeaderThrift getFinalizadorObservacao() {
    return this.finalizadorObservacao;
  }

  public void setFinalizadorObservacao(br.gov.saude.esusab.ras.common.LotacaoHeaderThrift finalizadorObservacao) {
    this.finalizadorObservacao = finalizadorObservacao;
  }

  public void unsetFinalizadorObservacao() {
    this.finalizadorObservacao = null;
  }

  /** Returns true if field finalizadorObservacao is set (has been assigned a value) and false otherwise */
  public boolean isSetFinalizadorObservacao() {
    return this.finalizadorObservacao != null;
  }

  public void setFinalizadorObservacaoIsSet(boolean value) {
    if (!value) {
      this.finalizadorObservacao = null;
    }
  }

  public long getTipoParticipacaoCidadao() {
    return this.tipoParticipacaoCidadao;
  }

  public void setTipoParticipacaoCidadao(long tipoParticipacaoCidadao) {
    this.tipoParticipacaoCidadao = tipoParticipacaoCidadao;
    setTipoParticipacaoCidadaoIsSet(true);
  }

  public void unsetTipoParticipacaoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOPARTICIPACAOCIDADAO_ISSET_ID);
  }

  /** Returns true if field tipoParticipacaoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoParticipacaoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOPARTICIPACAOCIDADAO_ISSET_ID);
  }

  public void setTipoParticipacaoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOPARTICIPACAOCIDADAO_ISSET_ID, value);
  }

  public long getTipoParticipacaoProfissionalConvidado() {
    return this.tipoParticipacaoProfissionalConvidado;
  }

  public void setTipoParticipacaoProfissionalConvidado(long tipoParticipacaoProfissionalConvidado) {
    this.tipoParticipacaoProfissionalConvidado = tipoParticipacaoProfissionalConvidado;
    setTipoParticipacaoProfissionalConvidadoIsSet(true);
  }

  public void unsetTipoParticipacaoProfissionalConvidado() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOPARTICIPACAOPROFISSIONALCONVIDADO_ISSET_ID);
  }

  /** Returns true if field tipoParticipacaoProfissionalConvidado is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoParticipacaoProfissionalConvidado() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOPARTICIPACAOPROFISSIONALCONVIDADO_ISSET_ID);
  }

  public void setTipoParticipacaoProfissionalConvidadoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOPARTICIPACAOPROFISSIONALCONVIDADO_ISSET_ID, value);
  }

  public int getEmultisSize() {
    return (this.emultis == null) ? 0 : this.emultis.size();
  }

  public java.util.Iterator<Long> getEmultisIterator() {
    return (this.emultis == null) ? null : this.emultis.iterator();
  }

  public void addToEmultis(long elem) {
    if (this.emultis == null) {
      this.emultis = new ArrayList<Long>();
    }
    this.emultis.add(elem);
  }

  public List<Long> getEmultis() {
    return this.emultis;
  }

  public void setEmultis(List<Long> emultis) {
    this.emultis = emultis;
  }

  public void unsetEmultis() {
    this.emultis = null;
  }

  /** Returns true if field emultis is set (has been assigned a value) and false otherwise */
  public boolean isSetEmultis() {
    return this.emultis != null;
  }

  public void setEmultisIsSet(boolean value) {
    if (!value) {
      this.emultis = null;
    }
  }

  public br.gov.saude.esusab.ras.common.MedicoesThrift getMedicoes() {
    return this.medicoes;
  }

  public void setMedicoes(br.gov.saude.esusab.ras.common.MedicoesThrift medicoes) {
    this.medicoes = medicoes;
  }

  public void unsetMedicoes() {
    this.medicoes = null;
  }

  /** Returns true if field medicoes is set (has been assigned a value) and false otherwise */
  public boolean isSetMedicoes() {
    return this.medicoes != null;
  }

  public void setMedicoesIsSet(boolean value) {
    if (!value) {
      this.medicoes = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NUMERO_PRONTUARIO:
      if (value == null) {
        unsetNumeroProntuario();
      } else {
        setNumeroProntuario((String)value);
      }
      break;

    case CNS:
      if (value == null) {
        unsetCns();
      } else {
        setCns((String)value);
      }
      break;

    case DATA_NASCIMENTO:
      if (value == null) {
        unsetDataNascimento();
      } else {
        setDataNascimento((Long)value);
      }
      break;

    case LOCAL_DE_ATENDIMENTO:
      if (value == null) {
        unsetLocalDeAtendimento();
      } else {
        setLocalDeAtendimento((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((Long)value);
      }
      break;

    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case TIPO_ATENDIMENTO:
      if (value == null) {
        unsetTipoAtendimento();
      } else {
        setTipoAtendimento((Long)value);
      }
      break;

    case PESO_ACOMPANHAMENTO_NUTRICIONAL:
      if (value == null) {
        unsetPesoAcompanhamentoNutricional();
      } else {
        setPesoAcompanhamentoNutricional((Double)value);
      }
      break;

    case ALTURA_ACOMPANHAMENTO_NUTRICIONAL:
      if (value == null) {
        unsetAlturaAcompanhamentoNutricional();
      } else {
        setAlturaAcompanhamentoNutricional((Double)value);
      }
      break;

    case ALEITAMENTO_MATERNO:
      if (value == null) {
        unsetAleitamentoMaterno();
      } else {
        setAleitamentoMaterno((Long)value);
      }
      break;

    case DUM_DA_GESTANTE:
      if (value == null) {
        unsetDumDaGestante();
      } else {
        setDumDaGestante((Long)value);
      }
      break;

    case IDADE_GESTACIONAL:
      if (value == null) {
        unsetIdadeGestacional();
      } else {
        setIdadeGestacional((Integer)value);
      }
      break;

    case ATENCAO_DOMICILIAR_MODALIDADE:
      if (value == null) {
        unsetAtencaoDomiciliarModalidade();
      } else {
        setAtencaoDomiciliarModalidade((Long)value);
      }
      break;

    case PROBLEMA_CONDICAO_AVALIADA:
      if (value == null) {
        unsetProblemaCondicaoAvaliada();
      } else {
        setProblemaCondicaoAvaliada((ProblemaCondicaoAvaliacaoAIThrift)value);
      }
      break;

    case EXAME:
      if (value == null) {
        unsetExame();
      } else {
        setExame((List<ExameThrift>)value);
      }
      break;

    case VACINA_EM_DIA:
      if (value == null) {
        unsetVacinaEmDia();
      } else {
        setVacinaEmDia((Boolean)value);
      }
      break;

    case PIC:
      if (value == null) {
        unsetPic();
      } else {
        setPic((Long)value);
      }
      break;

    case FICOU_EM_OBSERVACAO:
      if (value == null) {
        unsetFicouEmObservacao();
      } else {
        setFicouEmObservacao((Boolean)value);
      }
      break;

    case NASFS:
      if (value == null) {
        unsetNasfs();
      } else {
        setNasfs((List<Long>)value);
      }
      break;

    case CONDUTAS:
      if (value == null) {
        unsetCondutas();
      } else {
        setCondutas((List<Long>)value);
      }
      break;

    case ST_GRAVIDEZ_PLANEJADA:
      if (value == null) {
        unsetStGravidezPlanejada();
      } else {
        setStGravidezPlanejada((Boolean)value);
      }
      break;

    case NU_GESTAS_PREVIAS:
      if (value == null) {
        unsetNuGestasPrevias();
      } else {
        setNuGestasPrevias((Integer)value);
      }
      break;

    case NU_PARTOS:
      if (value == null) {
        unsetNuPartos();
      } else {
        setNuPartos((Integer)value);
      }
      break;

    case RACIONALIDADE_SAUDE:
      if (value == null) {
        unsetRacionalidadeSaude();
      } else {
        setRacionalidadeSaude((Long)value);
      }
      break;

    case PERIMETRO_CEFALICO:
      if (value == null) {
        unsetPerimetroCefalico();
      } else {
        setPerimetroCefalico((Double)value);
      }
      break;

    case DATA_HORA_INICIAL_ATENDIMENTO:
      if (value == null) {
        unsetDataHoraInicialAtendimento();
      } else {
        setDataHoraInicialAtendimento((Long)value);
      }
      break;

    case DATA_HORA_FINAL_ATENDIMENTO:
      if (value == null) {
        unsetDataHoraFinalAtendimento();
      } else {
        setDataHoraFinalAtendimento((Long)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    case MEDICAMENTOS:
      if (value == null) {
        unsetMedicamentos();
      } else {
        setMedicamentos((List<br.gov.saude.esusab.ras.common.MedicamentoThrift>)value);
      }
      break;

    case ENCAMINHAMENTOS:
      if (value == null) {
        unsetEncaminhamentos();
      } else {
        setEncaminhamentos((List<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift>)value);
      }
      break;

    case RESULTADOS_EXAMES:
      if (value == null) {
        unsetResultadosExames();
      } else {
        setResultadosExames((List<br.gov.saude.esusab.ras.common.ResultadosExameThrift>)value);
      }
      break;

    case UUID_RNDS:
      if (value == null) {
        unsetUuidRnds();
      } else {
        setUuidRnds((String)value);
      }
      break;

    case FINALIZADOR_OBSERVACAO:
      if (value == null) {
        unsetFinalizadorObservacao();
      } else {
        setFinalizadorObservacao((br.gov.saude.esusab.ras.common.LotacaoHeaderThrift)value);
      }
      break;

    case TIPO_PARTICIPACAO_CIDADAO:
      if (value == null) {
        unsetTipoParticipacaoCidadao();
      } else {
        setTipoParticipacaoCidadao((Long)value);
      }
      break;

    case TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO:
      if (value == null) {
        unsetTipoParticipacaoProfissionalConvidado();
      } else {
        setTipoParticipacaoProfissionalConvidado((Long)value);
      }
      break;

    case EMULTIS:
      if (value == null) {
        unsetEmultis();
      } else {
        setEmultis((List<Long>)value);
      }
      break;

    case MEDICOES:
      if (value == null) {
        unsetMedicoes();
      } else {
        setMedicoes((br.gov.saude.esusab.ras.common.MedicoesThrift)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NUMERO_PRONTUARIO:
      return getNumeroProntuario();

    case CNS:
      return getCns();

    case DATA_NASCIMENTO:
      return getDataNascimento();

    case LOCAL_DE_ATENDIMENTO:
      return getLocalDeAtendimento();

    case SEXO:
      return getSexo();

    case TURNO:
      return getTurno();

    case TIPO_ATENDIMENTO:
      return getTipoAtendimento();

    case PESO_ACOMPANHAMENTO_NUTRICIONAL:
      return getPesoAcompanhamentoNutricional();

    case ALTURA_ACOMPANHAMENTO_NUTRICIONAL:
      return getAlturaAcompanhamentoNutricional();

    case ALEITAMENTO_MATERNO:
      return getAleitamentoMaterno();

    case DUM_DA_GESTANTE:
      return getDumDaGestante();

    case IDADE_GESTACIONAL:
      return getIdadeGestacional();

    case ATENCAO_DOMICILIAR_MODALIDADE:
      return getAtencaoDomiciliarModalidade();

    case PROBLEMA_CONDICAO_AVALIADA:
      return getProblemaCondicaoAvaliada();

    case EXAME:
      return getExame();

    case VACINA_EM_DIA:
      return isVacinaEmDia();

    case PIC:
      return getPic();

    case FICOU_EM_OBSERVACAO:
      return isFicouEmObservacao();

    case NASFS:
      return getNasfs();

    case CONDUTAS:
      return getCondutas();

    case ST_GRAVIDEZ_PLANEJADA:
      return isStGravidezPlanejada();

    case NU_GESTAS_PREVIAS:
      return getNuGestasPrevias();

    case NU_PARTOS:
      return getNuPartos();

    case RACIONALIDADE_SAUDE:
      return getRacionalidadeSaude();

    case PERIMETRO_CEFALICO:
      return getPerimetroCefalico();

    case DATA_HORA_INICIAL_ATENDIMENTO:
      return getDataHoraInicialAtendimento();

    case DATA_HORA_FINAL_ATENDIMENTO:
      return getDataHoraFinalAtendimento();

    case CPF_CIDADAO:
      return getCpfCidadao();

    case MEDICAMENTOS:
      return getMedicamentos();

    case ENCAMINHAMENTOS:
      return getEncaminhamentos();

    case RESULTADOS_EXAMES:
      return getResultadosExames();

    case UUID_RNDS:
      return getUuidRnds();

    case FINALIZADOR_OBSERVACAO:
      return getFinalizadorObservacao();

    case TIPO_PARTICIPACAO_CIDADAO:
      return getTipoParticipacaoCidadao();

    case TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO:
      return getTipoParticipacaoProfissionalConvidado();

    case EMULTIS:
      return getEmultis();

    case MEDICOES:
      return getMedicoes();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NUMERO_PRONTUARIO:
      return isSetNumeroProntuario();
    case CNS:
      return isSetCns();
    case DATA_NASCIMENTO:
      return isSetDataNascimento();
    case LOCAL_DE_ATENDIMENTO:
      return isSetLocalDeAtendimento();
    case SEXO:
      return isSetSexo();
    case TURNO:
      return isSetTurno();
    case TIPO_ATENDIMENTO:
      return isSetTipoAtendimento();
    case PESO_ACOMPANHAMENTO_NUTRICIONAL:
      return isSetPesoAcompanhamentoNutricional();
    case ALTURA_ACOMPANHAMENTO_NUTRICIONAL:
      return isSetAlturaAcompanhamentoNutricional();
    case ALEITAMENTO_MATERNO:
      return isSetAleitamentoMaterno();
    case DUM_DA_GESTANTE:
      return isSetDumDaGestante();
    case IDADE_GESTACIONAL:
      return isSetIdadeGestacional();
    case ATENCAO_DOMICILIAR_MODALIDADE:
      return isSetAtencaoDomiciliarModalidade();
    case PROBLEMA_CONDICAO_AVALIADA:
      return isSetProblemaCondicaoAvaliada();
    case EXAME:
      return isSetExame();
    case VACINA_EM_DIA:
      return isSetVacinaEmDia();
    case PIC:
      return isSetPic();
    case FICOU_EM_OBSERVACAO:
      return isSetFicouEmObservacao();
    case NASFS:
      return isSetNasfs();
    case CONDUTAS:
      return isSetCondutas();
    case ST_GRAVIDEZ_PLANEJADA:
      return isSetStGravidezPlanejada();
    case NU_GESTAS_PREVIAS:
      return isSetNuGestasPrevias();
    case NU_PARTOS:
      return isSetNuPartos();
    case RACIONALIDADE_SAUDE:
      return isSetRacionalidadeSaude();
    case PERIMETRO_CEFALICO:
      return isSetPerimetroCefalico();
    case DATA_HORA_INICIAL_ATENDIMENTO:
      return isSetDataHoraInicialAtendimento();
    case DATA_HORA_FINAL_ATENDIMENTO:
      return isSetDataHoraFinalAtendimento();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    case MEDICAMENTOS:
      return isSetMedicamentos();
    case ENCAMINHAMENTOS:
      return isSetEncaminhamentos();
    case RESULTADOS_EXAMES:
      return isSetResultadosExames();
    case UUID_RNDS:
      return isSetUuidRnds();
    case FINALIZADOR_OBSERVACAO:
      return isSetFinalizadorObservacao();
    case TIPO_PARTICIPACAO_CIDADAO:
      return isSetTipoParticipacaoCidadao();
    case TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO:
      return isSetTipoParticipacaoProfissionalConvidado();
    case EMULTIS:
      return isSetEmultis();
    case MEDICOES:
      return isSetMedicoes();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAtendimentoIndividualChildThrift)
      return this.equals((FichaAtendimentoIndividualChildThrift)that);
    return false;
  }

  public boolean equals(FichaAtendimentoIndividualChildThrift that) {
    if (that == null)
      return false;

    boolean this_present_numeroProntuario = true && this.isSetNumeroProntuario();
    boolean that_present_numeroProntuario = true && that.isSetNumeroProntuario();
    if (this_present_numeroProntuario || that_present_numeroProntuario) {
      if (!(this_present_numeroProntuario && that_present_numeroProntuario))
        return false;
      if (!this.numeroProntuario.equals(that.numeroProntuario))
        return false;
    }

    boolean this_present_cns = true && this.isSetCns();
    boolean that_present_cns = true && that.isSetCns();
    if (this_present_cns || that_present_cns) {
      if (!(this_present_cns && that_present_cns))
        return false;
      if (!this.cns.equals(that.cns))
        return false;
    }

    boolean this_present_dataNascimento = true && this.isSetDataNascimento();
    boolean that_present_dataNascimento = true && that.isSetDataNascimento();
    if (this_present_dataNascimento || that_present_dataNascimento) {
      if (!(this_present_dataNascimento && that_present_dataNascimento))
        return false;
      if (this.dataNascimento != that.dataNascimento)
        return false;
    }

    boolean this_present_localDeAtendimento = true && this.isSetLocalDeAtendimento();
    boolean that_present_localDeAtendimento = true && that.isSetLocalDeAtendimento();
    if (this_present_localDeAtendimento || that_present_localDeAtendimento) {
      if (!(this_present_localDeAtendimento && that_present_localDeAtendimento))
        return false;
      if (this.localDeAtendimento != that.localDeAtendimento)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (this.sexo != that.sexo)
        return false;
    }

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_tipoAtendimento = true && this.isSetTipoAtendimento();
    boolean that_present_tipoAtendimento = true && that.isSetTipoAtendimento();
    if (this_present_tipoAtendimento || that_present_tipoAtendimento) {
      if (!(this_present_tipoAtendimento && that_present_tipoAtendimento))
        return false;
      if (this.tipoAtendimento != that.tipoAtendimento)
        return false;
    }

    boolean this_present_pesoAcompanhamentoNutricional = true && this.isSetPesoAcompanhamentoNutricional();
    boolean that_present_pesoAcompanhamentoNutricional = true && that.isSetPesoAcompanhamentoNutricional();
    if (this_present_pesoAcompanhamentoNutricional || that_present_pesoAcompanhamentoNutricional) {
      if (!(this_present_pesoAcompanhamentoNutricional && that_present_pesoAcompanhamentoNutricional))
        return false;
      if (this.pesoAcompanhamentoNutricional != that.pesoAcompanhamentoNutricional)
        return false;
    }

    boolean this_present_alturaAcompanhamentoNutricional = true && this.isSetAlturaAcompanhamentoNutricional();
    boolean that_present_alturaAcompanhamentoNutricional = true && that.isSetAlturaAcompanhamentoNutricional();
    if (this_present_alturaAcompanhamentoNutricional || that_present_alturaAcompanhamentoNutricional) {
      if (!(this_present_alturaAcompanhamentoNutricional && that_present_alturaAcompanhamentoNutricional))
        return false;
      if (this.alturaAcompanhamentoNutricional != that.alturaAcompanhamentoNutricional)
        return false;
    }

    boolean this_present_aleitamentoMaterno = true && this.isSetAleitamentoMaterno();
    boolean that_present_aleitamentoMaterno = true && that.isSetAleitamentoMaterno();
    if (this_present_aleitamentoMaterno || that_present_aleitamentoMaterno) {
      if (!(this_present_aleitamentoMaterno && that_present_aleitamentoMaterno))
        return false;
      if (this.aleitamentoMaterno != that.aleitamentoMaterno)
        return false;
    }

    boolean this_present_dumDaGestante = true && this.isSetDumDaGestante();
    boolean that_present_dumDaGestante = true && that.isSetDumDaGestante();
    if (this_present_dumDaGestante || that_present_dumDaGestante) {
      if (!(this_present_dumDaGestante && that_present_dumDaGestante))
        return false;
      if (this.dumDaGestante != that.dumDaGestante)
        return false;
    }

    boolean this_present_idadeGestacional = true && this.isSetIdadeGestacional();
    boolean that_present_idadeGestacional = true && that.isSetIdadeGestacional();
    if (this_present_idadeGestacional || that_present_idadeGestacional) {
      if (!(this_present_idadeGestacional && that_present_idadeGestacional))
        return false;
      if (this.idadeGestacional != that.idadeGestacional)
        return false;
    }

    boolean this_present_atencaoDomiciliarModalidade = true && this.isSetAtencaoDomiciliarModalidade();
    boolean that_present_atencaoDomiciliarModalidade = true && that.isSetAtencaoDomiciliarModalidade();
    if (this_present_atencaoDomiciliarModalidade || that_present_atencaoDomiciliarModalidade) {
      if (!(this_present_atencaoDomiciliarModalidade && that_present_atencaoDomiciliarModalidade))
        return false;
      if (this.atencaoDomiciliarModalidade != that.atencaoDomiciliarModalidade)
        return false;
    }

    boolean this_present_problemaCondicaoAvaliada = true && this.isSetProblemaCondicaoAvaliada();
    boolean that_present_problemaCondicaoAvaliada = true && that.isSetProblemaCondicaoAvaliada();
    if (this_present_problemaCondicaoAvaliada || that_present_problemaCondicaoAvaliada) {
      if (!(this_present_problemaCondicaoAvaliada && that_present_problemaCondicaoAvaliada))
        return false;
      if (!this.problemaCondicaoAvaliada.equals(that.problemaCondicaoAvaliada))
        return false;
    }

    boolean this_present_exame = true && this.isSetExame();
    boolean that_present_exame = true && that.isSetExame();
    if (this_present_exame || that_present_exame) {
      if (!(this_present_exame && that_present_exame))
        return false;
      if (!this.exame.equals(that.exame))
        return false;
    }

    boolean this_present_vacinaEmDia = true && this.isSetVacinaEmDia();
    boolean that_present_vacinaEmDia = true && that.isSetVacinaEmDia();
    if (this_present_vacinaEmDia || that_present_vacinaEmDia) {
      if (!(this_present_vacinaEmDia && that_present_vacinaEmDia))
        return false;
      if (this.vacinaEmDia != that.vacinaEmDia)
        return false;
    }

    boolean this_present_pic = true && this.isSetPic();
    boolean that_present_pic = true && that.isSetPic();
    if (this_present_pic || that_present_pic) {
      if (!(this_present_pic && that_present_pic))
        return false;
      if (this.pic != that.pic)
        return false;
    }

    boolean this_present_ficouEmObservacao = true && this.isSetFicouEmObservacao();
    boolean that_present_ficouEmObservacao = true && that.isSetFicouEmObservacao();
    if (this_present_ficouEmObservacao || that_present_ficouEmObservacao) {
      if (!(this_present_ficouEmObservacao && that_present_ficouEmObservacao))
        return false;
      if (this.ficouEmObservacao != that.ficouEmObservacao)
        return false;
    }

    boolean this_present_nasfs = true && this.isSetNasfs();
    boolean that_present_nasfs = true && that.isSetNasfs();
    if (this_present_nasfs || that_present_nasfs) {
      if (!(this_present_nasfs && that_present_nasfs))
        return false;
      if (!this.nasfs.equals(that.nasfs))
        return false;
    }

    boolean this_present_condutas = true && this.isSetCondutas();
    boolean that_present_condutas = true && that.isSetCondutas();
    if (this_present_condutas || that_present_condutas) {
      if (!(this_present_condutas && that_present_condutas))
        return false;
      if (!this.condutas.equals(that.condutas))
        return false;
    }

    boolean this_present_stGravidezPlanejada = true && this.isSetStGravidezPlanejada();
    boolean that_present_stGravidezPlanejada = true && that.isSetStGravidezPlanejada();
    if (this_present_stGravidezPlanejada || that_present_stGravidezPlanejada) {
      if (!(this_present_stGravidezPlanejada && that_present_stGravidezPlanejada))
        return false;
      if (this.stGravidezPlanejada != that.stGravidezPlanejada)
        return false;
    }

    boolean this_present_nuGestasPrevias = true && this.isSetNuGestasPrevias();
    boolean that_present_nuGestasPrevias = true && that.isSetNuGestasPrevias();
    if (this_present_nuGestasPrevias || that_present_nuGestasPrevias) {
      if (!(this_present_nuGestasPrevias && that_present_nuGestasPrevias))
        return false;
      if (this.nuGestasPrevias != that.nuGestasPrevias)
        return false;
    }

    boolean this_present_nuPartos = true && this.isSetNuPartos();
    boolean that_present_nuPartos = true && that.isSetNuPartos();
    if (this_present_nuPartos || that_present_nuPartos) {
      if (!(this_present_nuPartos && that_present_nuPartos))
        return false;
      if (this.nuPartos != that.nuPartos)
        return false;
    }

    boolean this_present_racionalidadeSaude = true && this.isSetRacionalidadeSaude();
    boolean that_present_racionalidadeSaude = true && that.isSetRacionalidadeSaude();
    if (this_present_racionalidadeSaude || that_present_racionalidadeSaude) {
      if (!(this_present_racionalidadeSaude && that_present_racionalidadeSaude))
        return false;
      if (this.racionalidadeSaude != that.racionalidadeSaude)
        return false;
    }

    boolean this_present_perimetroCefalico = true && this.isSetPerimetroCefalico();
    boolean that_present_perimetroCefalico = true && that.isSetPerimetroCefalico();
    if (this_present_perimetroCefalico || that_present_perimetroCefalico) {
      if (!(this_present_perimetroCefalico && that_present_perimetroCefalico))
        return false;
      if (this.perimetroCefalico != that.perimetroCefalico)
        return false;
    }

    boolean this_present_dataHoraInicialAtendimento = true && this.isSetDataHoraInicialAtendimento();
    boolean that_present_dataHoraInicialAtendimento = true && that.isSetDataHoraInicialAtendimento();
    if (this_present_dataHoraInicialAtendimento || that_present_dataHoraInicialAtendimento) {
      if (!(this_present_dataHoraInicialAtendimento && that_present_dataHoraInicialAtendimento))
        return false;
      if (this.dataHoraInicialAtendimento != that.dataHoraInicialAtendimento)
        return false;
    }

    boolean this_present_dataHoraFinalAtendimento = true && this.isSetDataHoraFinalAtendimento();
    boolean that_present_dataHoraFinalAtendimento = true && that.isSetDataHoraFinalAtendimento();
    if (this_present_dataHoraFinalAtendimento || that_present_dataHoraFinalAtendimento) {
      if (!(this_present_dataHoraFinalAtendimento && that_present_dataHoraFinalAtendimento))
        return false;
      if (this.dataHoraFinalAtendimento != that.dataHoraFinalAtendimento)
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    boolean this_present_medicamentos = true && this.isSetMedicamentos();
    boolean that_present_medicamentos = true && that.isSetMedicamentos();
    if (this_present_medicamentos || that_present_medicamentos) {
      if (!(this_present_medicamentos && that_present_medicamentos))
        return false;
      if (!this.medicamentos.equals(that.medicamentos))
        return false;
    }

    boolean this_present_encaminhamentos = true && this.isSetEncaminhamentos();
    boolean that_present_encaminhamentos = true && that.isSetEncaminhamentos();
    if (this_present_encaminhamentos || that_present_encaminhamentos) {
      if (!(this_present_encaminhamentos && that_present_encaminhamentos))
        return false;
      if (!this.encaminhamentos.equals(that.encaminhamentos))
        return false;
    }

    boolean this_present_resultadosExames = true && this.isSetResultadosExames();
    boolean that_present_resultadosExames = true && that.isSetResultadosExames();
    if (this_present_resultadosExames || that_present_resultadosExames) {
      if (!(this_present_resultadosExames && that_present_resultadosExames))
        return false;
      if (!this.resultadosExames.equals(that.resultadosExames))
        return false;
    }

    boolean this_present_uuidRnds = true && this.isSetUuidRnds();
    boolean that_present_uuidRnds = true && that.isSetUuidRnds();
    if (this_present_uuidRnds || that_present_uuidRnds) {
      if (!(this_present_uuidRnds && that_present_uuidRnds))
        return false;
      if (!this.uuidRnds.equals(that.uuidRnds))
        return false;
    }

    boolean this_present_finalizadorObservacao = true && this.isSetFinalizadorObservacao();
    boolean that_present_finalizadorObservacao = true && that.isSetFinalizadorObservacao();
    if (this_present_finalizadorObservacao || that_present_finalizadorObservacao) {
      if (!(this_present_finalizadorObservacao && that_present_finalizadorObservacao))
        return false;
      if (!this.finalizadorObservacao.equals(that.finalizadorObservacao))
        return false;
    }

    boolean this_present_tipoParticipacaoCidadao = true && this.isSetTipoParticipacaoCidadao();
    boolean that_present_tipoParticipacaoCidadao = true && that.isSetTipoParticipacaoCidadao();
    if (this_present_tipoParticipacaoCidadao || that_present_tipoParticipacaoCidadao) {
      if (!(this_present_tipoParticipacaoCidadao && that_present_tipoParticipacaoCidadao))
        return false;
      if (this.tipoParticipacaoCidadao != that.tipoParticipacaoCidadao)
        return false;
    }

    boolean this_present_tipoParticipacaoProfissionalConvidado = true && this.isSetTipoParticipacaoProfissionalConvidado();
    boolean that_present_tipoParticipacaoProfissionalConvidado = true && that.isSetTipoParticipacaoProfissionalConvidado();
    if (this_present_tipoParticipacaoProfissionalConvidado || that_present_tipoParticipacaoProfissionalConvidado) {
      if (!(this_present_tipoParticipacaoProfissionalConvidado && that_present_tipoParticipacaoProfissionalConvidado))
        return false;
      if (this.tipoParticipacaoProfissionalConvidado != that.tipoParticipacaoProfissionalConvidado)
        return false;
    }

    boolean this_present_emultis = true && this.isSetEmultis();
    boolean that_present_emultis = true && that.isSetEmultis();
    if (this_present_emultis || that_present_emultis) {
      if (!(this_present_emultis && that_present_emultis))
        return false;
      if (!this.emultis.equals(that.emultis))
        return false;
    }

    boolean this_present_medicoes = true && this.isSetMedicoes();
    boolean that_present_medicoes = true && that.isSetMedicoes();
    if (this_present_medicoes || that_present_medicoes) {
      if (!(this_present_medicoes && that_present_medicoes))
        return false;
      if (!this.medicoes.equals(that.medicoes))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_numeroProntuario = true && (isSetNumeroProntuario());
    list.add(present_numeroProntuario);
    if (present_numeroProntuario)
      list.add(numeroProntuario);

    boolean present_cns = true && (isSetCns());
    list.add(present_cns);
    if (present_cns)
      list.add(cns);

    boolean present_dataNascimento = true && (isSetDataNascimento());
    list.add(present_dataNascimento);
    if (present_dataNascimento)
      list.add(dataNascimento);

    boolean present_localDeAtendimento = true && (isSetLocalDeAtendimento());
    list.add(present_localDeAtendimento);
    if (present_localDeAtendimento)
      list.add(localDeAtendimento);

    boolean present_sexo = true && (isSetSexo());
    list.add(present_sexo);
    if (present_sexo)
      list.add(sexo);

    boolean present_turno = true && (isSetTurno());
    list.add(present_turno);
    if (present_turno)
      list.add(turno);

    boolean present_tipoAtendimento = true && (isSetTipoAtendimento());
    list.add(present_tipoAtendimento);
    if (present_tipoAtendimento)
      list.add(tipoAtendimento);

    boolean present_pesoAcompanhamentoNutricional = true && (isSetPesoAcompanhamentoNutricional());
    list.add(present_pesoAcompanhamentoNutricional);
    if (present_pesoAcompanhamentoNutricional)
      list.add(pesoAcompanhamentoNutricional);

    boolean present_alturaAcompanhamentoNutricional = true && (isSetAlturaAcompanhamentoNutricional());
    list.add(present_alturaAcompanhamentoNutricional);
    if (present_alturaAcompanhamentoNutricional)
      list.add(alturaAcompanhamentoNutricional);

    boolean present_aleitamentoMaterno = true && (isSetAleitamentoMaterno());
    list.add(present_aleitamentoMaterno);
    if (present_aleitamentoMaterno)
      list.add(aleitamentoMaterno);

    boolean present_dumDaGestante = true && (isSetDumDaGestante());
    list.add(present_dumDaGestante);
    if (present_dumDaGestante)
      list.add(dumDaGestante);

    boolean present_idadeGestacional = true && (isSetIdadeGestacional());
    list.add(present_idadeGestacional);
    if (present_idadeGestacional)
      list.add(idadeGestacional);

    boolean present_atencaoDomiciliarModalidade = true && (isSetAtencaoDomiciliarModalidade());
    list.add(present_atencaoDomiciliarModalidade);
    if (present_atencaoDomiciliarModalidade)
      list.add(atencaoDomiciliarModalidade);

    boolean present_problemaCondicaoAvaliada = true && (isSetProblemaCondicaoAvaliada());
    list.add(present_problemaCondicaoAvaliada);
    if (present_problemaCondicaoAvaliada)
      list.add(problemaCondicaoAvaliada);

    boolean present_exame = true && (isSetExame());
    list.add(present_exame);
    if (present_exame)
      list.add(exame);

    boolean present_vacinaEmDia = true && (isSetVacinaEmDia());
    list.add(present_vacinaEmDia);
    if (present_vacinaEmDia)
      list.add(vacinaEmDia);

    boolean present_pic = true && (isSetPic());
    list.add(present_pic);
    if (present_pic)
      list.add(pic);

    boolean present_ficouEmObservacao = true && (isSetFicouEmObservacao());
    list.add(present_ficouEmObservacao);
    if (present_ficouEmObservacao)
      list.add(ficouEmObservacao);

    boolean present_nasfs = true && (isSetNasfs());
    list.add(present_nasfs);
    if (present_nasfs)
      list.add(nasfs);

    boolean present_condutas = true && (isSetCondutas());
    list.add(present_condutas);
    if (present_condutas)
      list.add(condutas);

    boolean present_stGravidezPlanejada = true && (isSetStGravidezPlanejada());
    list.add(present_stGravidezPlanejada);
    if (present_stGravidezPlanejada)
      list.add(stGravidezPlanejada);

    boolean present_nuGestasPrevias = true && (isSetNuGestasPrevias());
    list.add(present_nuGestasPrevias);
    if (present_nuGestasPrevias)
      list.add(nuGestasPrevias);

    boolean present_nuPartos = true && (isSetNuPartos());
    list.add(present_nuPartos);
    if (present_nuPartos)
      list.add(nuPartos);

    boolean present_racionalidadeSaude = true && (isSetRacionalidadeSaude());
    list.add(present_racionalidadeSaude);
    if (present_racionalidadeSaude)
      list.add(racionalidadeSaude);

    boolean present_perimetroCefalico = true && (isSetPerimetroCefalico());
    list.add(present_perimetroCefalico);
    if (present_perimetroCefalico)
      list.add(perimetroCefalico);

    boolean present_dataHoraInicialAtendimento = true && (isSetDataHoraInicialAtendimento());
    list.add(present_dataHoraInicialAtendimento);
    if (present_dataHoraInicialAtendimento)
      list.add(dataHoraInicialAtendimento);

    boolean present_dataHoraFinalAtendimento = true && (isSetDataHoraFinalAtendimento());
    list.add(present_dataHoraFinalAtendimento);
    if (present_dataHoraFinalAtendimento)
      list.add(dataHoraFinalAtendimento);

    boolean present_cpfCidadao = true && (isSetCpfCidadao());
    list.add(present_cpfCidadao);
    if (present_cpfCidadao)
      list.add(cpfCidadao);

    boolean present_medicamentos = true && (isSetMedicamentos());
    list.add(present_medicamentos);
    if (present_medicamentos)
      list.add(medicamentos);

    boolean present_encaminhamentos = true && (isSetEncaminhamentos());
    list.add(present_encaminhamentos);
    if (present_encaminhamentos)
      list.add(encaminhamentos);

    boolean present_resultadosExames = true && (isSetResultadosExames());
    list.add(present_resultadosExames);
    if (present_resultadosExames)
      list.add(resultadosExames);

    boolean present_uuidRnds = true && (isSetUuidRnds());
    list.add(present_uuidRnds);
    if (present_uuidRnds)
      list.add(uuidRnds);

    boolean present_finalizadorObservacao = true && (isSetFinalizadorObservacao());
    list.add(present_finalizadorObservacao);
    if (present_finalizadorObservacao)
      list.add(finalizadorObservacao);

    boolean present_tipoParticipacaoCidadao = true && (isSetTipoParticipacaoCidadao());
    list.add(present_tipoParticipacaoCidadao);
    if (present_tipoParticipacaoCidadao)
      list.add(tipoParticipacaoCidadao);

    boolean present_tipoParticipacaoProfissionalConvidado = true && (isSetTipoParticipacaoProfissionalConvidado());
    list.add(present_tipoParticipacaoProfissionalConvidado);
    if (present_tipoParticipacaoProfissionalConvidado)
      list.add(tipoParticipacaoProfissionalConvidado);

    boolean present_emultis = true && (isSetEmultis());
    list.add(present_emultis);
    if (present_emultis)
      list.add(emultis);

    boolean present_medicoes = true && (isSetMedicoes());
    list.add(present_medicoes);
    if (present_medicoes)
      list.add(medicoes);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaAtendimentoIndividualChildThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetNumeroProntuario()).compareTo(other.isSetNumeroProntuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroProntuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroProntuario, other.numeroProntuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCns()).compareTo(other.isSetCns());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCns()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cns, other.cns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimento()).compareTo(other.isSetDataNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimento, other.dataNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalDeAtendimento()).compareTo(other.isSetLocalDeAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalDeAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localDeAtendimento, other.localDeAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(other.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, other.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(other.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, other.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoAtendimento()).compareTo(other.isSetTipoAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoAtendimento, other.tipoAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPesoAcompanhamentoNutricional()).compareTo(other.isSetPesoAcompanhamentoNutricional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPesoAcompanhamentoNutricional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pesoAcompanhamentoNutricional, other.pesoAcompanhamentoNutricional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAlturaAcompanhamentoNutricional()).compareTo(other.isSetAlturaAcompanhamentoNutricional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAlturaAcompanhamentoNutricional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.alturaAcompanhamentoNutricional, other.alturaAcompanhamentoNutricional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAleitamentoMaterno()).compareTo(other.isSetAleitamentoMaterno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAleitamentoMaterno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aleitamentoMaterno, other.aleitamentoMaterno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDumDaGestante()).compareTo(other.isSetDumDaGestante());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDumDaGestante()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dumDaGestante, other.dumDaGestante);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdadeGestacional()).compareTo(other.isSetIdadeGestacional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdadeGestacional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idadeGestacional, other.idadeGestacional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarModalidade()).compareTo(other.isSetAtencaoDomiciliarModalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarModalidade, other.atencaoDomiciliarModalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProblemaCondicaoAvaliada()).compareTo(other.isSetProblemaCondicaoAvaliada());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProblemaCondicaoAvaliada()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.problemaCondicaoAvaliada, other.problemaCondicaoAvaliada);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExame()).compareTo(other.isSetExame());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExame()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.exame, other.exame);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVacinaEmDia()).compareTo(other.isSetVacinaEmDia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVacinaEmDia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vacinaEmDia, other.vacinaEmDia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPic()).compareTo(other.isSetPic());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPic()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pic, other.pic);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFicouEmObservacao()).compareTo(other.isSetFicouEmObservacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFicouEmObservacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ficouEmObservacao, other.ficouEmObservacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNasfs()).compareTo(other.isSetNasfs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNasfs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nasfs, other.nasfs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondutas()).compareTo(other.isSetCondutas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondutas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condutas, other.condutas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStGravidezPlanejada()).compareTo(other.isSetStGravidezPlanejada());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStGravidezPlanejada()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stGravidezPlanejada, other.stGravidezPlanejada);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNuGestasPrevias()).compareTo(other.isSetNuGestasPrevias());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNuGestasPrevias()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nuGestasPrevias, other.nuGestasPrevias);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNuPartos()).compareTo(other.isSetNuPartos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNuPartos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nuPartos, other.nuPartos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRacionalidadeSaude()).compareTo(other.isSetRacionalidadeSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRacionalidadeSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.racionalidadeSaude, other.racionalidadeSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPerimetroCefalico()).compareTo(other.isSetPerimetroCefalico());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPerimetroCefalico()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.perimetroCefalico, other.perimetroCefalico);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataHoraInicialAtendimento()).compareTo(other.isSetDataHoraInicialAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataHoraInicialAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataHoraInicialAtendimento, other.dataHoraInicialAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataHoraFinalAtendimento()).compareTo(other.isSetDataHoraFinalAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataHoraFinalAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataHoraFinalAtendimento, other.dataHoraFinalAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(other.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, other.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedicamentos()).compareTo(other.isSetMedicamentos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedicamentos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.medicamentos, other.medicamentos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEncaminhamentos()).compareTo(other.isSetEncaminhamentos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEncaminhamentos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.encaminhamentos, other.encaminhamentos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResultadosExames()).compareTo(other.isSetResultadosExames());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultadosExames()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultadosExames, other.resultadosExames);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidRnds()).compareTo(other.isSetUuidRnds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidRnds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidRnds, other.uuidRnds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFinalizadorObservacao()).compareTo(other.isSetFinalizadorObservacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinalizadorObservacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finalizadorObservacao, other.finalizadorObservacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoParticipacaoCidadao()).compareTo(other.isSetTipoParticipacaoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoParticipacaoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoParticipacaoCidadao, other.tipoParticipacaoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoParticipacaoProfissionalConvidado()).compareTo(other.isSetTipoParticipacaoProfissionalConvidado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoParticipacaoProfissionalConvidado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoParticipacaoProfissionalConvidado, other.tipoParticipacaoProfissionalConvidado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmultis()).compareTo(other.isSetEmultis());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmultis()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emultis, other.emultis);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedicoes()).compareTo(other.isSetMedicoes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedicoes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.medicoes, other.medicoes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAtendimentoIndividualChildThrift(");
    boolean first = true;

    if (isSetNumeroProntuario()) {
      sb.append("numeroProntuario:");
      if (this.numeroProntuario == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroProntuario);
      }
      first = false;
    }
    if (isSetCns()) {
      if (!first) sb.append(", ");
      sb.append("cns:");
      if (this.cns == null) {
        sb.append("null");
      } else {
        sb.append(this.cns);
      }
      first = false;
    }
    if (isSetDataNascimento()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimento:");
      sb.append(this.dataNascimento);
      first = false;
    }
    if (isSetLocalDeAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("localDeAtendimento:");
      sb.append(this.localDeAtendimento);
      first = false;
    }
    if (isSetSexo()) {
      if (!first) sb.append(", ");
      sb.append("sexo:");
      sb.append(this.sexo);
      first = false;
    }
    if (isSetTurno()) {
      if (!first) sb.append(", ");
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetTipoAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("tipoAtendimento:");
      sb.append(this.tipoAtendimento);
      first = false;
    }
    if (isSetPesoAcompanhamentoNutricional()) {
      if (!first) sb.append(", ");
      sb.append("pesoAcompanhamentoNutricional:");
      sb.append(this.pesoAcompanhamentoNutricional);
      first = false;
    }
    if (isSetAlturaAcompanhamentoNutricional()) {
      if (!first) sb.append(", ");
      sb.append("alturaAcompanhamentoNutricional:");
      sb.append(this.alturaAcompanhamentoNutricional);
      first = false;
    }
    if (isSetAleitamentoMaterno()) {
      if (!first) sb.append(", ");
      sb.append("aleitamentoMaterno:");
      sb.append(this.aleitamentoMaterno);
      first = false;
    }
    if (isSetDumDaGestante()) {
      if (!first) sb.append(", ");
      sb.append("dumDaGestante:");
      sb.append(this.dumDaGestante);
      first = false;
    }
    if (isSetIdadeGestacional()) {
      if (!first) sb.append(", ");
      sb.append("idadeGestacional:");
      sb.append(this.idadeGestacional);
      first = false;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarModalidade:");
      sb.append(this.atencaoDomiciliarModalidade);
      first = false;
    }
    if (isSetProblemaCondicaoAvaliada()) {
      if (!first) sb.append(", ");
      sb.append("problemaCondicaoAvaliada:");
      if (this.problemaCondicaoAvaliada == null) {
        sb.append("null");
      } else {
        sb.append(this.problemaCondicaoAvaliada);
      }
      first = false;
    }
    if (isSetExame()) {
      if (!first) sb.append(", ");
      sb.append("exame:");
      if (this.exame == null) {
        sb.append("null");
      } else {
        sb.append(this.exame);
      }
      first = false;
    }
    if (isSetVacinaEmDia()) {
      if (!first) sb.append(", ");
      sb.append("vacinaEmDia:");
      sb.append(this.vacinaEmDia);
      first = false;
    }
    if (isSetPic()) {
      if (!first) sb.append(", ");
      sb.append("pic:");
      sb.append(this.pic);
      first = false;
    }
    if (isSetFicouEmObservacao()) {
      if (!first) sb.append(", ");
      sb.append("ficouEmObservacao:");
      sb.append(this.ficouEmObservacao);
      first = false;
    }
    if (isSetNasfs()) {
      if (!first) sb.append(", ");
      sb.append("nasfs:");
      if (this.nasfs == null) {
        sb.append("null");
      } else {
        sb.append(this.nasfs);
      }
      first = false;
    }
    if (isSetCondutas()) {
      if (!first) sb.append(", ");
      sb.append("condutas:");
      if (this.condutas == null) {
        sb.append("null");
      } else {
        sb.append(this.condutas);
      }
      first = false;
    }
    if (isSetStGravidezPlanejada()) {
      if (!first) sb.append(", ");
      sb.append("stGravidezPlanejada:");
      sb.append(this.stGravidezPlanejada);
      first = false;
    }
    if (isSetNuGestasPrevias()) {
      if (!first) sb.append(", ");
      sb.append("nuGestasPrevias:");
      sb.append(this.nuGestasPrevias);
      first = false;
    }
    if (isSetNuPartos()) {
      if (!first) sb.append(", ");
      sb.append("nuPartos:");
      sb.append(this.nuPartos);
      first = false;
    }
    if (isSetRacionalidadeSaude()) {
      if (!first) sb.append(", ");
      sb.append("racionalidadeSaude:");
      sb.append(this.racionalidadeSaude);
      first = false;
    }
    if (isSetPerimetroCefalico()) {
      if (!first) sb.append(", ");
      sb.append("perimetroCefalico:");
      sb.append(this.perimetroCefalico);
      first = false;
    }
    if (isSetDataHoraInicialAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("dataHoraInicialAtendimento:");
      sb.append(this.dataHoraInicialAtendimento);
      first = false;
    }
    if (isSetDataHoraFinalAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("dataHoraFinalAtendimento:");
      sb.append(this.dataHoraFinalAtendimento);
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    if (isSetMedicamentos()) {
      if (!first) sb.append(", ");
      sb.append("medicamentos:");
      if (this.medicamentos == null) {
        sb.append("null");
      } else {
        sb.append(this.medicamentos);
      }
      first = false;
    }
    if (isSetEncaminhamentos()) {
      if (!first) sb.append(", ");
      sb.append("encaminhamentos:");
      if (this.encaminhamentos == null) {
        sb.append("null");
      } else {
        sb.append(this.encaminhamentos);
      }
      first = false;
    }
    if (isSetResultadosExames()) {
      if (!first) sb.append(", ");
      sb.append("resultadosExames:");
      if (this.resultadosExames == null) {
        sb.append("null");
      } else {
        sb.append(this.resultadosExames);
      }
      first = false;
    }
    if (isSetUuidRnds()) {
      if (!first) sb.append(", ");
      sb.append("uuidRnds:");
      if (this.uuidRnds == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidRnds);
      }
      first = false;
    }
    if (isSetFinalizadorObservacao()) {
      if (!first) sb.append(", ");
      sb.append("finalizadorObservacao:");
      if (this.finalizadorObservacao == null) {
        sb.append("null");
      } else {
        sb.append(this.finalizadorObservacao);
      }
      first = false;
    }
    if (isSetTipoParticipacaoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("tipoParticipacaoCidadao:");
      sb.append(this.tipoParticipacaoCidadao);
      first = false;
    }
    if (isSetTipoParticipacaoProfissionalConvidado()) {
      if (!first) sb.append(", ");
      sb.append("tipoParticipacaoProfissionalConvidado:");
      sb.append(this.tipoParticipacaoProfissionalConvidado);
      first = false;
    }
    if (isSetEmultis()) {
      if (!first) sb.append(", ");
      sb.append("emultis:");
      if (this.emultis == null) {
        sb.append("null");
      } else {
        sb.append(this.emultis);
      }
      first = false;
    }
    if (isSetMedicoes()) {
      if (!first) sb.append(", ");
      sb.append("medicoes:");
      if (this.medicoes == null) {
        sb.append("null");
      } else {
        sb.append(this.medicoes);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (problemaCondicaoAvaliada != null) {
      problemaCondicaoAvaliada.validate();
    }
    if (finalizadorObservacao != null) {
      finalizadorObservacao.validate();
    }
    if (medicoes != null) {
      medicoes.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAtendimentoIndividualChildThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAtendimentoIndividualChildThriftStandardScheme getScheme() {
      return new FichaAtendimentoIndividualChildThriftStandardScheme();
    }
  }

  private static class FichaAtendimentoIndividualChildThriftStandardScheme extends StandardScheme<FichaAtendimentoIndividualChildThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NUMERO_PRONTUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroProntuario = iprot.readString();
              struct.setNumeroProntuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CNS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cns = iprot.readString();
              struct.setCnsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATA_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimento = iprot.readI64();
              struct.setDataNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOCAL_DE_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.localDeAtendimento = iprot.readI64();
              struct.setLocalDeAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexo = iprot.readI64();
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TIPO_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoAtendimento = iprot.readI64();
              struct.setTipoAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PESO_ACOMPANHAMENTO_NUTRICIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.pesoAcompanhamentoNutricional = iprot.readDouble();
              struct.setPesoAcompanhamentoNutricionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ALTURA_ACOMPANHAMENTO_NUTRICIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.alturaAcompanhamentoNutricional = iprot.readDouble();
              struct.setAlturaAcompanhamentoNutricionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ALEITAMENTO_MATERNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.aleitamentoMaterno = iprot.readI64();
              struct.setAleitamentoMaternoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DUM_DA_GESTANTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dumDaGestante = iprot.readI64();
              struct.setDumDaGestanteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IDADE_GESTACIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idadeGestacional = iprot.readI32();
              struct.setIdadeGestacionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ATENCAO_DOMICILIAR_MODALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarModalidade = iprot.readI64();
              struct.setAtencaoDomiciliarModalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PROBLEMA_CONDICAO_AVALIADA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.problemaCondicaoAvaliada = new ProblemaCondicaoAvaliacaoAIThrift();
              struct.problemaCondicaoAvaliada.read(iprot);
              struct.setProblemaCondicaoAvaliadaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // EXAME
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.exame = new ArrayList<ExameThrift>(_list16.size);
                ExameThrift _elem17;
                for (int _i18 = 0; _i18 < _list16.size; ++_i18)
                {
                  _elem17 = new ExameThrift();
                  _elem17.read(iprot);
                  struct.exame.add(_elem17);
                }
                iprot.readListEnd();
              }
              struct.setExameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // VACINA_EM_DIA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.vacinaEmDia = iprot.readBool();
              struct.setVacinaEmDiaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PIC
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.pic = iprot.readI64();
              struct.setPicIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // FICOU_EM_OBSERVACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.ficouEmObservacao = iprot.readBool();
              struct.setFicouEmObservacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // NASFS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.nasfs = new ArrayList<Long>(_list19.size);
                long _elem20;
                for (int _i21 = 0; _i21 < _list19.size; ++_i21)
                {
                  _elem20 = iprot.readI64();
                  struct.nasfs.add(_elem20);
                }
                iprot.readListEnd();
              }
              struct.setNasfsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CONDUTAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list22 = iprot.readListBegin();
                struct.condutas = new ArrayList<Long>(_list22.size);
                long _elem23;
                for (int _i24 = 0; _i24 < _list22.size; ++_i24)
                {
                  _elem23 = iprot.readI64();
                  struct.condutas.add(_elem23);
                }
                iprot.readListEnd();
              }
              struct.setCondutasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // ST_GRAVIDEZ_PLANEJADA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stGravidezPlanejada = iprot.readBool();
              struct.setStGravidezPlanejadaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // NU_GESTAS_PREVIAS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nuGestasPrevias = iprot.readI32();
              struct.setNuGestasPreviasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // NU_PARTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nuPartos = iprot.readI32();
              struct.setNuPartosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // RACIONALIDADE_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.racionalidadeSaude = iprot.readI64();
              struct.setRacionalidadeSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // PERIMETRO_CEFALICO
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.perimetroCefalico = iprot.readDouble();
              struct.setPerimetroCefalicoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // DATA_HORA_INICIAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataHoraInicialAtendimento = iprot.readI64();
              struct.setDataHoraInicialAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // DATA_HORA_FINAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataHoraFinalAtendimento = iprot.readI64();
              struct.setDataHoraFinalAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // MEDICAMENTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list25 = iprot.readListBegin();
                struct.medicamentos = new ArrayList<br.gov.saude.esusab.ras.common.MedicamentoThrift>(_list25.size);
                br.gov.saude.esusab.ras.common.MedicamentoThrift _elem26;
                for (int _i27 = 0; _i27 < _list25.size; ++_i27)
                {
                  _elem26 = new br.gov.saude.esusab.ras.common.MedicamentoThrift();
                  _elem26.read(iprot);
                  struct.medicamentos.add(_elem26);
                }
                iprot.readListEnd();
              }
              struct.setMedicamentosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // ENCAMINHAMENTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list28 = iprot.readListBegin();
                struct.encaminhamentos = new ArrayList<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift>(_list28.size);
                br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift _elem29;
                for (int _i30 = 0; _i30 < _list28.size; ++_i30)
                {
                  _elem29 = new br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift();
                  _elem29.read(iprot);
                  struct.encaminhamentos.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setEncaminhamentosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // RESULTADOS_EXAMES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list31 = iprot.readListBegin();
                struct.resultadosExames = new ArrayList<br.gov.saude.esusab.ras.common.ResultadosExameThrift>(_list31.size);
                br.gov.saude.esusab.ras.common.ResultadosExameThrift _elem32;
                for (int _i33 = 0; _i33 < _list31.size; ++_i33)
                {
                  _elem32 = new br.gov.saude.esusab.ras.common.ResultadosExameThrift();
                  _elem32.read(iprot);
                  struct.resultadosExames.add(_elem32);
                }
                iprot.readListEnd();
              }
              struct.setResultadosExamesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // UUID_RNDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidRnds = iprot.readString();
              struct.setUuidRndsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // FINALIZADOR_OBSERVACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.finalizadorObservacao = new br.gov.saude.esusab.ras.common.LotacaoHeaderThrift();
              struct.finalizadorObservacao.read(iprot);
              struct.setFinalizadorObservacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // TIPO_PARTICIPACAO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoParticipacaoCidadao = iprot.readI64();
              struct.setTipoParticipacaoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoParticipacaoProfissionalConvidado = iprot.readI64();
              struct.setTipoParticipacaoProfissionalConvidadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // EMULTIS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list34 = iprot.readListBegin();
                struct.emultis = new ArrayList<Long>(_list34.size);
                long _elem35;
                for (int _i36 = 0; _i36 < _list34.size; ++_i36)
                {
                  _elem35 = iprot.readI64();
                  struct.emultis.add(_elem35);
                }
                iprot.readListEnd();
              }
              struct.setEmultisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // MEDICOES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.medicoes = new br.gov.saude.esusab.ras.common.MedicoesThrift();
              struct.medicoes.read(iprot);
              struct.setMedicoesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.numeroProntuario != null) {
        if (struct.isSetNumeroProntuario()) {
          oprot.writeFieldBegin(NUMERO_PRONTUARIO_FIELD_DESC);
          oprot.writeString(struct.numeroProntuario);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cns != null) {
        if (struct.isSetCns()) {
          oprot.writeFieldBegin(CNS_FIELD_DESC);
          oprot.writeString(struct.cns);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLocalDeAtendimento()) {
        oprot.writeFieldBegin(LOCAL_DE_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.localDeAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexo()) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI64(struct.sexo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoAtendimento()) {
        oprot.writeFieldBegin(TIPO_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.tipoAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPesoAcompanhamentoNutricional()) {
        oprot.writeFieldBegin(PESO_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC);
        oprot.writeDouble(struct.pesoAcompanhamentoNutricional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAlturaAcompanhamentoNutricional()) {
        oprot.writeFieldBegin(ALTURA_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC);
        oprot.writeDouble(struct.alturaAcompanhamentoNutricional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAleitamentoMaterno()) {
        oprot.writeFieldBegin(ALEITAMENTO_MATERNO_FIELD_DESC);
        oprot.writeI64(struct.aleitamentoMaterno);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDumDaGestante()) {
        oprot.writeFieldBegin(DUM_DA_GESTANTE_FIELD_DESC);
        oprot.writeI64(struct.dumDaGestante);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIdadeGestacional()) {
        oprot.writeFieldBegin(IDADE_GESTACIONAL_FIELD_DESC);
        oprot.writeI32(struct.idadeGestacional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
        oprot.writeFieldEnd();
      }
      if (struct.problemaCondicaoAvaliada != null) {
        if (struct.isSetProblemaCondicaoAvaliada()) {
          oprot.writeFieldBegin(PROBLEMA_CONDICAO_AVALIADA_FIELD_DESC);
          struct.problemaCondicaoAvaliada.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.exame != null) {
        if (struct.isSetExame()) {
          oprot.writeFieldBegin(EXAME_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.exame.size()));
            for (ExameThrift _iter37 : struct.exame)
            {
              _iter37.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetVacinaEmDia()) {
        oprot.writeFieldBegin(VACINA_EM_DIA_FIELD_DESC);
        oprot.writeBool(struct.vacinaEmDia);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPic()) {
        oprot.writeFieldBegin(PIC_FIELD_DESC);
        oprot.writeI64(struct.pic);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFicouEmObservacao()) {
        oprot.writeFieldBegin(FICOU_EM_OBSERVACAO_FIELD_DESC);
        oprot.writeBool(struct.ficouEmObservacao);
        oprot.writeFieldEnd();
      }
      if (struct.nasfs != null) {
        if (struct.isSetNasfs()) {
          oprot.writeFieldBegin(NASFS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.nasfs.size()));
            for (long _iter38 : struct.nasfs)
            {
              oprot.writeI64(_iter38);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.condutas != null) {
        if (struct.isSetCondutas()) {
          oprot.writeFieldBegin(CONDUTAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.condutas.size()));
            for (long _iter39 : struct.condutas)
            {
              oprot.writeI64(_iter39);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStGravidezPlanejada()) {
        oprot.writeFieldBegin(ST_GRAVIDEZ_PLANEJADA_FIELD_DESC);
        oprot.writeBool(struct.stGravidezPlanejada);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNuGestasPrevias()) {
        oprot.writeFieldBegin(NU_GESTAS_PREVIAS_FIELD_DESC);
        oprot.writeI32(struct.nuGestasPrevias);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNuPartos()) {
        oprot.writeFieldBegin(NU_PARTOS_FIELD_DESC);
        oprot.writeI32(struct.nuPartos);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRacionalidadeSaude()) {
        oprot.writeFieldBegin(RACIONALIDADE_SAUDE_FIELD_DESC);
        oprot.writeI64(struct.racionalidadeSaude);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPerimetroCefalico()) {
        oprot.writeFieldBegin(PERIMETRO_CEFALICO_FIELD_DESC);
        oprot.writeDouble(struct.perimetroCefalico);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataHoraInicialAtendimento()) {
        oprot.writeFieldBegin(DATA_HORA_INICIAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataHoraInicialAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataHoraFinalAtendimento()) {
        oprot.writeFieldBegin(DATA_HORA_FINAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataHoraFinalAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.medicamentos != null) {
        if (struct.isSetMedicamentos()) {
          oprot.writeFieldBegin(MEDICAMENTOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.medicamentos.size()));
            for (br.gov.saude.esusab.ras.common.MedicamentoThrift _iter40 : struct.medicamentos)
            {
              _iter40.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.encaminhamentos != null) {
        if (struct.isSetEncaminhamentos()) {
          oprot.writeFieldBegin(ENCAMINHAMENTOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.encaminhamentos.size()));
            for (br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift _iter41 : struct.encaminhamentos)
            {
              _iter41.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.resultadosExames != null) {
        if (struct.isSetResultadosExames()) {
          oprot.writeFieldBegin(RESULTADOS_EXAMES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.resultadosExames.size()));
            for (br.gov.saude.esusab.ras.common.ResultadosExameThrift _iter42 : struct.resultadosExames)
            {
              _iter42.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.uuidRnds != null) {
        if (struct.isSetUuidRnds()) {
          oprot.writeFieldBegin(UUID_RNDS_FIELD_DESC);
          oprot.writeString(struct.uuidRnds);
          oprot.writeFieldEnd();
        }
      }
      if (struct.finalizadorObservacao != null) {
        if (struct.isSetFinalizadorObservacao()) {
          oprot.writeFieldBegin(FINALIZADOR_OBSERVACAO_FIELD_DESC);
          struct.finalizadorObservacao.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTipoParticipacaoCidadao()) {
        oprot.writeFieldBegin(TIPO_PARTICIPACAO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.tipoParticipacaoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoParticipacaoProfissionalConvidado()) {
        oprot.writeFieldBegin(TIPO_PARTICIPACAO_PROFISSIONAL_CONVIDADO_FIELD_DESC);
        oprot.writeI64(struct.tipoParticipacaoProfissionalConvidado);
        oprot.writeFieldEnd();
      }
      if (struct.emultis != null) {
        if (struct.isSetEmultis()) {
          oprot.writeFieldBegin(EMULTIS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.emultis.size()));
            for (long _iter43 : struct.emultis)
            {
              oprot.writeI64(_iter43);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.medicoes != null) {
        if (struct.isSetMedicoes()) {
          oprot.writeFieldBegin(MEDICOES_FIELD_DESC);
          struct.medicoes.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAtendimentoIndividualChildThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAtendimentoIndividualChildThriftTupleScheme getScheme() {
      return new FichaAtendimentoIndividualChildThriftTupleScheme();
    }
  }

  private static class FichaAtendimentoIndividualChildThriftTupleScheme extends TupleScheme<FichaAtendimentoIndividualChildThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetNumeroProntuario()) {
        optionals.set(0);
      }
      if (struct.isSetCns()) {
        optionals.set(1);
      }
      if (struct.isSetDataNascimento()) {
        optionals.set(2);
      }
      if (struct.isSetLocalDeAtendimento()) {
        optionals.set(3);
      }
      if (struct.isSetSexo()) {
        optionals.set(4);
      }
      if (struct.isSetTurno()) {
        optionals.set(5);
      }
      if (struct.isSetTipoAtendimento()) {
        optionals.set(6);
      }
      if (struct.isSetPesoAcompanhamentoNutricional()) {
        optionals.set(7);
      }
      if (struct.isSetAlturaAcompanhamentoNutricional()) {
        optionals.set(8);
      }
      if (struct.isSetAleitamentoMaterno()) {
        optionals.set(9);
      }
      if (struct.isSetDumDaGestante()) {
        optionals.set(10);
      }
      if (struct.isSetIdadeGestacional()) {
        optionals.set(11);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        optionals.set(12);
      }
      if (struct.isSetProblemaCondicaoAvaliada()) {
        optionals.set(13);
      }
      if (struct.isSetExame()) {
        optionals.set(14);
      }
      if (struct.isSetVacinaEmDia()) {
        optionals.set(15);
      }
      if (struct.isSetPic()) {
        optionals.set(16);
      }
      if (struct.isSetFicouEmObservacao()) {
        optionals.set(17);
      }
      if (struct.isSetNasfs()) {
        optionals.set(18);
      }
      if (struct.isSetCondutas()) {
        optionals.set(19);
      }
      if (struct.isSetStGravidezPlanejada()) {
        optionals.set(20);
      }
      if (struct.isSetNuGestasPrevias()) {
        optionals.set(21);
      }
      if (struct.isSetNuPartos()) {
        optionals.set(22);
      }
      if (struct.isSetRacionalidadeSaude()) {
        optionals.set(23);
      }
      if (struct.isSetPerimetroCefalico()) {
        optionals.set(24);
      }
      if (struct.isSetDataHoraInicialAtendimento()) {
        optionals.set(25);
      }
      if (struct.isSetDataHoraFinalAtendimento()) {
        optionals.set(26);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(27);
      }
      if (struct.isSetMedicamentos()) {
        optionals.set(28);
      }
      if (struct.isSetEncaminhamentos()) {
        optionals.set(29);
      }
      if (struct.isSetResultadosExames()) {
        optionals.set(30);
      }
      if (struct.isSetUuidRnds()) {
        optionals.set(31);
      }
      if (struct.isSetFinalizadorObservacao()) {
        optionals.set(32);
      }
      if (struct.isSetTipoParticipacaoCidadao()) {
        optionals.set(33);
      }
      if (struct.isSetTipoParticipacaoProfissionalConvidado()) {
        optionals.set(34);
      }
      if (struct.isSetEmultis()) {
        optionals.set(35);
      }
      if (struct.isSetMedicoes()) {
        optionals.set(36);
      }
      oprot.writeBitSet(optionals, 37);
      if (struct.isSetNumeroProntuario()) {
        oprot.writeString(struct.numeroProntuario);
      }
      if (struct.isSetCns()) {
        oprot.writeString(struct.cns);
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeI64(struct.dataNascimento);
      }
      if (struct.isSetLocalDeAtendimento()) {
        oprot.writeI64(struct.localDeAtendimento);
      }
      if (struct.isSetSexo()) {
        oprot.writeI64(struct.sexo);
      }
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetTipoAtendimento()) {
        oprot.writeI64(struct.tipoAtendimento);
      }
      if (struct.isSetPesoAcompanhamentoNutricional()) {
        oprot.writeDouble(struct.pesoAcompanhamentoNutricional);
      }
      if (struct.isSetAlturaAcompanhamentoNutricional()) {
        oprot.writeDouble(struct.alturaAcompanhamentoNutricional);
      }
      if (struct.isSetAleitamentoMaterno()) {
        oprot.writeI64(struct.aleitamentoMaterno);
      }
      if (struct.isSetDumDaGestante()) {
        oprot.writeI64(struct.dumDaGestante);
      }
      if (struct.isSetIdadeGestacional()) {
        oprot.writeI32(struct.idadeGestacional);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
      }
      if (struct.isSetProblemaCondicaoAvaliada()) {
        struct.problemaCondicaoAvaliada.write(oprot);
      }
      if (struct.isSetExame()) {
        {
          oprot.writeI32(struct.exame.size());
          for (ExameThrift _iter44 : struct.exame)
          {
            _iter44.write(oprot);
          }
        }
      }
      if (struct.isSetVacinaEmDia()) {
        oprot.writeBool(struct.vacinaEmDia);
      }
      if (struct.isSetPic()) {
        oprot.writeI64(struct.pic);
      }
      if (struct.isSetFicouEmObservacao()) {
        oprot.writeBool(struct.ficouEmObservacao);
      }
      if (struct.isSetNasfs()) {
        {
          oprot.writeI32(struct.nasfs.size());
          for (long _iter45 : struct.nasfs)
          {
            oprot.writeI64(_iter45);
          }
        }
      }
      if (struct.isSetCondutas()) {
        {
          oprot.writeI32(struct.condutas.size());
          for (long _iter46 : struct.condutas)
          {
            oprot.writeI64(_iter46);
          }
        }
      }
      if (struct.isSetStGravidezPlanejada()) {
        oprot.writeBool(struct.stGravidezPlanejada);
      }
      if (struct.isSetNuGestasPrevias()) {
        oprot.writeI32(struct.nuGestasPrevias);
      }
      if (struct.isSetNuPartos()) {
        oprot.writeI32(struct.nuPartos);
      }
      if (struct.isSetRacionalidadeSaude()) {
        oprot.writeI64(struct.racionalidadeSaude);
      }
      if (struct.isSetPerimetroCefalico()) {
        oprot.writeDouble(struct.perimetroCefalico);
      }
      if (struct.isSetDataHoraInicialAtendimento()) {
        oprot.writeI64(struct.dataHoraInicialAtendimento);
      }
      if (struct.isSetDataHoraFinalAtendimento()) {
        oprot.writeI64(struct.dataHoraFinalAtendimento);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
      if (struct.isSetMedicamentos()) {
        {
          oprot.writeI32(struct.medicamentos.size());
          for (br.gov.saude.esusab.ras.common.MedicamentoThrift _iter47 : struct.medicamentos)
          {
            _iter47.write(oprot);
          }
        }
      }
      if (struct.isSetEncaminhamentos()) {
        {
          oprot.writeI32(struct.encaminhamentos.size());
          for (br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift _iter48 : struct.encaminhamentos)
          {
            _iter48.write(oprot);
          }
        }
      }
      if (struct.isSetResultadosExames()) {
        {
          oprot.writeI32(struct.resultadosExames.size());
          for (br.gov.saude.esusab.ras.common.ResultadosExameThrift _iter49 : struct.resultadosExames)
          {
            _iter49.write(oprot);
          }
        }
      }
      if (struct.isSetUuidRnds()) {
        oprot.writeString(struct.uuidRnds);
      }
      if (struct.isSetFinalizadorObservacao()) {
        struct.finalizadorObservacao.write(oprot);
      }
      if (struct.isSetTipoParticipacaoCidadao()) {
        oprot.writeI64(struct.tipoParticipacaoCidadao);
      }
      if (struct.isSetTipoParticipacaoProfissionalConvidado()) {
        oprot.writeI64(struct.tipoParticipacaoProfissionalConvidado);
      }
      if (struct.isSetEmultis()) {
        {
          oprot.writeI32(struct.emultis.size());
          for (long _iter50 : struct.emultis)
          {
            oprot.writeI64(_iter50);
          }
        }
      }
      if (struct.isSetMedicoes()) {
        struct.medicoes.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(37);
      if (incoming.get(0)) {
        struct.numeroProntuario = iprot.readString();
        struct.setNumeroProntuarioIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cns = iprot.readString();
        struct.setCnsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dataNascimento = iprot.readI64();
        struct.setDataNascimentoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.localDeAtendimento = iprot.readI64();
        struct.setLocalDeAtendimentoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sexo = iprot.readI64();
        struct.setSexoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.tipoAtendimento = iprot.readI64();
        struct.setTipoAtendimentoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.pesoAcompanhamentoNutricional = iprot.readDouble();
        struct.setPesoAcompanhamentoNutricionalIsSet(true);
      }
      if (incoming.get(8)) {
        struct.alturaAcompanhamentoNutricional = iprot.readDouble();
        struct.setAlturaAcompanhamentoNutricionalIsSet(true);
      }
      if (incoming.get(9)) {
        struct.aleitamentoMaterno = iprot.readI64();
        struct.setAleitamentoMaternoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.dumDaGestante = iprot.readI64();
        struct.setDumDaGestanteIsSet(true);
      }
      if (incoming.get(11)) {
        struct.idadeGestacional = iprot.readI32();
        struct.setIdadeGestacionalIsSet(true);
      }
      if (incoming.get(12)) {
        struct.atencaoDomiciliarModalidade = iprot.readI64();
        struct.setAtencaoDomiciliarModalidadeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.problemaCondicaoAvaliada = new ProblemaCondicaoAvaliacaoAIThrift();
        struct.problemaCondicaoAvaliada.read(iprot);
        struct.setProblemaCondicaoAvaliadaIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TList _list51 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.exame = new ArrayList<ExameThrift>(_list51.size);
          ExameThrift _elem52;
          for (int _i53 = 0; _i53 < _list51.size; ++_i53)
          {
            _elem52 = new ExameThrift();
            _elem52.read(iprot);
            struct.exame.add(_elem52);
          }
        }
        struct.setExameIsSet(true);
      }
      if (incoming.get(15)) {
        struct.vacinaEmDia = iprot.readBool();
        struct.setVacinaEmDiaIsSet(true);
      }
      if (incoming.get(16)) {
        struct.pic = iprot.readI64();
        struct.setPicIsSet(true);
      }
      if (incoming.get(17)) {
        struct.ficouEmObservacao = iprot.readBool();
        struct.setFicouEmObservacaoIsSet(true);
      }
      if (incoming.get(18)) {
        {
          org.apache.thrift.protocol.TList _list54 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.nasfs = new ArrayList<Long>(_list54.size);
          long _elem55;
          for (int _i56 = 0; _i56 < _list54.size; ++_i56)
          {
            _elem55 = iprot.readI64();
            struct.nasfs.add(_elem55);
          }
        }
        struct.setNasfsIsSet(true);
      }
      if (incoming.get(19)) {
        {
          org.apache.thrift.protocol.TList _list57 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.condutas = new ArrayList<Long>(_list57.size);
          long _elem58;
          for (int _i59 = 0; _i59 < _list57.size; ++_i59)
          {
            _elem58 = iprot.readI64();
            struct.condutas.add(_elem58);
          }
        }
        struct.setCondutasIsSet(true);
      }
      if (incoming.get(20)) {
        struct.stGravidezPlanejada = iprot.readBool();
        struct.setStGravidezPlanejadaIsSet(true);
      }
      if (incoming.get(21)) {
        struct.nuGestasPrevias = iprot.readI32();
        struct.setNuGestasPreviasIsSet(true);
      }
      if (incoming.get(22)) {
        struct.nuPartos = iprot.readI32();
        struct.setNuPartosIsSet(true);
      }
      if (incoming.get(23)) {
        struct.racionalidadeSaude = iprot.readI64();
        struct.setRacionalidadeSaudeIsSet(true);
      }
      if (incoming.get(24)) {
        struct.perimetroCefalico = iprot.readDouble();
        struct.setPerimetroCefalicoIsSet(true);
      }
      if (incoming.get(25)) {
        struct.dataHoraInicialAtendimento = iprot.readI64();
        struct.setDataHoraInicialAtendimentoIsSet(true);
      }
      if (incoming.get(26)) {
        struct.dataHoraFinalAtendimento = iprot.readI64();
        struct.setDataHoraFinalAtendimentoIsSet(true);
      }
      if (incoming.get(27)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
      if (incoming.get(28)) {
        {
          org.apache.thrift.protocol.TList _list60 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.medicamentos = new ArrayList<br.gov.saude.esusab.ras.common.MedicamentoThrift>(_list60.size);
          br.gov.saude.esusab.ras.common.MedicamentoThrift _elem61;
          for (int _i62 = 0; _i62 < _list60.size; ++_i62)
          {
            _elem61 = new br.gov.saude.esusab.ras.common.MedicamentoThrift();
            _elem61.read(iprot);
            struct.medicamentos.add(_elem61);
          }
        }
        struct.setMedicamentosIsSet(true);
      }
      if (incoming.get(29)) {
        {
          org.apache.thrift.protocol.TList _list63 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.encaminhamentos = new ArrayList<br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift>(_list63.size);
          br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift _elem64;
          for (int _i65 = 0; _i65 < _list63.size; ++_i65)
          {
            _elem64 = new br.gov.saude.esusab.ras.common.EncaminhamentoExternoThrift();
            _elem64.read(iprot);
            struct.encaminhamentos.add(_elem64);
          }
        }
        struct.setEncaminhamentosIsSet(true);
      }
      if (incoming.get(30)) {
        {
          org.apache.thrift.protocol.TList _list66 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.resultadosExames = new ArrayList<br.gov.saude.esusab.ras.common.ResultadosExameThrift>(_list66.size);
          br.gov.saude.esusab.ras.common.ResultadosExameThrift _elem67;
          for (int _i68 = 0; _i68 < _list66.size; ++_i68)
          {
            _elem67 = new br.gov.saude.esusab.ras.common.ResultadosExameThrift();
            _elem67.read(iprot);
            struct.resultadosExames.add(_elem67);
          }
        }
        struct.setResultadosExamesIsSet(true);
      }
      if (incoming.get(31)) {
        struct.uuidRnds = iprot.readString();
        struct.setUuidRndsIsSet(true);
      }
      if (incoming.get(32)) {
        struct.finalizadorObservacao = new br.gov.saude.esusab.ras.common.LotacaoHeaderThrift();
        struct.finalizadorObservacao.read(iprot);
        struct.setFinalizadorObservacaoIsSet(true);
      }
      if (incoming.get(33)) {
        struct.tipoParticipacaoCidadao = iprot.readI64();
        struct.setTipoParticipacaoCidadaoIsSet(true);
      }
      if (incoming.get(34)) {
        struct.tipoParticipacaoProfissionalConvidado = iprot.readI64();
        struct.setTipoParticipacaoProfissionalConvidadoIsSet(true);
      }
      if (incoming.get(35)) {
        {
          org.apache.thrift.protocol.TList _list69 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.emultis = new ArrayList<Long>(_list69.size);
          long _elem70;
          for (int _i71 = 0; _i71 < _list69.size; ++_i71)
          {
            _elem70 = iprot.readI64();
            struct.emultis.add(_elem70);
          }
        }
        struct.setEmultisIsSet(true);
      }
      if (incoming.get(36)) {
        struct.medicoes = new br.gov.saude.esusab.ras.common.MedicoesThrift();
        struct.medicoes.read(iprot);
        struct.setMedicoesIsSet(true);
      }
    }
  }

}

