(**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esusab.ras.vacinacao;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esusab.ras.common;

const
  cbr_gov_saude_esusab_ras_vacinacao_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esusab_ras_vacinacao_Option_Register_Types = False;
  cbr_gov_saude_esusab_ras_vacinacao_Option_ConstPrefix    = False;
  cbr_gov_saude_esusab_ras_vacinacao_Option_Events         = False;
  cbr_gov_saude_esusab_ras_vacinacao_Option_XmlDoc         = False;

type
  IVacinaRowThrift = interface;
  IFichaVacinacaoChildThrift = interface;
  IFichaVacinacaoMasterThrift = interface;

  IVacinaRowThrift = interface(IBase)
    function GetImunobiologico: Int64;
    procedure SetImunobiologico( const Value: Int64);
    function GetEstrategiaVacinacao: Int64;
    procedure SetEstrategiaVacinacao( const Value: Int64);
    function GetDose: Int64;
    procedure SetDose( const Value: Int64);
    function GetLote: string;
    procedure SetLote( const Value: string);
    function GetFabricante: string;
    procedure SetFabricante( const Value: string);
    function GetGrupoAtendimento: Int64;
    procedure SetGrupoAtendimento( const Value: Int64);
    function GetStRegistroAnterior: Boolean;
    procedure SetStRegistroAnterior( const Value: Boolean);
    function GetDataRegistroAnterior: Int64;
    procedure SetDataRegistroAnterior( const Value: Int64);
    function GetStAplicadoExterior: Boolean;
    procedure SetStAplicadoExterior( const Value: Boolean);
    function GetUuidRnds: string;
    procedure SetUuidRnds( const Value: string);
    function GetCboPrescritorCodigo2002: string;
    procedure SetCboPrescritorCodigo2002( const Value: string);
    function GetCid10MotivoIndicacao: string;
    procedure SetCid10MotivoIndicacao( const Value: string);
    function GetStPesquisaClinica: Boolean;
    procedure SetStPesquisaClinica( const Value: Boolean);
    function GetAnvisaProtocoloEstudo: string;
    procedure SetAnvisaProtocoloEstudo( const Value: string);
    function GetAnvisaProtocoloVersao: string;
    procedure SetAnvisaProtocoloVersao( const Value: string);
    function GetAnvisaNumeroRegistro: string;
    procedure SetAnvisaNumeroRegistro( const Value: string);

    property Imunobiologico: Int64 read GetImunobiologico write SetImunobiologico;
    property EstrategiaVacinacao: Int64 read GetEstrategiaVacinacao write SetEstrategiaVacinacao;
    property Dose: Int64 read GetDose write SetDose;
    property Lote: string read GetLote write SetLote;
    property Fabricante: string read GetFabricante write SetFabricante;
    property GrupoAtendimento: Int64 read GetGrupoAtendimento write SetGrupoAtendimento;
    property StRegistroAnterior: Boolean read GetStRegistroAnterior write SetStRegistroAnterior;
    property DataRegistroAnterior: Int64 read GetDataRegistroAnterior write SetDataRegistroAnterior;
    property StAplicadoExterior: Boolean read GetStAplicadoExterior write SetStAplicadoExterior;
    property UuidRnds: string read GetUuidRnds write SetUuidRnds;
    property CboPrescritorCodigo2002: string read GetCboPrescritorCodigo2002 write SetCboPrescritorCodigo2002;
    property Cid10MotivoIndicacao: string read GetCid10MotivoIndicacao write SetCid10MotivoIndicacao;
    property StPesquisaClinica: Boolean read GetStPesquisaClinica write SetStPesquisaClinica;
    property AnvisaProtocoloEstudo: string read GetAnvisaProtocoloEstudo write SetAnvisaProtocoloEstudo;
    property AnvisaProtocoloVersao: string read GetAnvisaProtocoloVersao write SetAnvisaProtocoloVersao;
    property AnvisaNumeroRegistro: string read GetAnvisaNumeroRegistro write SetAnvisaNumeroRegistro;

    function Get__isset_Imunobiologico: Boolean;
    function Get__isset_EstrategiaVacinacao: Boolean;
    function Get__isset_Dose: Boolean;
    function Get__isset_Lote: Boolean;
    function Get__isset_Fabricante: Boolean;
    function Get__isset_GrupoAtendimento: Boolean;
    function Get__isset_StRegistroAnterior: Boolean;
    function Get__isset_DataRegistroAnterior: Boolean;
    function Get__isset_StAplicadoExterior: Boolean;
    function Get__isset_UuidRnds: Boolean;
    function Get__isset_CboPrescritorCodigo2002: Boolean;
    function Get__isset_Cid10MotivoIndicacao: Boolean;
    function Get__isset_StPesquisaClinica: Boolean;
    function Get__isset_AnvisaProtocoloEstudo: Boolean;
    function Get__isset_AnvisaProtocoloVersao: Boolean;
    function Get__isset_AnvisaNumeroRegistro: Boolean;

    property __isset_Imunobiologico: Boolean read Get__isset_Imunobiologico;
    property __isset_EstrategiaVacinacao: Boolean read Get__isset_EstrategiaVacinacao;
    property __isset_Dose: Boolean read Get__isset_Dose;
    property __isset_Lote: Boolean read Get__isset_Lote;
    property __isset_Fabricante: Boolean read Get__isset_Fabricante;
    property __isset_GrupoAtendimento: Boolean read Get__isset_GrupoAtendimento;
    property __isset_StRegistroAnterior: Boolean read Get__isset_StRegistroAnterior;
    property __isset_DataRegistroAnterior: Boolean read Get__isset_DataRegistroAnterior;
    property __isset_StAplicadoExterior: Boolean read Get__isset_StAplicadoExterior;
    property __isset_UuidRnds: Boolean read Get__isset_UuidRnds;
    property __isset_CboPrescritorCodigo2002: Boolean read Get__isset_CboPrescritorCodigo2002;
    property __isset_Cid10MotivoIndicacao: Boolean read Get__isset_Cid10MotivoIndicacao;
    property __isset_StPesquisaClinica: Boolean read Get__isset_StPesquisaClinica;
    property __isset_AnvisaProtocoloEstudo: Boolean read Get__isset_AnvisaProtocoloEstudo;
    property __isset_AnvisaProtocoloVersao: Boolean read Get__isset_AnvisaProtocoloVersao;
    property __isset_AnvisaNumeroRegistro: Boolean read Get__isset_AnvisaNumeroRegistro;
  end;

  TVacinaRowThriftImpl = class(TInterfacedObject, IBase, IVacinaRowThrift)
  private
    FImunobiologico: Int64;
    FEstrategiaVacinacao: Int64;
    FDose: Int64;
    FLote: string;
    FFabricante: string;
    FGrupoAtendimento: Int64;
    FStRegistroAnterior: Boolean;
    FDataRegistroAnterior: Int64;
    FStAplicadoExterior: Boolean;
    FUuidRnds: string;
    FCboPrescritorCodigo2002: string;
    FCid10MotivoIndicacao: string;
    FStPesquisaClinica: Boolean;
    FAnvisaProtocoloEstudo: string;
    FAnvisaProtocoloVersao: string;
    FAnvisaNumeroRegistro: string;
    
    F__isset_Imunobiologico: Boolean;
    F__isset_EstrategiaVacinacao: Boolean;
    F__isset_Dose: Boolean;
    F__isset_Lote: Boolean;
    F__isset_Fabricante: Boolean;
    F__isset_GrupoAtendimento: Boolean;
    F__isset_StRegistroAnterior: Boolean;
    F__isset_DataRegistroAnterior: Boolean;
    F__isset_StAplicadoExterior: Boolean;
    F__isset_UuidRnds: Boolean;
    F__isset_CboPrescritorCodigo2002: Boolean;
    F__isset_Cid10MotivoIndicacao: Boolean;
    F__isset_StPesquisaClinica: Boolean;
    F__isset_AnvisaProtocoloEstudo: Boolean;
    F__isset_AnvisaProtocoloVersao: Boolean;
    F__isset_AnvisaNumeroRegistro: Boolean;
    
    function GetImunobiologico: Int64;
    procedure SetImunobiologico( const Value: Int64);
    function GetEstrategiaVacinacao: Int64;
    procedure SetEstrategiaVacinacao( const Value: Int64);
    function GetDose: Int64;
    procedure SetDose( const Value: Int64);
    function GetLote: string;
    procedure SetLote( const Value: string);
    function GetFabricante: string;
    procedure SetFabricante( const Value: string);
    function GetGrupoAtendimento: Int64;
    procedure SetGrupoAtendimento( const Value: Int64);
    function GetStRegistroAnterior: Boolean;
    procedure SetStRegistroAnterior( const Value: Boolean);
    function GetDataRegistroAnterior: Int64;
    procedure SetDataRegistroAnterior( const Value: Int64);
    function GetStAplicadoExterior: Boolean;
    procedure SetStAplicadoExterior( const Value: Boolean);
    function GetUuidRnds: string;
    procedure SetUuidRnds( const Value: string);
    function GetCboPrescritorCodigo2002: string;
    procedure SetCboPrescritorCodigo2002( const Value: string);
    function GetCid10MotivoIndicacao: string;
    procedure SetCid10MotivoIndicacao( const Value: string);
    function GetStPesquisaClinica: Boolean;
    procedure SetStPesquisaClinica( const Value: Boolean);
    function GetAnvisaProtocoloEstudo: string;
    procedure SetAnvisaProtocoloEstudo( const Value: string);
    function GetAnvisaProtocoloVersao: string;
    procedure SetAnvisaProtocoloVersao( const Value: string);
    function GetAnvisaNumeroRegistro: string;
    procedure SetAnvisaNumeroRegistro( const Value: string);

    function Get__isset_Imunobiologico: Boolean;
    function Get__isset_EstrategiaVacinacao: Boolean;
    function Get__isset_Dose: Boolean;
    function Get__isset_Lote: Boolean;
    function Get__isset_Fabricante: Boolean;
    function Get__isset_GrupoAtendimento: Boolean;
    function Get__isset_StRegistroAnterior: Boolean;
    function Get__isset_DataRegistroAnterior: Boolean;
    function Get__isset_StAplicadoExterior: Boolean;
    function Get__isset_UuidRnds: Boolean;
    function Get__isset_CboPrescritorCodigo2002: Boolean;
    function Get__isset_Cid10MotivoIndicacao: Boolean;
    function Get__isset_StPesquisaClinica: Boolean;
    function Get__isset_AnvisaProtocoloEstudo: Boolean;
    function Get__isset_AnvisaProtocoloVersao: Boolean;
    function Get__isset_AnvisaNumeroRegistro: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Imunobiologico: Int64 read GetImunobiologico write SetImunobiologico;
    property EstrategiaVacinacao: Int64 read GetEstrategiaVacinacao write SetEstrategiaVacinacao;
    property Dose: Int64 read GetDose write SetDose;
    property Lote: string read GetLote write SetLote;
    property Fabricante: string read GetFabricante write SetFabricante;
    property GrupoAtendimento: Int64 read GetGrupoAtendimento write SetGrupoAtendimento;
    property StRegistroAnterior: Boolean read GetStRegistroAnterior write SetStRegistroAnterior;
    property DataRegistroAnterior: Int64 read GetDataRegistroAnterior write SetDataRegistroAnterior;
    property StAplicadoExterior: Boolean read GetStAplicadoExterior write SetStAplicadoExterior;
    property UuidRnds: string read GetUuidRnds write SetUuidRnds;
    property CboPrescritorCodigo2002: string read GetCboPrescritorCodigo2002 write SetCboPrescritorCodigo2002;
    property Cid10MotivoIndicacao: string read GetCid10MotivoIndicacao write SetCid10MotivoIndicacao;
    property StPesquisaClinica: Boolean read GetStPesquisaClinica write SetStPesquisaClinica;
    property AnvisaProtocoloEstudo: string read GetAnvisaProtocoloEstudo write SetAnvisaProtocoloEstudo;
    property AnvisaProtocoloVersao: string read GetAnvisaProtocoloVersao write SetAnvisaProtocoloVersao;
    property AnvisaNumeroRegistro: string read GetAnvisaNumeroRegistro write SetAnvisaNumeroRegistro;

    // isset
    property __isset_Imunobiologico: Boolean read Get__isset_Imunobiologico;
    property __isset_EstrategiaVacinacao: Boolean read Get__isset_EstrategiaVacinacao;
    property __isset_Dose: Boolean read Get__isset_Dose;
    property __isset_Lote: Boolean read Get__isset_Lote;
    property __isset_Fabricante: Boolean read Get__isset_Fabricante;
    property __isset_GrupoAtendimento: Boolean read Get__isset_GrupoAtendimento;
    property __isset_StRegistroAnterior: Boolean read Get__isset_StRegistroAnterior;
    property __isset_DataRegistroAnterior: Boolean read Get__isset_DataRegistroAnterior;
    property __isset_StAplicadoExterior: Boolean read Get__isset_StAplicadoExterior;
    property __isset_UuidRnds: Boolean read Get__isset_UuidRnds;
    property __isset_CboPrescritorCodigo2002: Boolean read Get__isset_CboPrescritorCodigo2002;
    property __isset_Cid10MotivoIndicacao: Boolean read Get__isset_Cid10MotivoIndicacao;
    property __isset_StPesquisaClinica: Boolean read Get__isset_StPesquisaClinica;
    property __isset_AnvisaProtocoloEstudo: Boolean read Get__isset_AnvisaProtocoloEstudo;
    property __isset_AnvisaProtocoloVersao: Boolean read Get__isset_AnvisaProtocoloVersao;
    property __isset_AnvisaNumeroRegistro: Boolean read Get__isset_AnvisaNumeroRegistro;
  end;

  IFichaVacinacaoChildThrift = interface(IBase)
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetNumProntuario: string;
    procedure SetNumProntuario( const Value: string);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetDtNascimento: Int64;
    procedure SetDtNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetLocalAtendimento: Int64;
    procedure SetLocalAtendimento( const Value: Int64);
    function GetViajante: Boolean;
    procedure SetViajante( const Value: Boolean);
    function GetComunicanteHanseniase: Boolean;
    procedure SetComunicanteHanseniase( const Value: Boolean);
    function GetGestante: Boolean;
    procedure SetGestante( const Value: Boolean);
    function GetPuerpera: Boolean;
    procedure SetPuerpera( const Value: Boolean);
    function GetVacinas: IThriftList<IVacinaRowThrift>;
    procedure SetVacinas( const Value: IThriftList<IVacinaRowThrift>);
    function GetDataHoraInicialAtendimento: Int64;
    procedure SetDataHoraInicialAtendimento( const Value: Int64);
    function GetDataHoraFinalAtendimento: Int64;
    procedure SetDataHoraFinalAtendimento( const Value: Int64);
    function GetCpfCidadao: string;
    procedure SetCpfCidadao( const Value: string);
    function GetCondicaoMaternal: Int64;
    procedure SetCondicaoMaternal( const Value: Int64);

    property Turno: Int64 read GetTurno write SetTurno;
    property NumProntuario: string read GetNumProntuario write SetNumProntuario;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property DtNascimento: Int64 read GetDtNascimento write SetDtNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property LocalAtendimento: Int64 read GetLocalAtendimento write SetLocalAtendimento;
    property Viajante: Boolean read GetViajante write SetViajante;
    property ComunicanteHanseniase: Boolean read GetComunicanteHanseniase write SetComunicanteHanseniase;
    property Gestante: Boolean read GetGestante write SetGestante;
    property Puerpera: Boolean read GetPuerpera write SetPuerpera;
    property Vacinas: IThriftList<IVacinaRowThrift> read GetVacinas write SetVacinas;
    property DataHoraInicialAtendimento: Int64 read GetDataHoraInicialAtendimento write SetDataHoraInicialAtendimento;
    property DataHoraFinalAtendimento: Int64 read GetDataHoraFinalAtendimento write SetDataHoraFinalAtendimento;
    property CpfCidadao: string read GetCpfCidadao write SetCpfCidadao;
    property CondicaoMaternal: Int64 read GetCondicaoMaternal write SetCondicaoMaternal;

    function Get__isset_Turno: Boolean;
    function Get__isset_NumProntuario: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_DtNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_LocalAtendimento: Boolean;
    function Get__isset_Viajante: Boolean;
    function Get__isset_ComunicanteHanseniase: Boolean;
    function Get__isset_Gestante: Boolean;
    function Get__isset_Puerpera: Boolean;
    function Get__isset_Vacinas: Boolean;
    function Get__isset_DataHoraInicialAtendimento: Boolean;
    function Get__isset_DataHoraFinalAtendimento: Boolean;
    function Get__isset_CpfCidadao: Boolean;
    function Get__isset_CondicaoMaternal: Boolean;

    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_NumProntuario: Boolean read Get__isset_NumProntuario;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_DtNascimento: Boolean read Get__isset_DtNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_LocalAtendimento: Boolean read Get__isset_LocalAtendimento;
    property __isset_Viajante: Boolean read Get__isset_Viajante;
    property __isset_ComunicanteHanseniase: Boolean read Get__isset_ComunicanteHanseniase;
    property __isset_Gestante: Boolean read Get__isset_Gestante;
    property __isset_Puerpera: Boolean read Get__isset_Puerpera;
    property __isset_Vacinas: Boolean read Get__isset_Vacinas;
    property __isset_DataHoraInicialAtendimento: Boolean read Get__isset_DataHoraInicialAtendimento;
    property __isset_DataHoraFinalAtendimento: Boolean read Get__isset_DataHoraFinalAtendimento;
    property __isset_CpfCidadao: Boolean read Get__isset_CpfCidadao;
    property __isset_CondicaoMaternal: Boolean read Get__isset_CondicaoMaternal;
  end;

  TFichaVacinacaoChildThriftImpl = class(TInterfacedObject, IBase, IFichaVacinacaoChildThrift)
  private
    FTurno: Int64;
    FNumProntuario: string;
    FCnsCidadao: string;
    FDtNascimento: Int64;
    FSexo: Int64;
    FLocalAtendimento: Int64;
    FViajante: Boolean;
    FComunicanteHanseniase: Boolean;
    FGestante: Boolean;
    FPuerpera: Boolean;
    FVacinas: IThriftList<IVacinaRowThrift>;
    FDataHoraInicialAtendimento: Int64;
    FDataHoraFinalAtendimento: Int64;
    FCpfCidadao: string;
    FCondicaoMaternal: Int64;
    
    F__isset_Turno: Boolean;
    F__isset_NumProntuario: Boolean;
    F__isset_CnsCidadao: Boolean;
    F__isset_DtNascimento: Boolean;
    F__isset_Sexo: Boolean;
    F__isset_LocalAtendimento: Boolean;
    F__isset_Viajante: Boolean;
    F__isset_ComunicanteHanseniase: Boolean;
    F__isset_Gestante: Boolean;
    F__isset_Puerpera: Boolean;
    F__isset_Vacinas: Boolean;
    F__isset_DataHoraInicialAtendimento: Boolean;
    F__isset_DataHoraFinalAtendimento: Boolean;
    F__isset_CpfCidadao: Boolean;
    F__isset_CondicaoMaternal: Boolean;
    
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetNumProntuario: string;
    procedure SetNumProntuario( const Value: string);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetDtNascimento: Int64;
    procedure SetDtNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetLocalAtendimento: Int64;
    procedure SetLocalAtendimento( const Value: Int64);
    function GetViajante: Boolean;
    procedure SetViajante( const Value: Boolean);
    function GetComunicanteHanseniase: Boolean;
    procedure SetComunicanteHanseniase( const Value: Boolean);
    function GetGestante: Boolean;
    procedure SetGestante( const Value: Boolean);
    function GetPuerpera: Boolean;
    procedure SetPuerpera( const Value: Boolean);
    function GetVacinas: IThriftList<IVacinaRowThrift>;
    procedure SetVacinas( const Value: IThriftList<IVacinaRowThrift>);
    function GetDataHoraInicialAtendimento: Int64;
    procedure SetDataHoraInicialAtendimento( const Value: Int64);
    function GetDataHoraFinalAtendimento: Int64;
    procedure SetDataHoraFinalAtendimento( const Value: Int64);
    function GetCpfCidadao: string;
    procedure SetCpfCidadao( const Value: string);
    function GetCondicaoMaternal: Int64;
    procedure SetCondicaoMaternal( const Value: Int64);

    function Get__isset_Turno: Boolean;
    function Get__isset_NumProntuario: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_DtNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_LocalAtendimento: Boolean;
    function Get__isset_Viajante: Boolean;
    function Get__isset_ComunicanteHanseniase: Boolean;
    function Get__isset_Gestante: Boolean;
    function Get__isset_Puerpera: Boolean;
    function Get__isset_Vacinas: Boolean;
    function Get__isset_DataHoraInicialAtendimento: Boolean;
    function Get__isset_DataHoraFinalAtendimento: Boolean;
    function Get__isset_CpfCidadao: Boolean;
    function Get__isset_CondicaoMaternal: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Turno: Int64 read GetTurno write SetTurno;
    property NumProntuario: string read GetNumProntuario write SetNumProntuario;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property DtNascimento: Int64 read GetDtNascimento write SetDtNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property LocalAtendimento: Int64 read GetLocalAtendimento write SetLocalAtendimento;
    property Viajante: Boolean read GetViajante write SetViajante;
    property ComunicanteHanseniase: Boolean read GetComunicanteHanseniase write SetComunicanteHanseniase;
    property Gestante: Boolean read GetGestante write SetGestante;
    property Puerpera: Boolean read GetPuerpera write SetPuerpera;
    property Vacinas: IThriftList<IVacinaRowThrift> read GetVacinas write SetVacinas;
    property DataHoraInicialAtendimento: Int64 read GetDataHoraInicialAtendimento write SetDataHoraInicialAtendimento;
    property DataHoraFinalAtendimento: Int64 read GetDataHoraFinalAtendimento write SetDataHoraFinalAtendimento;
    property CpfCidadao: string read GetCpfCidadao write SetCpfCidadao;
    property CondicaoMaternal: Int64 read GetCondicaoMaternal write SetCondicaoMaternal;

    // isset
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_NumProntuario: Boolean read Get__isset_NumProntuario;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_DtNascimento: Boolean read Get__isset_DtNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_LocalAtendimento: Boolean read Get__isset_LocalAtendimento;
    property __isset_Viajante: Boolean read Get__isset_Viajante;
    property __isset_ComunicanteHanseniase: Boolean read Get__isset_ComunicanteHanseniase;
    property __isset_Gestante: Boolean read Get__isset_Gestante;
    property __isset_Puerpera: Boolean read Get__isset_Puerpera;
    property __isset_Vacinas: Boolean read Get__isset_Vacinas;
    property __isset_DataHoraInicialAtendimento: Boolean read Get__isset_DataHoraInicialAtendimento;
    property __isset_DataHoraFinalAtendimento: Boolean read Get__isset_DataHoraFinalAtendimento;
    property __isset_CpfCidadao: Boolean read Get__isset_CpfCidadao;
    property __isset_CondicaoMaternal: Boolean read Get__isset_CondicaoMaternal;
  end;

  IFichaVacinacaoMasterThrift = interface(IBase)
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetVacinacoes: IThriftList<IFichaVacinacaoChildThrift>;
    procedure SetVacinacoes( const Value: IThriftList<IFichaVacinacaoChildThrift>);
    function GetUuidFichaCancelada: string;
    procedure SetUuidFichaCancelada( const Value: string);

    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property Vacinacoes: IThriftList<IFichaVacinacaoChildThrift> read GetVacinacoes write SetVacinacoes;
    property UuidFichaCancelada: string read GetUuidFichaCancelada write SetUuidFichaCancelada;

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_Vacinacoes: Boolean;
    function Get__isset_UuidFichaCancelada: Boolean;

    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_Vacinacoes: Boolean read Get__isset_Vacinacoes;
    property __isset_UuidFichaCancelada: Boolean read Get__isset_UuidFichaCancelada;
  end;

  TFichaVacinacaoMasterThriftImpl = class(TInterfacedObject, IBase, IFichaVacinacaoMasterThrift)
  private
    FUuidFicha: string;
    FTpCdsOrigem: Integer;
    FHeaderTransport: IUnicaLotacaoHeaderThrift;
    FVacinacoes: IThriftList<IFichaVacinacaoChildThrift>;
    FUuidFichaCancelada: string;
    
    F__isset_TpCdsOrigem: Boolean;
    F__isset_HeaderTransport: Boolean;
    F__isset_Vacinacoes: Boolean;
    F__isset_UuidFichaCancelada: Boolean;
    
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetVacinacoes: IThriftList<IFichaVacinacaoChildThrift>;
    procedure SetVacinacoes( const Value: IThriftList<IFichaVacinacaoChildThrift>);
    function GetUuidFichaCancelada: string;
    procedure SetUuidFichaCancelada( const Value: string);

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_Vacinacoes: Boolean;
    function Get__isset_UuidFichaCancelada: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property Vacinacoes: IThriftList<IFichaVacinacaoChildThrift> read GetVacinacoes write SetVacinacoes;
    property UuidFichaCancelada: string read GetUuidFichaCancelada write SetUuidFichaCancelada;

    // isset
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_Vacinacoes: Boolean read Get__isset_Vacinacoes;
    property __isset_UuidFichaCancelada: Boolean read Get__isset_UuidFichaCancelada;
  end;

implementation

constructor TVacinaRowThriftImpl.Create;
begin
  inherited;
end;

destructor TVacinaRowThriftImpl.Destroy;
begin
  inherited;
end;

function TVacinaRowThriftImpl.GetImunobiologico: Int64;
begin
  Result := FImunobiologico;
end;

procedure TVacinaRowThriftImpl.SetImunobiologico( const Value: Int64);
begin
  F__isset_Imunobiologico := True;
  FImunobiologico := Value;
end;

function TVacinaRowThriftImpl.Get__isset_Imunobiologico: Boolean;
begin
  Result := F__isset_Imunobiologico;
end;

function TVacinaRowThriftImpl.GetEstrategiaVacinacao: Int64;
begin
  Result := FEstrategiaVacinacao;
end;

procedure TVacinaRowThriftImpl.SetEstrategiaVacinacao( const Value: Int64);
begin
  F__isset_EstrategiaVacinacao := True;
  FEstrategiaVacinacao := Value;
end;

function TVacinaRowThriftImpl.Get__isset_EstrategiaVacinacao: Boolean;
begin
  Result := F__isset_EstrategiaVacinacao;
end;

function TVacinaRowThriftImpl.GetDose: Int64;
begin
  Result := FDose;
end;

procedure TVacinaRowThriftImpl.SetDose( const Value: Int64);
begin
  F__isset_Dose := True;
  FDose := Value;
end;

function TVacinaRowThriftImpl.Get__isset_Dose: Boolean;
begin
  Result := F__isset_Dose;
end;

function TVacinaRowThriftImpl.GetLote: string;
begin
  Result := FLote;
end;

procedure TVacinaRowThriftImpl.SetLote( const Value: string);
begin
  F__isset_Lote := True;
  FLote := Value;
end;

function TVacinaRowThriftImpl.Get__isset_Lote: Boolean;
begin
  Result := F__isset_Lote;
end;

function TVacinaRowThriftImpl.GetFabricante: string;
begin
  Result := FFabricante;
end;

procedure TVacinaRowThriftImpl.SetFabricante( const Value: string);
begin
  F__isset_Fabricante := True;
  FFabricante := Value;
end;

function TVacinaRowThriftImpl.Get__isset_Fabricante: Boolean;
begin
  Result := F__isset_Fabricante;
end;

function TVacinaRowThriftImpl.GetGrupoAtendimento: Int64;
begin
  Result := FGrupoAtendimento;
end;

procedure TVacinaRowThriftImpl.SetGrupoAtendimento( const Value: Int64);
begin
  F__isset_GrupoAtendimento := True;
  FGrupoAtendimento := Value;
end;

function TVacinaRowThriftImpl.Get__isset_GrupoAtendimento: Boolean;
begin
  Result := F__isset_GrupoAtendimento;
end;

function TVacinaRowThriftImpl.GetStRegistroAnterior: Boolean;
begin
  Result := FStRegistroAnterior;
end;

procedure TVacinaRowThriftImpl.SetStRegistroAnterior( const Value: Boolean);
begin
  F__isset_StRegistroAnterior := True;
  FStRegistroAnterior := Value;
end;

function TVacinaRowThriftImpl.Get__isset_StRegistroAnterior: Boolean;
begin
  Result := F__isset_StRegistroAnterior;
end;

function TVacinaRowThriftImpl.GetDataRegistroAnterior: Int64;
begin
  Result := FDataRegistroAnterior;
end;

procedure TVacinaRowThriftImpl.SetDataRegistroAnterior( const Value: Int64);
begin
  F__isset_DataRegistroAnterior := True;
  FDataRegistroAnterior := Value;
end;

function TVacinaRowThriftImpl.Get__isset_DataRegistroAnterior: Boolean;
begin
  Result := F__isset_DataRegistroAnterior;
end;

function TVacinaRowThriftImpl.GetStAplicadoExterior: Boolean;
begin
  Result := FStAplicadoExterior;
end;

procedure TVacinaRowThriftImpl.SetStAplicadoExterior( const Value: Boolean);
begin
  F__isset_StAplicadoExterior := True;
  FStAplicadoExterior := Value;
end;

function TVacinaRowThriftImpl.Get__isset_StAplicadoExterior: Boolean;
begin
  Result := F__isset_StAplicadoExterior;
end;

function TVacinaRowThriftImpl.GetUuidRnds: string;
begin
  Result := FUuidRnds;
end;

procedure TVacinaRowThriftImpl.SetUuidRnds( const Value: string);
begin
  F__isset_UuidRnds := True;
  FUuidRnds := Value;
end;

function TVacinaRowThriftImpl.Get__isset_UuidRnds: Boolean;
begin
  Result := F__isset_UuidRnds;
end;

function TVacinaRowThriftImpl.GetCboPrescritorCodigo2002: string;
begin
  Result := FCboPrescritorCodigo2002;
end;

procedure TVacinaRowThriftImpl.SetCboPrescritorCodigo2002( const Value: string);
begin
  F__isset_CboPrescritorCodigo2002 := True;
  FCboPrescritorCodigo2002 := Value;
end;

function TVacinaRowThriftImpl.Get__isset_CboPrescritorCodigo2002: Boolean;
begin
  Result := F__isset_CboPrescritorCodigo2002;
end;

function TVacinaRowThriftImpl.GetCid10MotivoIndicacao: string;
begin
  Result := FCid10MotivoIndicacao;
end;

procedure TVacinaRowThriftImpl.SetCid10MotivoIndicacao( const Value: string);
begin
  F__isset_Cid10MotivoIndicacao := True;
  FCid10MotivoIndicacao := Value;
end;

function TVacinaRowThriftImpl.Get__isset_Cid10MotivoIndicacao: Boolean;
begin
  Result := F__isset_Cid10MotivoIndicacao;
end;

function TVacinaRowThriftImpl.GetStPesquisaClinica: Boolean;
begin
  Result := FStPesquisaClinica;
end;

procedure TVacinaRowThriftImpl.SetStPesquisaClinica( const Value: Boolean);
begin
  F__isset_StPesquisaClinica := True;
  FStPesquisaClinica := Value;
end;

function TVacinaRowThriftImpl.Get__isset_StPesquisaClinica: Boolean;
begin
  Result := F__isset_StPesquisaClinica;
end;

function TVacinaRowThriftImpl.GetAnvisaProtocoloEstudo: string;
begin
  Result := FAnvisaProtocoloEstudo;
end;

procedure TVacinaRowThriftImpl.SetAnvisaProtocoloEstudo( const Value: string);
begin
  F__isset_AnvisaProtocoloEstudo := True;
  FAnvisaProtocoloEstudo := Value;
end;

function TVacinaRowThriftImpl.Get__isset_AnvisaProtocoloEstudo: Boolean;
begin
  Result := F__isset_AnvisaProtocoloEstudo;
end;

function TVacinaRowThriftImpl.GetAnvisaProtocoloVersao: string;
begin
  Result := FAnvisaProtocoloVersao;
end;

procedure TVacinaRowThriftImpl.SetAnvisaProtocoloVersao( const Value: string);
begin
  F__isset_AnvisaProtocoloVersao := True;
  FAnvisaProtocoloVersao := Value;
end;

function TVacinaRowThriftImpl.Get__isset_AnvisaProtocoloVersao: Boolean;
begin
  Result := F__isset_AnvisaProtocoloVersao;
end;

function TVacinaRowThriftImpl.GetAnvisaNumeroRegistro: string;
begin
  Result := FAnvisaNumeroRegistro;
end;

procedure TVacinaRowThriftImpl.SetAnvisaNumeroRegistro( const Value: string);
begin
  F__isset_AnvisaNumeroRegistro := True;
  FAnvisaNumeroRegistro := Value;
end;

function TVacinaRowThriftImpl.Get__isset_AnvisaNumeroRegistro: Boolean;
begin
  Result := F__isset_AnvisaNumeroRegistro;
end;

procedure TVacinaRowThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;

begin
  tracker := iprot.NextRecursionLevel;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I64) then
          begin
            Imunobiologico := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I64) then
          begin
            EstrategiaVacinacao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I64) then
          begin
            Dose := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            Lote := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            Fabricante := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            GrupoAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StRegistroAnterior := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataRegistroAnterior := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StAplicadoExterior := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidRnds := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.String_) then
          begin
            CboPrescritorCodigo2002 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cid10MotivoIndicacao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StPesquisaClinica := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.String_) then
          begin
            AnvisaProtocoloEstudo := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        15: begin
          if (field_.Type_ = TType.String_) then
          begin
            AnvisaProtocoloVersao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        16: begin
          if (field_.Type_ = TType.String_) then
          begin
            AnvisaNumeroRegistro := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TVacinaRowThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('VacinaRowThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Imunobiologico) then
  begin
    field_.Name := 'imunobiologico';
    field_.Type_  := TType.I64;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Imunobiologico);
    oprot.WriteFieldEnd();
  end;
  if (__isset_EstrategiaVacinacao) then
  begin
    field_.Name := 'estrategiaVacinacao';
    field_.Type_  := TType.I64;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(EstrategiaVacinacao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Dose) then
  begin
    field_.Name := 'dose';
    field_.Type_  := TType.I64;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Dose);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Lote) then
  begin
    field_.Name := 'lote';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Lote);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Fabricante) then
  begin
    field_.Name := 'fabricante';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Fabricante);
    oprot.WriteFieldEnd();
  end;
  if (__isset_GrupoAtendimento) then
  begin
    field_.Name := 'grupoAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(GrupoAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StRegistroAnterior) then
  begin
    field_.Name := 'stRegistroAnterior';
    field_.Type_  := TType.Bool_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StRegistroAnterior);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataRegistroAnterior) then
  begin
    field_.Name := 'dataRegistroAnterior';
    field_.Type_  := TType.I64;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataRegistroAnterior);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StAplicadoExterior) then
  begin
    field_.Name := 'stAplicadoExterior';
    field_.Type_  := TType.Bool_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StAplicadoExterior);
    oprot.WriteFieldEnd();
  end;
  if (__isset_UuidRnds) then
  begin
    field_.Name := 'uuidRnds';
    field_.Type_  := TType.String_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(UuidRnds);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CboPrescritorCodigo2002) then
  begin
    field_.Name := 'cboPrescritorCodigo2002';
    field_.Type_  := TType.String_;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CboPrescritorCodigo2002);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cid10MotivoIndicacao) then
  begin
    field_.Name := 'cid10MotivoIndicacao';
    field_.Type_  := TType.String_;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cid10MotivoIndicacao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StPesquisaClinica) then
  begin
    field_.Name := 'stPesquisaClinica';
    field_.Type_  := TType.Bool_;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StPesquisaClinica);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AnvisaProtocoloEstudo) then
  begin
    field_.Name := 'anvisaProtocoloEstudo';
    field_.Type_  := TType.String_;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(AnvisaProtocoloEstudo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AnvisaProtocoloVersao) then
  begin
    field_.Name := 'anvisaProtocoloVersao';
    field_.Type_  := TType.String_;
    field_.ID := 15;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(AnvisaProtocoloVersao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AnvisaNumeroRegistro) then
  begin
    field_.Name := 'anvisaNumeroRegistro';
    field_.Type_  := TType.String_;
    field_.ID := 16;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(AnvisaNumeroRegistro);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TVacinaRowThriftImpl.ToString: string;
var
  _sb0 : TThriftStringBuilder;
  _first1 : Boolean;
begin
  _sb0 := TThriftStringBuilder.Create('(');
  try
    _first1 := TRUE;
    if (__isset_Imunobiologico) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Imunobiologico: ');
      _sb0.Append(Imunobiologico);
    end;
    if (__isset_EstrategiaVacinacao) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('EstrategiaVacinacao: ');
      _sb0.Append(EstrategiaVacinacao);
    end;
    if (__isset_Dose) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Dose: ');
      _sb0.Append(Dose);
    end;
    if (__isset_Lote) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Lote: ');
      _sb0.Append(Lote);
    end;
    if (__isset_Fabricante) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Fabricante: ');
      _sb0.Append(Fabricante);
    end;
    if (__isset_GrupoAtendimento) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('GrupoAtendimento: ');
      _sb0.Append(GrupoAtendimento);
    end;
    if (__isset_StRegistroAnterior) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('StRegistroAnterior: ');
      _sb0.Append(StRegistroAnterior);
    end;
    if (__isset_DataRegistroAnterior) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('DataRegistroAnterior: ');
      _sb0.Append(DataRegistroAnterior);
    end;
    if (__isset_StAplicadoExterior) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('StAplicadoExterior: ');
      _sb0.Append(StAplicadoExterior);
    end;
    if (__isset_UuidRnds) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('UuidRnds: ');
      _sb0.Append(UuidRnds);
    end;
    if (__isset_CboPrescritorCodigo2002) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('CboPrescritorCodigo2002: ');
      _sb0.Append(CboPrescritorCodigo2002);
    end;
    if (__isset_Cid10MotivoIndicacao) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Cid10MotivoIndicacao: ');
      _sb0.Append(Cid10MotivoIndicacao);
    end;
    if (__isset_StPesquisaClinica) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('StPesquisaClinica: ');
      _sb0.Append(StPesquisaClinica);
    end;
    if (__isset_AnvisaProtocoloEstudo) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AnvisaProtocoloEstudo: ');
      _sb0.Append(AnvisaProtocoloEstudo);
    end;
    if (__isset_AnvisaProtocoloVersao) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AnvisaProtocoloVersao: ');
      _sb0.Append(AnvisaProtocoloVersao);
    end;
    if (__isset_AnvisaNumeroRegistro) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AnvisaNumeroRegistro: ');
      _sb0.Append(AnvisaNumeroRegistro);
    end;
    _sb0.Append(')');
    Result := _sb0.ToString;
    if _first1 then {prevent warning};
  finally
    _sb0.Free;
  end;
end;

constructor TFichaVacinacaoChildThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaVacinacaoChildThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaVacinacaoChildThriftImpl.GetTurno: Int64;
begin
  Result := FTurno;
end;

procedure TFichaVacinacaoChildThriftImpl.SetTurno( const Value: Int64);
begin
  F__isset_Turno := True;
  FTurno := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_Turno: Boolean;
begin
  Result := F__isset_Turno;
end;

function TFichaVacinacaoChildThriftImpl.GetNumProntuario: string;
begin
  Result := FNumProntuario;
end;

procedure TFichaVacinacaoChildThriftImpl.SetNumProntuario( const Value: string);
begin
  F__isset_NumProntuario := True;
  FNumProntuario := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_NumProntuario: Boolean;
begin
  Result := F__isset_NumProntuario;
end;

function TFichaVacinacaoChildThriftImpl.GetCnsCidadao: string;
begin
  Result := FCnsCidadao;
end;

procedure TFichaVacinacaoChildThriftImpl.SetCnsCidadao( const Value: string);
begin
  F__isset_CnsCidadao := True;
  FCnsCidadao := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_CnsCidadao: Boolean;
begin
  Result := F__isset_CnsCidadao;
end;

function TFichaVacinacaoChildThriftImpl.GetDtNascimento: Int64;
begin
  Result := FDtNascimento;
end;

procedure TFichaVacinacaoChildThriftImpl.SetDtNascimento( const Value: Int64);
begin
  F__isset_DtNascimento := True;
  FDtNascimento := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_DtNascimento: Boolean;
begin
  Result := F__isset_DtNascimento;
end;

function TFichaVacinacaoChildThriftImpl.GetSexo: Int64;
begin
  Result := FSexo;
end;

procedure TFichaVacinacaoChildThriftImpl.SetSexo( const Value: Int64);
begin
  F__isset_Sexo := True;
  FSexo := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_Sexo: Boolean;
begin
  Result := F__isset_Sexo;
end;

function TFichaVacinacaoChildThriftImpl.GetLocalAtendimento: Int64;
begin
  Result := FLocalAtendimento;
end;

procedure TFichaVacinacaoChildThriftImpl.SetLocalAtendimento( const Value: Int64);
begin
  F__isset_LocalAtendimento := True;
  FLocalAtendimento := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_LocalAtendimento: Boolean;
begin
  Result := F__isset_LocalAtendimento;
end;

function TFichaVacinacaoChildThriftImpl.GetViajante: Boolean;
begin
  Result := FViajante;
end;

procedure TFichaVacinacaoChildThriftImpl.SetViajante( const Value: Boolean);
begin
  F__isset_Viajante := True;
  FViajante := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_Viajante: Boolean;
begin
  Result := F__isset_Viajante;
end;

function TFichaVacinacaoChildThriftImpl.GetComunicanteHanseniase: Boolean;
begin
  Result := FComunicanteHanseniase;
end;

procedure TFichaVacinacaoChildThriftImpl.SetComunicanteHanseniase( const Value: Boolean);
begin
  F__isset_ComunicanteHanseniase := True;
  FComunicanteHanseniase := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_ComunicanteHanseniase: Boolean;
begin
  Result := F__isset_ComunicanteHanseniase;
end;

function TFichaVacinacaoChildThriftImpl.GetGestante: Boolean;
begin
  Result := FGestante;
end;

procedure TFichaVacinacaoChildThriftImpl.SetGestante( const Value: Boolean);
begin
  F__isset_Gestante := True;
  FGestante := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_Gestante: Boolean;
begin
  Result := F__isset_Gestante;
end;

function TFichaVacinacaoChildThriftImpl.GetPuerpera: Boolean;
begin
  Result := FPuerpera;
end;

procedure TFichaVacinacaoChildThriftImpl.SetPuerpera( const Value: Boolean);
begin
  F__isset_Puerpera := True;
  FPuerpera := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_Puerpera: Boolean;
begin
  Result := F__isset_Puerpera;
end;

function TFichaVacinacaoChildThriftImpl.GetVacinas: IThriftList<IVacinaRowThrift>;
begin
  Result := FVacinas;
end;

procedure TFichaVacinacaoChildThriftImpl.SetVacinas( const Value: IThriftList<IVacinaRowThrift>);
begin
  F__isset_Vacinas := True;
  FVacinas := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_Vacinas: Boolean;
begin
  Result := F__isset_Vacinas;
end;

function TFichaVacinacaoChildThriftImpl.GetDataHoraInicialAtendimento: Int64;
begin
  Result := FDataHoraInicialAtendimento;
end;

procedure TFichaVacinacaoChildThriftImpl.SetDataHoraInicialAtendimento( const Value: Int64);
begin
  F__isset_DataHoraInicialAtendimento := True;
  FDataHoraInicialAtendimento := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_DataHoraInicialAtendimento: Boolean;
begin
  Result := F__isset_DataHoraInicialAtendimento;
end;

function TFichaVacinacaoChildThriftImpl.GetDataHoraFinalAtendimento: Int64;
begin
  Result := FDataHoraFinalAtendimento;
end;

procedure TFichaVacinacaoChildThriftImpl.SetDataHoraFinalAtendimento( const Value: Int64);
begin
  F__isset_DataHoraFinalAtendimento := True;
  FDataHoraFinalAtendimento := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_DataHoraFinalAtendimento: Boolean;
begin
  Result := F__isset_DataHoraFinalAtendimento;
end;

function TFichaVacinacaoChildThriftImpl.GetCpfCidadao: string;
begin
  Result := FCpfCidadao;
end;

procedure TFichaVacinacaoChildThriftImpl.SetCpfCidadao( const Value: string);
begin
  F__isset_CpfCidadao := True;
  FCpfCidadao := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_CpfCidadao: Boolean;
begin
  Result := F__isset_CpfCidadao;
end;

function TFichaVacinacaoChildThriftImpl.GetCondicaoMaternal: Int64;
begin
  Result := FCondicaoMaternal;
end;

procedure TFichaVacinacaoChildThriftImpl.SetCondicaoMaternal( const Value: Int64);
begin
  F__isset_CondicaoMaternal := True;
  FCondicaoMaternal := Value;
end;

function TFichaVacinacaoChildThriftImpl.Get__isset_CondicaoMaternal: Boolean;
begin
  Result := F__isset_CondicaoMaternal;
end;

procedure TFichaVacinacaoChildThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _list2: IList;
  _i3: Integer;
  _elem4: IVacinaRowThrift;

begin
  tracker := iprot.NextRecursionLevel;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I64) then
          begin
            Turno := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumProntuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            DtNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            Sexo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            LocalAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            Viajante := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            ComunicanteHanseniase := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            Gestante := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            Puerpera := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.List) then
          begin
            Vacinas := TThriftListImpl<IVacinaRowThrift>.Create;
            _list2 := iprot.ReadListBegin();
            for _i3 := 0 to _list2.Count - 1 do
            begin
              _elem4 := TVacinaRowThriftImpl.Create;
              _elem4.Read(iprot);
              Vacinas.Add(_elem4);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataHoraInicialAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataHoraFinalAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.String_) then
          begin
            CpfCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        15: begin
          if (field_.Type_ = TType.I64) then
          begin
            CondicaoMaternal := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TFichaVacinacaoChildThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_5 : IList;
  _iter6: IVacinaRowThrift;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('FichaVacinacaoChildThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Turno) then
  begin
    field_.Name := 'turno';
    field_.Type_  := TType.I64;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Turno);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumProntuario) then
  begin
    field_.Name := 'numProntuario';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumProntuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CnsCidadao) then
  begin
    field_.Name := 'cnsCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DtNascimento) then
  begin
    field_.Name := 'dtNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DtNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Sexo) then
  begin
    field_.Name := 'sexo';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Sexo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalAtendimento) then
  begin
    field_.Name := 'localAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(LocalAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Viajante) then
  begin
    field_.Name := 'viajante';
    field_.Type_  := TType.Bool_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(Viajante);
    oprot.WriteFieldEnd();
  end;
  if (__isset_ComunicanteHanseniase) then
  begin
    field_.Name := 'comunicanteHanseniase';
    field_.Type_  := TType.Bool_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(ComunicanteHanseniase);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Gestante) then
  begin
    field_.Name := 'gestante';
    field_.Type_  := TType.Bool_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(Gestante);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Puerpera) then
  begin
    field_.Name := 'puerpera';
    field_.Type_  := TType.Bool_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(Puerpera);
    oprot.WriteFieldEnd();
  end;
  if (Vacinas <> nil) and __isset_Vacinas then
  begin
    field_.Name := 'vacinas';
    field_.Type_  := TType.List;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    list_5 := TListImpl.Create(TType.Struct, Vacinas.Count);
    oprot.WriteListBegin( list_5);
    for _iter6 in Vacinas do
    begin
      _iter6.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataHoraInicialAtendimento) then
  begin
    field_.Name := 'dataHoraInicialAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataHoraInicialAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataHoraFinalAtendimento) then
  begin
    field_.Name := 'dataHoraFinalAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataHoraFinalAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CpfCidadao) then
  begin
    field_.Name := 'cpfCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CpfCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CondicaoMaternal) then
  begin
    field_.Name := 'condicaoMaternal';
    field_.Type_  := TType.I64;
    field_.ID := 15;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(CondicaoMaternal);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaVacinacaoChildThriftImpl.ToString: string;
var
  _sb7 : TThriftStringBuilder;
  _first8 : Boolean;
begin
  _sb7 := TThriftStringBuilder.Create('(');
  try
    _first8 := TRUE;
    if (__isset_Turno) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('Turno: ');
      _sb7.Append(Turno);
    end;
    if (__isset_NumProntuario) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('NumProntuario: ');
      _sb7.Append(NumProntuario);
    end;
    if (__isset_CnsCidadao) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('CnsCidadao: ');
      _sb7.Append(CnsCidadao);
    end;
    if (__isset_DtNascimento) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('DtNascimento: ');
      _sb7.Append(DtNascimento);
    end;
    if (__isset_Sexo) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('Sexo: ');
      _sb7.Append(Sexo);
    end;
    if (__isset_LocalAtendimento) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('LocalAtendimento: ');
      _sb7.Append(LocalAtendimento);
    end;
    if (__isset_Viajante) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('Viajante: ');
      _sb7.Append(Viajante);
    end;
    if (__isset_ComunicanteHanseniase) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('ComunicanteHanseniase: ');
      _sb7.Append(ComunicanteHanseniase);
    end;
    if (__isset_Gestante) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('Gestante: ');
      _sb7.Append(Gestante);
    end;
    if (__isset_Puerpera) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('Puerpera: ');
      _sb7.Append(Puerpera);
    end;
    if (Vacinas <> nil) and __isset_Vacinas then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('Vacinas: ');
      _sb7.Append(Vacinas);
    end;
    if (__isset_DataHoraInicialAtendimento) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('DataHoraInicialAtendimento: ');
      _sb7.Append(DataHoraInicialAtendimento);
    end;
    if (__isset_DataHoraFinalAtendimento) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('DataHoraFinalAtendimento: ');
      _sb7.Append(DataHoraFinalAtendimento);
    end;
    if (__isset_CpfCidadao) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('CpfCidadao: ');
      _sb7.Append(CpfCidadao);
    end;
    if (__isset_CondicaoMaternal) then begin
      if not _first8 then _sb7.Append(',');
      _first8 := FALSE;
      _sb7.Append('CondicaoMaternal: ');
      _sb7.Append(CondicaoMaternal);
    end;
    _sb7.Append(')');
    Result := _sb7.ToString;
    if _first8 then {prevent warning};
  finally
    _sb7.Free;
  end;
end;

constructor TFichaVacinacaoMasterThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaVacinacaoMasterThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaVacinacaoMasterThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaVacinacaoMasterThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaVacinacaoMasterThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TFichaVacinacaoMasterThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TFichaVacinacaoMasterThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

function TFichaVacinacaoMasterThriftImpl.GetHeaderTransport: IUnicaLotacaoHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaVacinacaoMasterThriftImpl.SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
begin
  F__isset_HeaderTransport := True;
  FHeaderTransport := Value;
end;

function TFichaVacinacaoMasterThriftImpl.Get__isset_HeaderTransport: Boolean;
begin
  Result := F__isset_HeaderTransport;
end;

function TFichaVacinacaoMasterThriftImpl.GetVacinacoes: IThriftList<IFichaVacinacaoChildThrift>;
begin
  Result := FVacinacoes;
end;

procedure TFichaVacinacaoMasterThriftImpl.SetVacinacoes( const Value: IThriftList<IFichaVacinacaoChildThrift>);
begin
  F__isset_Vacinacoes := True;
  FVacinacoes := Value;
end;

function TFichaVacinacaoMasterThriftImpl.Get__isset_Vacinacoes: Boolean;
begin
  Result := F__isset_Vacinacoes;
end;

function TFichaVacinacaoMasterThriftImpl.GetUuidFichaCancelada: string;
begin
  Result := FUuidFichaCancelada;
end;

procedure TFichaVacinacaoMasterThriftImpl.SetUuidFichaCancelada( const Value: string);
begin
  F__isset_UuidFichaCancelada := True;
  FUuidFichaCancelada := Value;
end;

function TFichaVacinacaoMasterThriftImpl.Get__isset_UuidFichaCancelada: Boolean;
begin
  Result := F__isset_UuidFichaCancelada;
end;

procedure TFichaVacinacaoMasterThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _req_isset_UuidFicha : Boolean;
  _list9: IList;
  _i10: Integer;
  _elem11: IFichaVacinacaoChildThrift;

begin
  tracker := iprot.NextRecursionLevel;
  _req_isset_UuidFicha := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TUnicaLotacaoHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.List) then
          begin
            Vacinacoes := TThriftListImpl<IFichaVacinacaoChildThrift>.Create;
            _list9 := iprot.ReadListBegin();
            for _i10 := 0 to _list9.Count - 1 do
            begin
              _elem11 := TFichaVacinacaoChildThriftImpl.Create;
              _elem11.Read(iprot);
              Vacinacoes.Add(_elem11);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFichaCancelada := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
end;

procedure TFichaVacinacaoMasterThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_12 : IList;
  _iter13: IFichaVacinacaoChildThrift;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('FichaVacinacaoMasterThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  if (HeaderTransport <> nil) and __isset_HeaderTransport then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (Vacinacoes <> nil) and __isset_Vacinacoes then
  begin
    field_.Name := 'vacinacoes';
    field_.Type_  := TType.List;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    list_12 := TListImpl.Create(TType.Struct, Vacinacoes.Count);
    oprot.WriteListBegin( list_12);
    for _iter13 in Vacinacoes do
    begin
      _iter13.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_UuidFichaCancelada) then
  begin
    field_.Name := 'uuidFichaCancelada';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(UuidFichaCancelada);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaVacinacaoMasterThriftImpl.ToString: string;
var
  _sb14 : TThriftStringBuilder;
begin
  _sb14 := TThriftStringBuilder.Create('(');
  try
    _sb14.Append(', UuidFicha: ');
    _sb14.Append(UuidFicha);
    if (__isset_TpCdsOrigem) then begin
      _sb14.Append(', TpCdsOrigem: ');
      _sb14.Append(TpCdsOrigem);
    end;
    if (HeaderTransport <> nil) and __isset_HeaderTransport then begin
      _sb14.Append(', HeaderTransport: ');
      if (HeaderTransport = nil) then _sb14.Append('<null>') else _sb14.Append(HeaderTransport.ToString());
    end;
    if (Vacinacoes <> nil) and __isset_Vacinacoes then begin
      _sb14.Append(', Vacinacoes: ');
      _sb14.Append(Vacinacoes);
    end;
    if (__isset_UuidFichaCancelada) then begin
      _sb14.Append(', UuidFichaCancelada: ');
      _sb14.Append(UuidFichaCancelada);
    end;
    _sb14.Append(')');
    Result := _sb14.ToString;
  finally
    _sb14.Free;
  end;
end;


initialization

finalization


end.
