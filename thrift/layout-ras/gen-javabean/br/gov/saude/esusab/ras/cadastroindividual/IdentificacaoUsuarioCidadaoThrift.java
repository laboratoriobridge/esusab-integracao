/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.cadastroindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-06")
public class IdentificacaoUsuarioCidadaoThrift implements org.apache.thrift.TBase<IdentificacaoUsuarioCidadaoThrift, IdentificacaoUsuarioCidadaoThrift._Fields>, java.io.Serializable, Cloneable, Comparable<IdentificacaoUsuarioCidadaoThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IdentificacaoUsuarioCidadaoThrift");

  private static final org.apache.thrift.protocol.TField NOME_SOCIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeSocial", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipioNascimento", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimentoCidadao", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_MAE_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomeMae", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField EMAIL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("emailCidadao", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField NACIONALIDADE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nacionalidadeCidadao", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField NOME_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeCidadao", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField NOME_MAE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeMaeCidadao", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CNS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCidadao", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField CNS_RESPONSAVEL_FAMILIAR_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsResponsavelFamiliar", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField TELEFONE_CELULAR_FIELD_DESC = new org.apache.thrift.protocol.TField("telefoneCelular", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField NUMERO_NIS_PIS_PASEP_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroNisPisPasep", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PAIS_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("paisNascimento", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField RACA_COR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("racaCorCidadao", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField SEXO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexoCidadao", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField STATUS_EH_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("statusEhResponsavel", org.apache.thrift.protocol.TType.BOOL, (short)17);
  private static final org.apache.thrift.protocol.TField ETNIA_FIELD_DESC = new org.apache.thrift.protocol.TField("etnia", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField NOME_PAI_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomePaiCidadao", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_PAI_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomePai", org.apache.thrift.protocol.TType.BOOL, (short)20);
  private static final org.apache.thrift.protocol.TField DT_NATURALIZACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dtNaturalizacao", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField PORTARIA_NATURALIZACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("portariaNaturalizacao", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField DT_ENTRADA_BRASIL_FIELD_DESC = new org.apache.thrift.protocol.TField("dtEntradaBrasil", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField MICRO_AREA_FIELD_DESC = new org.apache.thrift.protocol.TField("microArea", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField ST_FORA_AREA_FIELD_DESC = new org.apache.thrift.protocol.TField("stForaArea", org.apache.thrift.protocol.TType.BOOL, (short)25);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField CPF_RESPONSAVEL_FAMILIAR_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfResponsavelFamiliar", org.apache.thrift.protocol.TType.STRING, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new IdentificacaoUsuarioCidadaoThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new IdentificacaoUsuarioCidadaoThriftTupleSchemeFactory());
  }

  private String nomeSocial; // optional
  private String codigoIbgeMunicipioNascimento; // optional
  private long dataNascimentoCidadao; // optional
  private boolean desconheceNomeMae; // optional
  private String emailCidadao; // optional
  private long nacionalidadeCidadao; // optional
  private String nomeCidadao; // optional
  private String nomeMaeCidadao; // optional
  private String cnsCidadao; // optional
  private String cnsResponsavelFamiliar; // optional
  private String telefoneCelular; // optional
  private String numeroNisPisPasep; // optional
  private long paisNascimento; // optional
  private long racaCorCidadao; // optional
  private long sexoCidadao; // optional
  private boolean statusEhResponsavel; // optional
  private long etnia; // optional
  private String nomePaiCidadao; // optional
  private boolean desconheceNomePai; // optional
  private long dtNaturalizacao; // optional
  private String portariaNaturalizacao; // optional
  private long dtEntradaBrasil; // optional
  private String microArea; // optional
  private boolean stForaArea; // optional
  private String cpfCidadao; // optional
  private String cpfResponsavelFamiliar; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NOME_SOCIAL((short)1, "nomeSocial"),
    CODIGO_IBGE_MUNICIPIO_NASCIMENTO((short)2, "codigoIbgeMunicipioNascimento"),
    DATA_NASCIMENTO_CIDADAO((short)3, "dataNascimentoCidadao"),
    DESCONHECE_NOME_MAE((short)5, "desconheceNomeMae"),
    EMAIL_CIDADAO((short)6, "emailCidadao"),
    NACIONALIDADE_CIDADAO((short)7, "nacionalidadeCidadao"),
    NOME_CIDADAO((short)8, "nomeCidadao"),
    NOME_MAE_CIDADAO((short)9, "nomeMaeCidadao"),
    CNS_CIDADAO((short)10, "cnsCidadao"),
    CNS_RESPONSAVEL_FAMILIAR((short)11, "cnsResponsavelFamiliar"),
    TELEFONE_CELULAR((short)12, "telefoneCelular"),
    NUMERO_NIS_PIS_PASEP((short)13, "numeroNisPisPasep"),
    PAIS_NASCIMENTO((short)14, "paisNascimento"),
    RACA_COR_CIDADAO((short)15, "racaCorCidadao"),
    SEXO_CIDADAO((short)16, "sexoCidadao"),
    STATUS_EH_RESPONSAVEL((short)17, "statusEhResponsavel"),
    ETNIA((short)18, "etnia"),
    NOME_PAI_CIDADAO((short)19, "nomePaiCidadao"),
    DESCONHECE_NOME_PAI((short)20, "desconheceNomePai"),
    DT_NATURALIZACAO((short)21, "dtNaturalizacao"),
    PORTARIA_NATURALIZACAO((short)22, "portariaNaturalizacao"),
    DT_ENTRADA_BRASIL((short)23, "dtEntradaBrasil"),
    MICRO_AREA((short)24, "microArea"),
    ST_FORA_AREA((short)25, "stForaArea"),
    CPF_CIDADAO((short)26, "cpfCidadao"),
    CPF_RESPONSAVEL_FAMILIAR((short)27, "cpfResponsavelFamiliar");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NOME_SOCIAL
          return NOME_SOCIAL;
        case 2: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
          return CODIGO_IBGE_MUNICIPIO_NASCIMENTO;
        case 3: // DATA_NASCIMENTO_CIDADAO
          return DATA_NASCIMENTO_CIDADAO;
        case 5: // DESCONHECE_NOME_MAE
          return DESCONHECE_NOME_MAE;
        case 6: // EMAIL_CIDADAO
          return EMAIL_CIDADAO;
        case 7: // NACIONALIDADE_CIDADAO
          return NACIONALIDADE_CIDADAO;
        case 8: // NOME_CIDADAO
          return NOME_CIDADAO;
        case 9: // NOME_MAE_CIDADAO
          return NOME_MAE_CIDADAO;
        case 10: // CNS_CIDADAO
          return CNS_CIDADAO;
        case 11: // CNS_RESPONSAVEL_FAMILIAR
          return CNS_RESPONSAVEL_FAMILIAR;
        case 12: // TELEFONE_CELULAR
          return TELEFONE_CELULAR;
        case 13: // NUMERO_NIS_PIS_PASEP
          return NUMERO_NIS_PIS_PASEP;
        case 14: // PAIS_NASCIMENTO
          return PAIS_NASCIMENTO;
        case 15: // RACA_COR_CIDADAO
          return RACA_COR_CIDADAO;
        case 16: // SEXO_CIDADAO
          return SEXO_CIDADAO;
        case 17: // STATUS_EH_RESPONSAVEL
          return STATUS_EH_RESPONSAVEL;
        case 18: // ETNIA
          return ETNIA;
        case 19: // NOME_PAI_CIDADAO
          return NOME_PAI_CIDADAO;
        case 20: // DESCONHECE_NOME_PAI
          return DESCONHECE_NOME_PAI;
        case 21: // DT_NATURALIZACAO
          return DT_NATURALIZACAO;
        case 22: // PORTARIA_NATURALIZACAO
          return PORTARIA_NATURALIZACAO;
        case 23: // DT_ENTRADA_BRASIL
          return DT_ENTRADA_BRASIL;
        case 24: // MICRO_AREA
          return MICRO_AREA;
        case 25: // ST_FORA_AREA
          return ST_FORA_AREA;
        case 26: // CPF_CIDADAO
          return CPF_CIDADAO;
        case 27: // CPF_RESPONSAVEL_FAMILIAR
          return CPF_RESPONSAVEL_FAMILIAR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATANASCIMENTOCIDADAO_ISSET_ID = 0;
  private static final int __DESCONHECENOMEMAE_ISSET_ID = 1;
  private static final int __NACIONALIDADECIDADAO_ISSET_ID = 2;
  private static final int __PAISNASCIMENTO_ISSET_ID = 3;
  private static final int __RACACORCIDADAO_ISSET_ID = 4;
  private static final int __SEXOCIDADAO_ISSET_ID = 5;
  private static final int __STATUSEHRESPONSAVEL_ISSET_ID = 6;
  private static final int __ETNIA_ISSET_ID = 7;
  private static final int __DESCONHECENOMEPAI_ISSET_ID = 8;
  private static final int __DTNATURALIZACAO_ISSET_ID = 9;
  private static final int __DTENTRADABRASIL_ISSET_ID = 10;
  private static final int __STFORAAREA_ISSET_ID = 11;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.NOME_SOCIAL,_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO,_Fields.DATA_NASCIMENTO_CIDADAO,_Fields.DESCONHECE_NOME_MAE,_Fields.EMAIL_CIDADAO,_Fields.NACIONALIDADE_CIDADAO,_Fields.NOME_CIDADAO,_Fields.NOME_MAE_CIDADAO,_Fields.CNS_CIDADAO,_Fields.CNS_RESPONSAVEL_FAMILIAR,_Fields.TELEFONE_CELULAR,_Fields.NUMERO_NIS_PIS_PASEP,_Fields.PAIS_NASCIMENTO,_Fields.RACA_COR_CIDADAO,_Fields.SEXO_CIDADAO,_Fields.STATUS_EH_RESPONSAVEL,_Fields.ETNIA,_Fields.NOME_PAI_CIDADAO,_Fields.DESCONHECE_NOME_PAI,_Fields.DT_NATURALIZACAO,_Fields.PORTARIA_NATURALIZACAO,_Fields.DT_ENTRADA_BRASIL,_Fields.MICRO_AREA,_Fields.ST_FORA_AREA,_Fields.CPF_CIDADAO,_Fields.CPF_RESPONSAVEL_FAMILIAR};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NOME_SOCIAL, new org.apache.thrift.meta_data.FieldMetaData("nomeSocial", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipioNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimentoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DESCONHECE_NOME_MAE, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomeMae", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.EMAIL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("emailCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NACIONALIDADE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nacionalidadeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NOME_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_MAE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeMaeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cnsCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNS_RESPONSAVEL_FAMILIAR, new org.apache.thrift.meta_data.FieldMetaData("cnsResponsavelFamiliar", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TELEFONE_CELULAR, new org.apache.thrift.meta_data.FieldMetaData("telefoneCelular", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_NIS_PIS_PASEP, new org.apache.thrift.meta_data.FieldMetaData("numeroNisPisPasep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAIS_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("paisNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RACA_COR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("racaCorCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("sexoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS_EH_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("statusEhResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ETNIA, new org.apache.thrift.meta_data.FieldMetaData("etnia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NOME_PAI_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomePaiCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCONHECE_NOME_PAI, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomePai", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DT_NATURALIZACAO, new org.apache.thrift.meta_data.FieldMetaData("dtNaturalizacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PORTARIA_NATURALIZACAO, new org.apache.thrift.meta_data.FieldMetaData("portariaNaturalizacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_ENTRADA_BRASIL, new org.apache.thrift.meta_data.FieldMetaData("dtEntradaBrasil", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MICRO_AREA, new org.apache.thrift.meta_data.FieldMetaData("microArea", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ST_FORA_AREA, new org.apache.thrift.meta_data.FieldMetaData("stForaArea", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPF_RESPONSAVEL_FAMILIAR, new org.apache.thrift.meta_data.FieldMetaData("cpfResponsavelFamiliar", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(IdentificacaoUsuarioCidadaoThrift.class, metaDataMap);
  }

  public IdentificacaoUsuarioCidadaoThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public IdentificacaoUsuarioCidadaoThrift(IdentificacaoUsuarioCidadaoThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetNomeSocial()) {
      this.nomeSocial = other.nomeSocial;
    }
    if (other.isSetCodigoIbgeMunicipioNascimento()) {
      this.codigoIbgeMunicipioNascimento = other.codigoIbgeMunicipioNascimento;
    }
    this.dataNascimentoCidadao = other.dataNascimentoCidadao;
    this.desconheceNomeMae = other.desconheceNomeMae;
    if (other.isSetEmailCidadao()) {
      this.emailCidadao = other.emailCidadao;
    }
    this.nacionalidadeCidadao = other.nacionalidadeCidadao;
    if (other.isSetNomeCidadao()) {
      this.nomeCidadao = other.nomeCidadao;
    }
    if (other.isSetNomeMaeCidadao()) {
      this.nomeMaeCidadao = other.nomeMaeCidadao;
    }
    if (other.isSetCnsCidadao()) {
      this.cnsCidadao = other.cnsCidadao;
    }
    if (other.isSetCnsResponsavelFamiliar()) {
      this.cnsResponsavelFamiliar = other.cnsResponsavelFamiliar;
    }
    if (other.isSetTelefoneCelular()) {
      this.telefoneCelular = other.telefoneCelular;
    }
    if (other.isSetNumeroNisPisPasep()) {
      this.numeroNisPisPasep = other.numeroNisPisPasep;
    }
    this.paisNascimento = other.paisNascimento;
    this.racaCorCidadao = other.racaCorCidadao;
    this.sexoCidadao = other.sexoCidadao;
    this.statusEhResponsavel = other.statusEhResponsavel;
    this.etnia = other.etnia;
    if (other.isSetNomePaiCidadao()) {
      this.nomePaiCidadao = other.nomePaiCidadao;
    }
    this.desconheceNomePai = other.desconheceNomePai;
    this.dtNaturalizacao = other.dtNaturalizacao;
    if (other.isSetPortariaNaturalizacao()) {
      this.portariaNaturalizacao = other.portariaNaturalizacao;
    }
    this.dtEntradaBrasil = other.dtEntradaBrasil;
    if (other.isSetMicroArea()) {
      this.microArea = other.microArea;
    }
    this.stForaArea = other.stForaArea;
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
    if (other.isSetCpfResponsavelFamiliar()) {
      this.cpfResponsavelFamiliar = other.cpfResponsavelFamiliar;
    }
  }

  public IdentificacaoUsuarioCidadaoThrift deepCopy() {
    return new IdentificacaoUsuarioCidadaoThrift(this);
  }

  @Override
  public void clear() {
    this.nomeSocial = null;
    this.codigoIbgeMunicipioNascimento = null;
    setDataNascimentoCidadaoIsSet(false);
    this.dataNascimentoCidadao = 0;
    setDesconheceNomeMaeIsSet(false);
    this.desconheceNomeMae = false;
    this.emailCidadao = null;
    setNacionalidadeCidadaoIsSet(false);
    this.nacionalidadeCidadao = 0;
    this.nomeCidadao = null;
    this.nomeMaeCidadao = null;
    this.cnsCidadao = null;
    this.cnsResponsavelFamiliar = null;
    this.telefoneCelular = null;
    this.numeroNisPisPasep = null;
    setPaisNascimentoIsSet(false);
    this.paisNascimento = 0;
    setRacaCorCidadaoIsSet(false);
    this.racaCorCidadao = 0;
    setSexoCidadaoIsSet(false);
    this.sexoCidadao = 0;
    setStatusEhResponsavelIsSet(false);
    this.statusEhResponsavel = false;
    setEtniaIsSet(false);
    this.etnia = 0;
    this.nomePaiCidadao = null;
    setDesconheceNomePaiIsSet(false);
    this.desconheceNomePai = false;
    setDtNaturalizacaoIsSet(false);
    this.dtNaturalizacao = 0;
    this.portariaNaturalizacao = null;
    setDtEntradaBrasilIsSet(false);
    this.dtEntradaBrasil = 0;
    this.microArea = null;
    setStForaAreaIsSet(false);
    this.stForaArea = false;
    this.cpfCidadao = null;
    this.cpfResponsavelFamiliar = null;
  }

  public String getNomeSocial() {
    return this.nomeSocial;
  }

  public void setNomeSocial(String nomeSocial) {
    this.nomeSocial = nomeSocial;
  }

  public void unsetNomeSocial() {
    this.nomeSocial = null;
  }

  /** Returns true if field nomeSocial is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeSocial() {
    return this.nomeSocial != null;
  }

  public void setNomeSocialIsSet(boolean value) {
    if (!value) {
      this.nomeSocial = null;
    }
  }

  public String getCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento;
  }

  public void setCodigoIbgeMunicipioNascimento(String codigoIbgeMunicipioNascimento) {
    this.codigoIbgeMunicipioNascimento = codigoIbgeMunicipioNascimento;
  }

  public void unsetCodigoIbgeMunicipioNascimento() {
    this.codigoIbgeMunicipioNascimento = null;
  }

  /** Returns true if field codigoIbgeMunicipioNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento != null;
  }

  public void setCodigoIbgeMunicipioNascimentoIsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipioNascimento = null;
    }
  }

  public long getDataNascimentoCidadao() {
    return this.dataNascimentoCidadao;
  }

  public void setDataNascimentoCidadao(long dataNascimentoCidadao) {
    this.dataNascimentoCidadao = dataNascimentoCidadao;
    setDataNascimentoCidadaoIsSet(true);
  }

  public void unsetDataNascimentoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  /** Returns true if field dataNascimentoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimentoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  public void setDataNascimentoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID, value);
  }

  public boolean isDesconheceNomeMae() {
    return this.desconheceNomeMae;
  }

  public void setDesconheceNomeMae(boolean desconheceNomeMae) {
    this.desconheceNomeMae = desconheceNomeMae;
    setDesconheceNomeMaeIsSet(true);
  }

  public void unsetDesconheceNomeMae() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  /** Returns true if field desconheceNomeMae is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomeMae() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  public void setDesconheceNomeMaeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID, value);
  }

  public String getEmailCidadao() {
    return this.emailCidadao;
  }

  public void setEmailCidadao(String emailCidadao) {
    this.emailCidadao = emailCidadao;
  }

  public void unsetEmailCidadao() {
    this.emailCidadao = null;
  }

  /** Returns true if field emailCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailCidadao() {
    return this.emailCidadao != null;
  }

  public void setEmailCidadaoIsSet(boolean value) {
    if (!value) {
      this.emailCidadao = null;
    }
  }

  public long getNacionalidadeCidadao() {
    return this.nacionalidadeCidadao;
  }

  public void setNacionalidadeCidadao(long nacionalidadeCidadao) {
    this.nacionalidadeCidadao = nacionalidadeCidadao;
    setNacionalidadeCidadaoIsSet(true);
  }

  public void unsetNacionalidadeCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID);
  }

  /** Returns true if field nacionalidadeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNacionalidadeCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID);
  }

  public void setNacionalidadeCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID, value);
  }

  public String getNomeCidadao() {
    return this.nomeCidadao;
  }

  public void setNomeCidadao(String nomeCidadao) {
    this.nomeCidadao = nomeCidadao;
  }

  public void unsetNomeCidadao() {
    this.nomeCidadao = null;
  }

  /** Returns true if field nomeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeCidadao() {
    return this.nomeCidadao != null;
  }

  public void setNomeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeCidadao = null;
    }
  }

  public String getNomeMaeCidadao() {
    return this.nomeMaeCidadao;
  }

  public void setNomeMaeCidadao(String nomeMaeCidadao) {
    this.nomeMaeCidadao = nomeMaeCidadao;
  }

  public void unsetNomeMaeCidadao() {
    this.nomeMaeCidadao = null;
  }

  /** Returns true if field nomeMaeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeMaeCidadao() {
    return this.nomeMaeCidadao != null;
  }

  public void setNomeMaeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeMaeCidadao = null;
    }
  }

  public String getCnsCidadao() {
    return this.cnsCidadao;
  }

  public void setCnsCidadao(String cnsCidadao) {
    this.cnsCidadao = cnsCidadao;
  }

  public void unsetCnsCidadao() {
    this.cnsCidadao = null;
  }

  /** Returns true if field cnsCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCidadao() {
    return this.cnsCidadao != null;
  }

  public void setCnsCidadaoIsSet(boolean value) {
    if (!value) {
      this.cnsCidadao = null;
    }
  }

  public String getCnsResponsavelFamiliar() {
    return this.cnsResponsavelFamiliar;
  }

  public void setCnsResponsavelFamiliar(String cnsResponsavelFamiliar) {
    this.cnsResponsavelFamiliar = cnsResponsavelFamiliar;
  }

  public void unsetCnsResponsavelFamiliar() {
    this.cnsResponsavelFamiliar = null;
  }

  /** Returns true if field cnsResponsavelFamiliar is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsResponsavelFamiliar() {
    return this.cnsResponsavelFamiliar != null;
  }

  public void setCnsResponsavelFamiliarIsSet(boolean value) {
    if (!value) {
      this.cnsResponsavelFamiliar = null;
    }
  }

  public String getTelefoneCelular() {
    return this.telefoneCelular;
  }

  public void setTelefoneCelular(String telefoneCelular) {
    this.telefoneCelular = telefoneCelular;
  }

  public void unsetTelefoneCelular() {
    this.telefoneCelular = null;
  }

  /** Returns true if field telefoneCelular is set (has been assigned a value) and false otherwise */
  public boolean isSetTelefoneCelular() {
    return this.telefoneCelular != null;
  }

  public void setTelefoneCelularIsSet(boolean value) {
    if (!value) {
      this.telefoneCelular = null;
    }
  }

  public String getNumeroNisPisPasep() {
    return this.numeroNisPisPasep;
  }

  public void setNumeroNisPisPasep(String numeroNisPisPasep) {
    this.numeroNisPisPasep = numeroNisPisPasep;
  }

  public void unsetNumeroNisPisPasep() {
    this.numeroNisPisPasep = null;
  }

  /** Returns true if field numeroNisPisPasep is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroNisPisPasep() {
    return this.numeroNisPisPasep != null;
  }

  public void setNumeroNisPisPasepIsSet(boolean value) {
    if (!value) {
      this.numeroNisPisPasep = null;
    }
  }

  public long getPaisNascimento() {
    return this.paisNascimento;
  }

  public void setPaisNascimento(long paisNascimento) {
    this.paisNascimento = paisNascimento;
    setPaisNascimentoIsSet(true);
  }

  public void unsetPaisNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID);
  }

  /** Returns true if field paisNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetPaisNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID);
  }

  public void setPaisNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID, value);
  }

  public long getRacaCorCidadao() {
    return this.racaCorCidadao;
  }

  public void setRacaCorCidadao(long racaCorCidadao) {
    this.racaCorCidadao = racaCorCidadao;
    setRacaCorCidadaoIsSet(true);
  }

  public void unsetRacaCorCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  /** Returns true if field racaCorCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetRacaCorCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  public void setRacaCorCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID, value);
  }

  public long getSexoCidadao() {
    return this.sexoCidadao;
  }

  public void setSexoCidadao(long sexoCidadao) {
    this.sexoCidadao = sexoCidadao;
    setSexoCidadaoIsSet(true);
  }

  public void unsetSexoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  /** Returns true if field sexoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetSexoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  public void setSexoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID, value);
  }

  public boolean isStatusEhResponsavel() {
    return this.statusEhResponsavel;
  }

  public void setStatusEhResponsavel(boolean statusEhResponsavel) {
    this.statusEhResponsavel = statusEhResponsavel;
    setStatusEhResponsavelIsSet(true);
  }

  public void unsetStatusEhResponsavel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSEHRESPONSAVEL_ISSET_ID);
  }

  /** Returns true if field statusEhResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusEhResponsavel() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSEHRESPONSAVEL_ISSET_ID);
  }

  public void setStatusEhResponsavelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSEHRESPONSAVEL_ISSET_ID, value);
  }

  public long getEtnia() {
    return this.etnia;
  }

  public void setEtnia(long etnia) {
    this.etnia = etnia;
    setEtniaIsSet(true);
  }

  public void unsetEtnia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ETNIA_ISSET_ID);
  }

  /** Returns true if field etnia is set (has been assigned a value) and false otherwise */
  public boolean isSetEtnia() {
    return EncodingUtils.testBit(__isset_bitfield, __ETNIA_ISSET_ID);
  }

  public void setEtniaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ETNIA_ISSET_ID, value);
  }

  public String getNomePaiCidadao() {
    return this.nomePaiCidadao;
  }

  public void setNomePaiCidadao(String nomePaiCidadao) {
    this.nomePaiCidadao = nomePaiCidadao;
  }

  public void unsetNomePaiCidadao() {
    this.nomePaiCidadao = null;
  }

  /** Returns true if field nomePaiCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomePaiCidadao() {
    return this.nomePaiCidadao != null;
  }

  public void setNomePaiCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomePaiCidadao = null;
    }
  }

  public boolean isDesconheceNomePai() {
    return this.desconheceNomePai;
  }

  public void setDesconheceNomePai(boolean desconheceNomePai) {
    this.desconheceNomePai = desconheceNomePai;
    setDesconheceNomePaiIsSet(true);
  }

  public void unsetDesconheceNomePai() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEPAI_ISSET_ID);
  }

  /** Returns true if field desconheceNomePai is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomePai() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEPAI_ISSET_ID);
  }

  public void setDesconheceNomePaiIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEPAI_ISSET_ID, value);
  }

  public long getDtNaturalizacao() {
    return this.dtNaturalizacao;
  }

  public void setDtNaturalizacao(long dtNaturalizacao) {
    this.dtNaturalizacao = dtNaturalizacao;
    setDtNaturalizacaoIsSet(true);
  }

  public void unsetDtNaturalizacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTNATURALIZACAO_ISSET_ID);
  }

  /** Returns true if field dtNaturalizacao is set (has been assigned a value) and false otherwise */
  public boolean isSetDtNaturalizacao() {
    return EncodingUtils.testBit(__isset_bitfield, __DTNATURALIZACAO_ISSET_ID);
  }

  public void setDtNaturalizacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTNATURALIZACAO_ISSET_ID, value);
  }

  public String getPortariaNaturalizacao() {
    return this.portariaNaturalizacao;
  }

  public void setPortariaNaturalizacao(String portariaNaturalizacao) {
    this.portariaNaturalizacao = portariaNaturalizacao;
  }

  public void unsetPortariaNaturalizacao() {
    this.portariaNaturalizacao = null;
  }

  /** Returns true if field portariaNaturalizacao is set (has been assigned a value) and false otherwise */
  public boolean isSetPortariaNaturalizacao() {
    return this.portariaNaturalizacao != null;
  }

  public void setPortariaNaturalizacaoIsSet(boolean value) {
    if (!value) {
      this.portariaNaturalizacao = null;
    }
  }

  public long getDtEntradaBrasil() {
    return this.dtEntradaBrasil;
  }

  public void setDtEntradaBrasil(long dtEntradaBrasil) {
    this.dtEntradaBrasil = dtEntradaBrasil;
    setDtEntradaBrasilIsSet(true);
  }

  public void unsetDtEntradaBrasil() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTENTRADABRASIL_ISSET_ID);
  }

  /** Returns true if field dtEntradaBrasil is set (has been assigned a value) and false otherwise */
  public boolean isSetDtEntradaBrasil() {
    return EncodingUtils.testBit(__isset_bitfield, __DTENTRADABRASIL_ISSET_ID);
  }

  public void setDtEntradaBrasilIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTENTRADABRASIL_ISSET_ID, value);
  }

  public String getMicroArea() {
    return this.microArea;
  }

  public void setMicroArea(String microArea) {
    this.microArea = microArea;
  }

  public void unsetMicroArea() {
    this.microArea = null;
  }

  /** Returns true if field microArea is set (has been assigned a value) and false otherwise */
  public boolean isSetMicroArea() {
    return this.microArea != null;
  }

  public void setMicroAreaIsSet(boolean value) {
    if (!value) {
      this.microArea = null;
    }
  }

  public boolean isStForaArea() {
    return this.stForaArea;
  }

  public void setStForaArea(boolean stForaArea) {
    this.stForaArea = stForaArea;
    setStForaAreaIsSet(true);
  }

  public void unsetStForaArea() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STFORAAREA_ISSET_ID);
  }

  /** Returns true if field stForaArea is set (has been assigned a value) and false otherwise */
  public boolean isSetStForaArea() {
    return EncodingUtils.testBit(__isset_bitfield, __STFORAAREA_ISSET_ID);
  }

  public void setStForaAreaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STFORAAREA_ISSET_ID, value);
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public String getCpfResponsavelFamiliar() {
    return this.cpfResponsavelFamiliar;
  }

  public void setCpfResponsavelFamiliar(String cpfResponsavelFamiliar) {
    this.cpfResponsavelFamiliar = cpfResponsavelFamiliar;
  }

  public void unsetCpfResponsavelFamiliar() {
    this.cpfResponsavelFamiliar = null;
  }

  /** Returns true if field cpfResponsavelFamiliar is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfResponsavelFamiliar() {
    return this.cpfResponsavelFamiliar != null;
  }

  public void setCpfResponsavelFamiliarIsSet(boolean value) {
    if (!value) {
      this.cpfResponsavelFamiliar = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NOME_SOCIAL:
      if (value == null) {
        unsetNomeSocial();
      } else {
        setNomeSocial((String)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      if (value == null) {
        unsetCodigoIbgeMunicipioNascimento();
      } else {
        setCodigoIbgeMunicipioNascimento((String)value);
      }
      break;

    case DATA_NASCIMENTO_CIDADAO:
      if (value == null) {
        unsetDataNascimentoCidadao();
      } else {
        setDataNascimentoCidadao((Long)value);
      }
      break;

    case DESCONHECE_NOME_MAE:
      if (value == null) {
        unsetDesconheceNomeMae();
      } else {
        setDesconheceNomeMae((Boolean)value);
      }
      break;

    case EMAIL_CIDADAO:
      if (value == null) {
        unsetEmailCidadao();
      } else {
        setEmailCidadao((String)value);
      }
      break;

    case NACIONALIDADE_CIDADAO:
      if (value == null) {
        unsetNacionalidadeCidadao();
      } else {
        setNacionalidadeCidadao((Long)value);
      }
      break;

    case NOME_CIDADAO:
      if (value == null) {
        unsetNomeCidadao();
      } else {
        setNomeCidadao((String)value);
      }
      break;

    case NOME_MAE_CIDADAO:
      if (value == null) {
        unsetNomeMaeCidadao();
      } else {
        setNomeMaeCidadao((String)value);
      }
      break;

    case CNS_CIDADAO:
      if (value == null) {
        unsetCnsCidadao();
      } else {
        setCnsCidadao((String)value);
      }
      break;

    case CNS_RESPONSAVEL_FAMILIAR:
      if (value == null) {
        unsetCnsResponsavelFamiliar();
      } else {
        setCnsResponsavelFamiliar((String)value);
      }
      break;

    case TELEFONE_CELULAR:
      if (value == null) {
        unsetTelefoneCelular();
      } else {
        setTelefoneCelular((String)value);
      }
      break;

    case NUMERO_NIS_PIS_PASEP:
      if (value == null) {
        unsetNumeroNisPisPasep();
      } else {
        setNumeroNisPisPasep((String)value);
      }
      break;

    case PAIS_NASCIMENTO:
      if (value == null) {
        unsetPaisNascimento();
      } else {
        setPaisNascimento((Long)value);
      }
      break;

    case RACA_COR_CIDADAO:
      if (value == null) {
        unsetRacaCorCidadao();
      } else {
        setRacaCorCidadao((Long)value);
      }
      break;

    case SEXO_CIDADAO:
      if (value == null) {
        unsetSexoCidadao();
      } else {
        setSexoCidadao((Long)value);
      }
      break;

    case STATUS_EH_RESPONSAVEL:
      if (value == null) {
        unsetStatusEhResponsavel();
      } else {
        setStatusEhResponsavel((Boolean)value);
      }
      break;

    case ETNIA:
      if (value == null) {
        unsetEtnia();
      } else {
        setEtnia((Long)value);
      }
      break;

    case NOME_PAI_CIDADAO:
      if (value == null) {
        unsetNomePaiCidadao();
      } else {
        setNomePaiCidadao((String)value);
      }
      break;

    case DESCONHECE_NOME_PAI:
      if (value == null) {
        unsetDesconheceNomePai();
      } else {
        setDesconheceNomePai((Boolean)value);
      }
      break;

    case DT_NATURALIZACAO:
      if (value == null) {
        unsetDtNaturalizacao();
      } else {
        setDtNaturalizacao((Long)value);
      }
      break;

    case PORTARIA_NATURALIZACAO:
      if (value == null) {
        unsetPortariaNaturalizacao();
      } else {
        setPortariaNaturalizacao((String)value);
      }
      break;

    case DT_ENTRADA_BRASIL:
      if (value == null) {
        unsetDtEntradaBrasil();
      } else {
        setDtEntradaBrasil((Long)value);
      }
      break;

    case MICRO_AREA:
      if (value == null) {
        unsetMicroArea();
      } else {
        setMicroArea((String)value);
      }
      break;

    case ST_FORA_AREA:
      if (value == null) {
        unsetStForaArea();
      } else {
        setStForaArea((Boolean)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    case CPF_RESPONSAVEL_FAMILIAR:
      if (value == null) {
        unsetCpfResponsavelFamiliar();
      } else {
        setCpfResponsavelFamiliar((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NOME_SOCIAL:
      return getNomeSocial();

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return getCodigoIbgeMunicipioNascimento();

    case DATA_NASCIMENTO_CIDADAO:
      return getDataNascimentoCidadao();

    case DESCONHECE_NOME_MAE:
      return isDesconheceNomeMae();

    case EMAIL_CIDADAO:
      return getEmailCidadao();

    case NACIONALIDADE_CIDADAO:
      return getNacionalidadeCidadao();

    case NOME_CIDADAO:
      return getNomeCidadao();

    case NOME_MAE_CIDADAO:
      return getNomeMaeCidadao();

    case CNS_CIDADAO:
      return getCnsCidadao();

    case CNS_RESPONSAVEL_FAMILIAR:
      return getCnsResponsavelFamiliar();

    case TELEFONE_CELULAR:
      return getTelefoneCelular();

    case NUMERO_NIS_PIS_PASEP:
      return getNumeroNisPisPasep();

    case PAIS_NASCIMENTO:
      return getPaisNascimento();

    case RACA_COR_CIDADAO:
      return getRacaCorCidadao();

    case SEXO_CIDADAO:
      return getSexoCidadao();

    case STATUS_EH_RESPONSAVEL:
      return isStatusEhResponsavel();

    case ETNIA:
      return getEtnia();

    case NOME_PAI_CIDADAO:
      return getNomePaiCidadao();

    case DESCONHECE_NOME_PAI:
      return isDesconheceNomePai();

    case DT_NATURALIZACAO:
      return getDtNaturalizacao();

    case PORTARIA_NATURALIZACAO:
      return getPortariaNaturalizacao();

    case DT_ENTRADA_BRASIL:
      return getDtEntradaBrasil();

    case MICRO_AREA:
      return getMicroArea();

    case ST_FORA_AREA:
      return isStForaArea();

    case CPF_CIDADAO:
      return getCpfCidadao();

    case CPF_RESPONSAVEL_FAMILIAR:
      return getCpfResponsavelFamiliar();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NOME_SOCIAL:
      return isSetNomeSocial();
    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return isSetCodigoIbgeMunicipioNascimento();
    case DATA_NASCIMENTO_CIDADAO:
      return isSetDataNascimentoCidadao();
    case DESCONHECE_NOME_MAE:
      return isSetDesconheceNomeMae();
    case EMAIL_CIDADAO:
      return isSetEmailCidadao();
    case NACIONALIDADE_CIDADAO:
      return isSetNacionalidadeCidadao();
    case NOME_CIDADAO:
      return isSetNomeCidadao();
    case NOME_MAE_CIDADAO:
      return isSetNomeMaeCidadao();
    case CNS_CIDADAO:
      return isSetCnsCidadao();
    case CNS_RESPONSAVEL_FAMILIAR:
      return isSetCnsResponsavelFamiliar();
    case TELEFONE_CELULAR:
      return isSetTelefoneCelular();
    case NUMERO_NIS_PIS_PASEP:
      return isSetNumeroNisPisPasep();
    case PAIS_NASCIMENTO:
      return isSetPaisNascimento();
    case RACA_COR_CIDADAO:
      return isSetRacaCorCidadao();
    case SEXO_CIDADAO:
      return isSetSexoCidadao();
    case STATUS_EH_RESPONSAVEL:
      return isSetStatusEhResponsavel();
    case ETNIA:
      return isSetEtnia();
    case NOME_PAI_CIDADAO:
      return isSetNomePaiCidadao();
    case DESCONHECE_NOME_PAI:
      return isSetDesconheceNomePai();
    case DT_NATURALIZACAO:
      return isSetDtNaturalizacao();
    case PORTARIA_NATURALIZACAO:
      return isSetPortariaNaturalizacao();
    case DT_ENTRADA_BRASIL:
      return isSetDtEntradaBrasil();
    case MICRO_AREA:
      return isSetMicroArea();
    case ST_FORA_AREA:
      return isSetStForaArea();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    case CPF_RESPONSAVEL_FAMILIAR:
      return isSetCpfResponsavelFamiliar();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof IdentificacaoUsuarioCidadaoThrift)
      return this.equals((IdentificacaoUsuarioCidadaoThrift)that);
    return false;
  }

  public boolean equals(IdentificacaoUsuarioCidadaoThrift that) {
    if (that == null)
      return false;

    boolean this_present_nomeSocial = true && this.isSetNomeSocial();
    boolean that_present_nomeSocial = true && that.isSetNomeSocial();
    if (this_present_nomeSocial || that_present_nomeSocial) {
      if (!(this_present_nomeSocial && that_present_nomeSocial))
        return false;
      if (!this.nomeSocial.equals(that.nomeSocial))
        return false;
    }

    boolean this_present_codigoIbgeMunicipioNascimento = true && this.isSetCodigoIbgeMunicipioNascimento();
    boolean that_present_codigoIbgeMunicipioNascimento = true && that.isSetCodigoIbgeMunicipioNascimento();
    if (this_present_codigoIbgeMunicipioNascimento || that_present_codigoIbgeMunicipioNascimento) {
      if (!(this_present_codigoIbgeMunicipioNascimento && that_present_codigoIbgeMunicipioNascimento))
        return false;
      if (!this.codigoIbgeMunicipioNascimento.equals(that.codigoIbgeMunicipioNascimento))
        return false;
    }

    boolean this_present_dataNascimentoCidadao = true && this.isSetDataNascimentoCidadao();
    boolean that_present_dataNascimentoCidadao = true && that.isSetDataNascimentoCidadao();
    if (this_present_dataNascimentoCidadao || that_present_dataNascimentoCidadao) {
      if (!(this_present_dataNascimentoCidadao && that_present_dataNascimentoCidadao))
        return false;
      if (this.dataNascimentoCidadao != that.dataNascimentoCidadao)
        return false;
    }

    boolean this_present_desconheceNomeMae = true && this.isSetDesconheceNomeMae();
    boolean that_present_desconheceNomeMae = true && that.isSetDesconheceNomeMae();
    if (this_present_desconheceNomeMae || that_present_desconheceNomeMae) {
      if (!(this_present_desconheceNomeMae && that_present_desconheceNomeMae))
        return false;
      if (this.desconheceNomeMae != that.desconheceNomeMae)
        return false;
    }

    boolean this_present_emailCidadao = true && this.isSetEmailCidadao();
    boolean that_present_emailCidadao = true && that.isSetEmailCidadao();
    if (this_present_emailCidadao || that_present_emailCidadao) {
      if (!(this_present_emailCidadao && that_present_emailCidadao))
        return false;
      if (!this.emailCidadao.equals(that.emailCidadao))
        return false;
    }

    boolean this_present_nacionalidadeCidadao = true && this.isSetNacionalidadeCidadao();
    boolean that_present_nacionalidadeCidadao = true && that.isSetNacionalidadeCidadao();
    if (this_present_nacionalidadeCidadao || that_present_nacionalidadeCidadao) {
      if (!(this_present_nacionalidadeCidadao && that_present_nacionalidadeCidadao))
        return false;
      if (this.nacionalidadeCidadao != that.nacionalidadeCidadao)
        return false;
    }

    boolean this_present_nomeCidadao = true && this.isSetNomeCidadao();
    boolean that_present_nomeCidadao = true && that.isSetNomeCidadao();
    if (this_present_nomeCidadao || that_present_nomeCidadao) {
      if (!(this_present_nomeCidadao && that_present_nomeCidadao))
        return false;
      if (!this.nomeCidadao.equals(that.nomeCidadao))
        return false;
    }

    boolean this_present_nomeMaeCidadao = true && this.isSetNomeMaeCidadao();
    boolean that_present_nomeMaeCidadao = true && that.isSetNomeMaeCidadao();
    if (this_present_nomeMaeCidadao || that_present_nomeMaeCidadao) {
      if (!(this_present_nomeMaeCidadao && that_present_nomeMaeCidadao))
        return false;
      if (!this.nomeMaeCidadao.equals(that.nomeMaeCidadao))
        return false;
    }

    boolean this_present_cnsCidadao = true && this.isSetCnsCidadao();
    boolean that_present_cnsCidadao = true && that.isSetCnsCidadao();
    if (this_present_cnsCidadao || that_present_cnsCidadao) {
      if (!(this_present_cnsCidadao && that_present_cnsCidadao))
        return false;
      if (!this.cnsCidadao.equals(that.cnsCidadao))
        return false;
    }

    boolean this_present_cnsResponsavelFamiliar = true && this.isSetCnsResponsavelFamiliar();
    boolean that_present_cnsResponsavelFamiliar = true && that.isSetCnsResponsavelFamiliar();
    if (this_present_cnsResponsavelFamiliar || that_present_cnsResponsavelFamiliar) {
      if (!(this_present_cnsResponsavelFamiliar && that_present_cnsResponsavelFamiliar))
        return false;
      if (!this.cnsResponsavelFamiliar.equals(that.cnsResponsavelFamiliar))
        return false;
    }

    boolean this_present_telefoneCelular = true && this.isSetTelefoneCelular();
    boolean that_present_telefoneCelular = true && that.isSetTelefoneCelular();
    if (this_present_telefoneCelular || that_present_telefoneCelular) {
      if (!(this_present_telefoneCelular && that_present_telefoneCelular))
        return false;
      if (!this.telefoneCelular.equals(that.telefoneCelular))
        return false;
    }

    boolean this_present_numeroNisPisPasep = true && this.isSetNumeroNisPisPasep();
    boolean that_present_numeroNisPisPasep = true && that.isSetNumeroNisPisPasep();
    if (this_present_numeroNisPisPasep || that_present_numeroNisPisPasep) {
      if (!(this_present_numeroNisPisPasep && that_present_numeroNisPisPasep))
        return false;
      if (!this.numeroNisPisPasep.equals(that.numeroNisPisPasep))
        return false;
    }

    boolean this_present_paisNascimento = true && this.isSetPaisNascimento();
    boolean that_present_paisNascimento = true && that.isSetPaisNascimento();
    if (this_present_paisNascimento || that_present_paisNascimento) {
      if (!(this_present_paisNascimento && that_present_paisNascimento))
        return false;
      if (this.paisNascimento != that.paisNascimento)
        return false;
    }

    boolean this_present_racaCorCidadao = true && this.isSetRacaCorCidadao();
    boolean that_present_racaCorCidadao = true && that.isSetRacaCorCidadao();
    if (this_present_racaCorCidadao || that_present_racaCorCidadao) {
      if (!(this_present_racaCorCidadao && that_present_racaCorCidadao))
        return false;
      if (this.racaCorCidadao != that.racaCorCidadao)
        return false;
    }

    boolean this_present_sexoCidadao = true && this.isSetSexoCidadao();
    boolean that_present_sexoCidadao = true && that.isSetSexoCidadao();
    if (this_present_sexoCidadao || that_present_sexoCidadao) {
      if (!(this_present_sexoCidadao && that_present_sexoCidadao))
        return false;
      if (this.sexoCidadao != that.sexoCidadao)
        return false;
    }

    boolean this_present_statusEhResponsavel = true && this.isSetStatusEhResponsavel();
    boolean that_present_statusEhResponsavel = true && that.isSetStatusEhResponsavel();
    if (this_present_statusEhResponsavel || that_present_statusEhResponsavel) {
      if (!(this_present_statusEhResponsavel && that_present_statusEhResponsavel))
        return false;
      if (this.statusEhResponsavel != that.statusEhResponsavel)
        return false;
    }

    boolean this_present_etnia = true && this.isSetEtnia();
    boolean that_present_etnia = true && that.isSetEtnia();
    if (this_present_etnia || that_present_etnia) {
      if (!(this_present_etnia && that_present_etnia))
        return false;
      if (this.etnia != that.etnia)
        return false;
    }

    boolean this_present_nomePaiCidadao = true && this.isSetNomePaiCidadao();
    boolean that_present_nomePaiCidadao = true && that.isSetNomePaiCidadao();
    if (this_present_nomePaiCidadao || that_present_nomePaiCidadao) {
      if (!(this_present_nomePaiCidadao && that_present_nomePaiCidadao))
        return false;
      if (!this.nomePaiCidadao.equals(that.nomePaiCidadao))
        return false;
    }

    boolean this_present_desconheceNomePai = true && this.isSetDesconheceNomePai();
    boolean that_present_desconheceNomePai = true && that.isSetDesconheceNomePai();
    if (this_present_desconheceNomePai || that_present_desconheceNomePai) {
      if (!(this_present_desconheceNomePai && that_present_desconheceNomePai))
        return false;
      if (this.desconheceNomePai != that.desconheceNomePai)
        return false;
    }

    boolean this_present_dtNaturalizacao = true && this.isSetDtNaturalizacao();
    boolean that_present_dtNaturalizacao = true && that.isSetDtNaturalizacao();
    if (this_present_dtNaturalizacao || that_present_dtNaturalizacao) {
      if (!(this_present_dtNaturalizacao && that_present_dtNaturalizacao))
        return false;
      if (this.dtNaturalizacao != that.dtNaturalizacao)
        return false;
    }

    boolean this_present_portariaNaturalizacao = true && this.isSetPortariaNaturalizacao();
    boolean that_present_portariaNaturalizacao = true && that.isSetPortariaNaturalizacao();
    if (this_present_portariaNaturalizacao || that_present_portariaNaturalizacao) {
      if (!(this_present_portariaNaturalizacao && that_present_portariaNaturalizacao))
        return false;
      if (!this.portariaNaturalizacao.equals(that.portariaNaturalizacao))
        return false;
    }

    boolean this_present_dtEntradaBrasil = true && this.isSetDtEntradaBrasil();
    boolean that_present_dtEntradaBrasil = true && that.isSetDtEntradaBrasil();
    if (this_present_dtEntradaBrasil || that_present_dtEntradaBrasil) {
      if (!(this_present_dtEntradaBrasil && that_present_dtEntradaBrasil))
        return false;
      if (this.dtEntradaBrasil != that.dtEntradaBrasil)
        return false;
    }

    boolean this_present_microArea = true && this.isSetMicroArea();
    boolean that_present_microArea = true && that.isSetMicroArea();
    if (this_present_microArea || that_present_microArea) {
      if (!(this_present_microArea && that_present_microArea))
        return false;
      if (!this.microArea.equals(that.microArea))
        return false;
    }

    boolean this_present_stForaArea = true && this.isSetStForaArea();
    boolean that_present_stForaArea = true && that.isSetStForaArea();
    if (this_present_stForaArea || that_present_stForaArea) {
      if (!(this_present_stForaArea && that_present_stForaArea))
        return false;
      if (this.stForaArea != that.stForaArea)
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    boolean this_present_cpfResponsavelFamiliar = true && this.isSetCpfResponsavelFamiliar();
    boolean that_present_cpfResponsavelFamiliar = true && that.isSetCpfResponsavelFamiliar();
    if (this_present_cpfResponsavelFamiliar || that_present_cpfResponsavelFamiliar) {
      if (!(this_present_cpfResponsavelFamiliar && that_present_cpfResponsavelFamiliar))
        return false;
      if (!this.cpfResponsavelFamiliar.equals(that.cpfResponsavelFamiliar))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_nomeSocial = true && (isSetNomeSocial());
    list.add(present_nomeSocial);
    if (present_nomeSocial)
      list.add(nomeSocial);

    boolean present_codigoIbgeMunicipioNascimento = true && (isSetCodigoIbgeMunicipioNascimento());
    list.add(present_codigoIbgeMunicipioNascimento);
    if (present_codigoIbgeMunicipioNascimento)
      list.add(codigoIbgeMunicipioNascimento);

    boolean present_dataNascimentoCidadao = true && (isSetDataNascimentoCidadao());
    list.add(present_dataNascimentoCidadao);
    if (present_dataNascimentoCidadao)
      list.add(dataNascimentoCidadao);

    boolean present_desconheceNomeMae = true && (isSetDesconheceNomeMae());
    list.add(present_desconheceNomeMae);
    if (present_desconheceNomeMae)
      list.add(desconheceNomeMae);

    boolean present_emailCidadao = true && (isSetEmailCidadao());
    list.add(present_emailCidadao);
    if (present_emailCidadao)
      list.add(emailCidadao);

    boolean present_nacionalidadeCidadao = true && (isSetNacionalidadeCidadao());
    list.add(present_nacionalidadeCidadao);
    if (present_nacionalidadeCidadao)
      list.add(nacionalidadeCidadao);

    boolean present_nomeCidadao = true && (isSetNomeCidadao());
    list.add(present_nomeCidadao);
    if (present_nomeCidadao)
      list.add(nomeCidadao);

    boolean present_nomeMaeCidadao = true && (isSetNomeMaeCidadao());
    list.add(present_nomeMaeCidadao);
    if (present_nomeMaeCidadao)
      list.add(nomeMaeCidadao);

    boolean present_cnsCidadao = true && (isSetCnsCidadao());
    list.add(present_cnsCidadao);
    if (present_cnsCidadao)
      list.add(cnsCidadao);

    boolean present_cnsResponsavelFamiliar = true && (isSetCnsResponsavelFamiliar());
    list.add(present_cnsResponsavelFamiliar);
    if (present_cnsResponsavelFamiliar)
      list.add(cnsResponsavelFamiliar);

    boolean present_telefoneCelular = true && (isSetTelefoneCelular());
    list.add(present_telefoneCelular);
    if (present_telefoneCelular)
      list.add(telefoneCelular);

    boolean present_numeroNisPisPasep = true && (isSetNumeroNisPisPasep());
    list.add(present_numeroNisPisPasep);
    if (present_numeroNisPisPasep)
      list.add(numeroNisPisPasep);

    boolean present_paisNascimento = true && (isSetPaisNascimento());
    list.add(present_paisNascimento);
    if (present_paisNascimento)
      list.add(paisNascimento);

    boolean present_racaCorCidadao = true && (isSetRacaCorCidadao());
    list.add(present_racaCorCidadao);
    if (present_racaCorCidadao)
      list.add(racaCorCidadao);

    boolean present_sexoCidadao = true && (isSetSexoCidadao());
    list.add(present_sexoCidadao);
    if (present_sexoCidadao)
      list.add(sexoCidadao);

    boolean present_statusEhResponsavel = true && (isSetStatusEhResponsavel());
    list.add(present_statusEhResponsavel);
    if (present_statusEhResponsavel)
      list.add(statusEhResponsavel);

    boolean present_etnia = true && (isSetEtnia());
    list.add(present_etnia);
    if (present_etnia)
      list.add(etnia);

    boolean present_nomePaiCidadao = true && (isSetNomePaiCidadao());
    list.add(present_nomePaiCidadao);
    if (present_nomePaiCidadao)
      list.add(nomePaiCidadao);

    boolean present_desconheceNomePai = true && (isSetDesconheceNomePai());
    list.add(present_desconheceNomePai);
    if (present_desconheceNomePai)
      list.add(desconheceNomePai);

    boolean present_dtNaturalizacao = true && (isSetDtNaturalizacao());
    list.add(present_dtNaturalizacao);
    if (present_dtNaturalizacao)
      list.add(dtNaturalizacao);

    boolean present_portariaNaturalizacao = true && (isSetPortariaNaturalizacao());
    list.add(present_portariaNaturalizacao);
    if (present_portariaNaturalizacao)
      list.add(portariaNaturalizacao);

    boolean present_dtEntradaBrasil = true && (isSetDtEntradaBrasil());
    list.add(present_dtEntradaBrasil);
    if (present_dtEntradaBrasil)
      list.add(dtEntradaBrasil);

    boolean present_microArea = true && (isSetMicroArea());
    list.add(present_microArea);
    if (present_microArea)
      list.add(microArea);

    boolean present_stForaArea = true && (isSetStForaArea());
    list.add(present_stForaArea);
    if (present_stForaArea)
      list.add(stForaArea);

    boolean present_cpfCidadao = true && (isSetCpfCidadao());
    list.add(present_cpfCidadao);
    if (present_cpfCidadao)
      list.add(cpfCidadao);

    boolean present_cpfResponsavelFamiliar = true && (isSetCpfResponsavelFamiliar());
    list.add(present_cpfResponsavelFamiliar);
    if (present_cpfResponsavelFamiliar)
      list.add(cpfResponsavelFamiliar);

    return list.hashCode();
  }

  @Override
  public int compareTo(IdentificacaoUsuarioCidadaoThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetNomeSocial()).compareTo(other.isSetNomeSocial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeSocial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeSocial, other.nomeSocial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipioNascimento()).compareTo(other.isSetCodigoIbgeMunicipioNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipioNascimento, other.codigoIbgeMunicipioNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimentoCidadao()).compareTo(other.isSetDataNascimentoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimentoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimentoCidadao, other.dataNascimentoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomeMae()).compareTo(other.isSetDesconheceNomeMae());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomeMae()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomeMae, other.desconheceNomeMae);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailCidadao()).compareTo(other.isSetEmailCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailCidadao, other.emailCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNacionalidadeCidadao()).compareTo(other.isSetNacionalidadeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNacionalidadeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nacionalidadeCidadao, other.nacionalidadeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeCidadao()).compareTo(other.isSetNomeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeCidadao, other.nomeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeMaeCidadao()).compareTo(other.isSetNomeMaeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeMaeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeMaeCidadao, other.nomeMaeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsCidadao()).compareTo(other.isSetCnsCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCidadao, other.cnsCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsResponsavelFamiliar()).compareTo(other.isSetCnsResponsavelFamiliar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsResponsavelFamiliar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsResponsavelFamiliar, other.cnsResponsavelFamiliar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelefoneCelular()).compareTo(other.isSetTelefoneCelular());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelefoneCelular()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefoneCelular, other.telefoneCelular);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroNisPisPasep()).compareTo(other.isSetNumeroNisPisPasep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroNisPisPasep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroNisPisPasep, other.numeroNisPisPasep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaisNascimento()).compareTo(other.isSetPaisNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaisNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paisNascimento, other.paisNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRacaCorCidadao()).compareTo(other.isSetRacaCorCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRacaCorCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.racaCorCidadao, other.racaCorCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexoCidadao()).compareTo(other.isSetSexoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexoCidadao, other.sexoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusEhResponsavel()).compareTo(other.isSetStatusEhResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusEhResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusEhResponsavel, other.statusEhResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEtnia()).compareTo(other.isSetEtnia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEtnia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.etnia, other.etnia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomePaiCidadao()).compareTo(other.isSetNomePaiCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomePaiCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomePaiCidadao, other.nomePaiCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomePai()).compareTo(other.isSetDesconheceNomePai());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomePai()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomePai, other.desconheceNomePai);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtNaturalizacao()).compareTo(other.isSetDtNaturalizacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtNaturalizacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtNaturalizacao, other.dtNaturalizacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPortariaNaturalizacao()).compareTo(other.isSetPortariaNaturalizacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortariaNaturalizacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portariaNaturalizacao, other.portariaNaturalizacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtEntradaBrasil()).compareTo(other.isSetDtEntradaBrasil());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtEntradaBrasil()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtEntradaBrasil, other.dtEntradaBrasil);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMicroArea()).compareTo(other.isSetMicroArea());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMicroArea()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.microArea, other.microArea);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStForaArea()).compareTo(other.isSetStForaArea());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStForaArea()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stForaArea, other.stForaArea);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(other.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, other.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfResponsavelFamiliar()).compareTo(other.isSetCpfResponsavelFamiliar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfResponsavelFamiliar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfResponsavelFamiliar, other.cpfResponsavelFamiliar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("IdentificacaoUsuarioCidadaoThrift(");
    boolean first = true;

    if (isSetNomeSocial()) {
      sb.append("nomeSocial:");
      if (this.nomeSocial == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeSocial);
      }
      first = false;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipioNascimento:");
      if (this.codigoIbgeMunicipioNascimento == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipioNascimento);
      }
      first = false;
    }
    if (isSetDataNascimentoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimentoCidadao:");
      sb.append(this.dataNascimentoCidadao);
      first = false;
    }
    if (isSetDesconheceNomeMae()) {
      if (!first) sb.append(", ");
      sb.append("desconheceNomeMae:");
      sb.append(this.desconheceNomeMae);
      first = false;
    }
    if (isSetEmailCidadao()) {
      if (!first) sb.append(", ");
      sb.append("emailCidadao:");
      if (this.emailCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.emailCidadao);
      }
      first = false;
    }
    if (isSetNacionalidadeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nacionalidadeCidadao:");
      sb.append(this.nacionalidadeCidadao);
      first = false;
    }
    if (isSetNomeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeCidadao:");
      if (this.nomeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeCidadao);
      }
      first = false;
    }
    if (isSetNomeMaeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeMaeCidadao:");
      if (this.nomeMaeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeMaeCidadao);
      }
      first = false;
    }
    if (isSetCnsCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cnsCidadao:");
      if (this.cnsCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCidadao);
      }
      first = false;
    }
    if (isSetCnsResponsavelFamiliar()) {
      if (!first) sb.append(", ");
      sb.append("cnsResponsavelFamiliar:");
      if (this.cnsResponsavelFamiliar == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsResponsavelFamiliar);
      }
      first = false;
    }
    if (isSetTelefoneCelular()) {
      if (!first) sb.append(", ");
      sb.append("telefoneCelular:");
      if (this.telefoneCelular == null) {
        sb.append("null");
      } else {
        sb.append(this.telefoneCelular);
      }
      first = false;
    }
    if (isSetNumeroNisPisPasep()) {
      if (!first) sb.append(", ");
      sb.append("numeroNisPisPasep:");
      if (this.numeroNisPisPasep == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroNisPisPasep);
      }
      first = false;
    }
    if (isSetPaisNascimento()) {
      if (!first) sb.append(", ");
      sb.append("paisNascimento:");
      sb.append(this.paisNascimento);
      first = false;
    }
    if (isSetRacaCorCidadao()) {
      if (!first) sb.append(", ");
      sb.append("racaCorCidadao:");
      sb.append(this.racaCorCidadao);
      first = false;
    }
    if (isSetSexoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("sexoCidadao:");
      sb.append(this.sexoCidadao);
      first = false;
    }
    if (isSetStatusEhResponsavel()) {
      if (!first) sb.append(", ");
      sb.append("statusEhResponsavel:");
      sb.append(this.statusEhResponsavel);
      first = false;
    }
    if (isSetEtnia()) {
      if (!first) sb.append(", ");
      sb.append("etnia:");
      sb.append(this.etnia);
      first = false;
    }
    if (isSetNomePaiCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomePaiCidadao:");
      if (this.nomePaiCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomePaiCidadao);
      }
      first = false;
    }
    if (isSetDesconheceNomePai()) {
      if (!first) sb.append(", ");
      sb.append("desconheceNomePai:");
      sb.append(this.desconheceNomePai);
      first = false;
    }
    if (isSetDtNaturalizacao()) {
      if (!first) sb.append(", ");
      sb.append("dtNaturalizacao:");
      sb.append(this.dtNaturalizacao);
      first = false;
    }
    if (isSetPortariaNaturalizacao()) {
      if (!first) sb.append(", ");
      sb.append("portariaNaturalizacao:");
      if (this.portariaNaturalizacao == null) {
        sb.append("null");
      } else {
        sb.append(this.portariaNaturalizacao);
      }
      first = false;
    }
    if (isSetDtEntradaBrasil()) {
      if (!first) sb.append(", ");
      sb.append("dtEntradaBrasil:");
      sb.append(this.dtEntradaBrasil);
      first = false;
    }
    if (isSetMicroArea()) {
      if (!first) sb.append(", ");
      sb.append("microArea:");
      if (this.microArea == null) {
        sb.append("null");
      } else {
        sb.append(this.microArea);
      }
      first = false;
    }
    if (isSetStForaArea()) {
      if (!first) sb.append(", ");
      sb.append("stForaArea:");
      sb.append(this.stForaArea);
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    if (isSetCpfResponsavelFamiliar()) {
      if (!first) sb.append(", ");
      sb.append("cpfResponsavelFamiliar:");
      if (this.cpfResponsavelFamiliar == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfResponsavelFamiliar);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class IdentificacaoUsuarioCidadaoThriftStandardSchemeFactory implements SchemeFactory {
    public IdentificacaoUsuarioCidadaoThriftStandardScheme getScheme() {
      return new IdentificacaoUsuarioCidadaoThriftStandardScheme();
    }
  }

  private static class IdentificacaoUsuarioCidadaoThriftStandardScheme extends StandardScheme<IdentificacaoUsuarioCidadaoThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NOME_SOCIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeSocial = iprot.readString();
              struct.setNomeSocialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipioNascimento = iprot.readString();
              struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATA_NASCIMENTO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimentoCidadao = iprot.readI64();
              struct.setDataNascimentoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DESCONHECE_NOME_MAE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomeMae = iprot.readBool();
              struct.setDesconheceNomeMaeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMAIL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailCidadao = iprot.readString();
              struct.setEmailCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NACIONALIDADE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nacionalidadeCidadao = iprot.readI64();
              struct.setNacionalidadeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NOME_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeCidadao = iprot.readString();
              struct.setNomeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NOME_MAE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeMaeCidadao = iprot.readString();
              struct.setNomeMaeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CNS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCidadao = iprot.readString();
              struct.setCnsCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CNS_RESPONSAVEL_FAMILIAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsResponsavelFamiliar = iprot.readString();
              struct.setCnsResponsavelFamiliarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // TELEFONE_CELULAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telefoneCelular = iprot.readString();
              struct.setTelefoneCelularIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // NUMERO_NIS_PIS_PASEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroNisPisPasep = iprot.readString();
              struct.setNumeroNisPisPasepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PAIS_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paisNascimento = iprot.readI64();
              struct.setPaisNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RACA_COR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.racaCorCidadao = iprot.readI64();
              struct.setRacaCorCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SEXO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexoCidadao = iprot.readI64();
              struct.setSexoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STATUS_EH_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusEhResponsavel = iprot.readBool();
              struct.setStatusEhResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ETNIA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.etnia = iprot.readI64();
              struct.setEtniaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // NOME_PAI_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomePaiCidadao = iprot.readString();
              struct.setNomePaiCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // DESCONHECE_NOME_PAI
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomePai = iprot.readBool();
              struct.setDesconheceNomePaiIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // DT_NATURALIZACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtNaturalizacao = iprot.readI64();
              struct.setDtNaturalizacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PORTARIA_NATURALIZACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.portariaNaturalizacao = iprot.readString();
              struct.setPortariaNaturalizacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DT_ENTRADA_BRASIL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtEntradaBrasil = iprot.readI64();
              struct.setDtEntradaBrasilIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // MICRO_AREA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.microArea = iprot.readString();
              struct.setMicroAreaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // ST_FORA_AREA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stForaArea = iprot.readBool();
              struct.setStForaAreaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // CPF_RESPONSAVEL_FAMILIAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfResponsavelFamiliar = iprot.readString();
              struct.setCpfResponsavelFamiliarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.nomeSocial != null) {
        if (struct.isSetNomeSocial()) {
          oprot.writeFieldBegin(NOME_SOCIAL_FIELD_DESC);
          oprot.writeString(struct.nomeSocial);
          oprot.writeFieldEnd();
        }
      }
      if (struct.codigoIbgeMunicipioNascimento != null) {
        if (struct.isSetCodigoIbgeMunicipioNascimento()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipioNascimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimentoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeFieldBegin(DESCONHECE_NOME_MAE_FIELD_DESC);
        oprot.writeBool(struct.desconheceNomeMae);
        oprot.writeFieldEnd();
      }
      if (struct.emailCidadao != null) {
        if (struct.isSetEmailCidadao()) {
          oprot.writeFieldBegin(EMAIL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.emailCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNacionalidadeCidadao()) {
        oprot.writeFieldBegin(NACIONALIDADE_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.nacionalidadeCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.nomeCidadao != null) {
        if (struct.isSetNomeCidadao()) {
          oprot.writeFieldBegin(NOME_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeMaeCidadao != null) {
        if (struct.isSetNomeMaeCidadao()) {
          oprot.writeFieldBegin(NOME_MAE_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeMaeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cnsCidadao != null) {
        if (struct.isSetCnsCidadao()) {
          oprot.writeFieldBegin(CNS_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cnsCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cnsResponsavelFamiliar != null) {
        if (struct.isSetCnsResponsavelFamiliar()) {
          oprot.writeFieldBegin(CNS_RESPONSAVEL_FAMILIAR_FIELD_DESC);
          oprot.writeString(struct.cnsResponsavelFamiliar);
          oprot.writeFieldEnd();
        }
      }
      if (struct.telefoneCelular != null) {
        if (struct.isSetTelefoneCelular()) {
          oprot.writeFieldBegin(TELEFONE_CELULAR_FIELD_DESC);
          oprot.writeString(struct.telefoneCelular);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroNisPisPasep != null) {
        if (struct.isSetNumeroNisPisPasep()) {
          oprot.writeFieldBegin(NUMERO_NIS_PIS_PASEP_FIELD_DESC);
          oprot.writeString(struct.numeroNisPisPasep);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPaisNascimento()) {
        oprot.writeFieldBegin(PAIS_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.paisNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeFieldBegin(RACA_COR_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.racaCorCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeFieldBegin(SEXO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.sexoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusEhResponsavel()) {
        oprot.writeFieldBegin(STATUS_EH_RESPONSAVEL_FIELD_DESC);
        oprot.writeBool(struct.statusEhResponsavel);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEtnia()) {
        oprot.writeFieldBegin(ETNIA_FIELD_DESC);
        oprot.writeI64(struct.etnia);
        oprot.writeFieldEnd();
      }
      if (struct.nomePaiCidadao != null) {
        if (struct.isSetNomePaiCidadao()) {
          oprot.writeFieldBegin(NOME_PAI_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomePaiCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDesconheceNomePai()) {
        oprot.writeFieldBegin(DESCONHECE_NOME_PAI_FIELD_DESC);
        oprot.writeBool(struct.desconheceNomePai);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDtNaturalizacao()) {
        oprot.writeFieldBegin(DT_NATURALIZACAO_FIELD_DESC);
        oprot.writeI64(struct.dtNaturalizacao);
        oprot.writeFieldEnd();
      }
      if (struct.portariaNaturalizacao != null) {
        if (struct.isSetPortariaNaturalizacao()) {
          oprot.writeFieldBegin(PORTARIA_NATURALIZACAO_FIELD_DESC);
          oprot.writeString(struct.portariaNaturalizacao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDtEntradaBrasil()) {
        oprot.writeFieldBegin(DT_ENTRADA_BRASIL_FIELD_DESC);
        oprot.writeI64(struct.dtEntradaBrasil);
        oprot.writeFieldEnd();
      }
      if (struct.microArea != null) {
        if (struct.isSetMicroArea()) {
          oprot.writeFieldBegin(MICRO_AREA_FIELD_DESC);
          oprot.writeString(struct.microArea);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStForaArea()) {
        oprot.writeFieldBegin(ST_FORA_AREA_FIELD_DESC);
        oprot.writeBool(struct.stForaArea);
        oprot.writeFieldEnd();
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cpfResponsavelFamiliar != null) {
        if (struct.isSetCpfResponsavelFamiliar()) {
          oprot.writeFieldBegin(CPF_RESPONSAVEL_FAMILIAR_FIELD_DESC);
          oprot.writeString(struct.cpfResponsavelFamiliar);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class IdentificacaoUsuarioCidadaoThriftTupleSchemeFactory implements SchemeFactory {
    public IdentificacaoUsuarioCidadaoThriftTupleScheme getScheme() {
      return new IdentificacaoUsuarioCidadaoThriftTupleScheme();
    }
  }

  private static class IdentificacaoUsuarioCidadaoThriftTupleScheme extends TupleScheme<IdentificacaoUsuarioCidadaoThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetNomeSocial()) {
        optionals.set(0);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        optionals.set(1);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        optionals.set(2);
      }
      if (struct.isSetDesconheceNomeMae()) {
        optionals.set(3);
      }
      if (struct.isSetEmailCidadao()) {
        optionals.set(4);
      }
      if (struct.isSetNacionalidadeCidadao()) {
        optionals.set(5);
      }
      if (struct.isSetNomeCidadao()) {
        optionals.set(6);
      }
      if (struct.isSetNomeMaeCidadao()) {
        optionals.set(7);
      }
      if (struct.isSetCnsCidadao()) {
        optionals.set(8);
      }
      if (struct.isSetCnsResponsavelFamiliar()) {
        optionals.set(9);
      }
      if (struct.isSetTelefoneCelular()) {
        optionals.set(10);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        optionals.set(11);
      }
      if (struct.isSetPaisNascimento()) {
        optionals.set(12);
      }
      if (struct.isSetRacaCorCidadao()) {
        optionals.set(13);
      }
      if (struct.isSetSexoCidadao()) {
        optionals.set(14);
      }
      if (struct.isSetStatusEhResponsavel()) {
        optionals.set(15);
      }
      if (struct.isSetEtnia()) {
        optionals.set(16);
      }
      if (struct.isSetNomePaiCidadao()) {
        optionals.set(17);
      }
      if (struct.isSetDesconheceNomePai()) {
        optionals.set(18);
      }
      if (struct.isSetDtNaturalizacao()) {
        optionals.set(19);
      }
      if (struct.isSetPortariaNaturalizacao()) {
        optionals.set(20);
      }
      if (struct.isSetDtEntradaBrasil()) {
        optionals.set(21);
      }
      if (struct.isSetMicroArea()) {
        optionals.set(22);
      }
      if (struct.isSetStForaArea()) {
        optionals.set(23);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(24);
      }
      if (struct.isSetCpfResponsavelFamiliar()) {
        optionals.set(25);
      }
      oprot.writeBitSet(optionals, 26);
      if (struct.isSetNomeSocial()) {
        oprot.writeString(struct.nomeSocial);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        oprot.writeString(struct.codigoIbgeMunicipioNascimento);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeI64(struct.dataNascimentoCidadao);
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeBool(struct.desconheceNomeMae);
      }
      if (struct.isSetEmailCidadao()) {
        oprot.writeString(struct.emailCidadao);
      }
      if (struct.isSetNacionalidadeCidadao()) {
        oprot.writeI64(struct.nacionalidadeCidadao);
      }
      if (struct.isSetNomeCidadao()) {
        oprot.writeString(struct.nomeCidadao);
      }
      if (struct.isSetNomeMaeCidadao()) {
        oprot.writeString(struct.nomeMaeCidadao);
      }
      if (struct.isSetCnsCidadao()) {
        oprot.writeString(struct.cnsCidadao);
      }
      if (struct.isSetCnsResponsavelFamiliar()) {
        oprot.writeString(struct.cnsResponsavelFamiliar);
      }
      if (struct.isSetTelefoneCelular()) {
        oprot.writeString(struct.telefoneCelular);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        oprot.writeString(struct.numeroNisPisPasep);
      }
      if (struct.isSetPaisNascimento()) {
        oprot.writeI64(struct.paisNascimento);
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeI64(struct.racaCorCidadao);
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeI64(struct.sexoCidadao);
      }
      if (struct.isSetStatusEhResponsavel()) {
        oprot.writeBool(struct.statusEhResponsavel);
      }
      if (struct.isSetEtnia()) {
        oprot.writeI64(struct.etnia);
      }
      if (struct.isSetNomePaiCidadao()) {
        oprot.writeString(struct.nomePaiCidadao);
      }
      if (struct.isSetDesconheceNomePai()) {
        oprot.writeBool(struct.desconheceNomePai);
      }
      if (struct.isSetDtNaturalizacao()) {
        oprot.writeI64(struct.dtNaturalizacao);
      }
      if (struct.isSetPortariaNaturalizacao()) {
        oprot.writeString(struct.portariaNaturalizacao);
      }
      if (struct.isSetDtEntradaBrasil()) {
        oprot.writeI64(struct.dtEntradaBrasil);
      }
      if (struct.isSetMicroArea()) {
        oprot.writeString(struct.microArea);
      }
      if (struct.isSetStForaArea()) {
        oprot.writeBool(struct.stForaArea);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
      if (struct.isSetCpfResponsavelFamiliar()) {
        oprot.writeString(struct.cpfResponsavelFamiliar);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(26);
      if (incoming.get(0)) {
        struct.nomeSocial = iprot.readString();
        struct.setNomeSocialIsSet(true);
      }
      if (incoming.get(1)) {
        struct.codigoIbgeMunicipioNascimento = iprot.readString();
        struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dataNascimentoCidadao = iprot.readI64();
        struct.setDataNascimentoCidadaoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.desconheceNomeMae = iprot.readBool();
        struct.setDesconheceNomeMaeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.emailCidadao = iprot.readString();
        struct.setEmailCidadaoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.nacionalidadeCidadao = iprot.readI64();
        struct.setNacionalidadeCidadaoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.nomeCidadao = iprot.readString();
        struct.setNomeCidadaoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nomeMaeCidadao = iprot.readString();
        struct.setNomeMaeCidadaoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cnsCidadao = iprot.readString();
        struct.setCnsCidadaoIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cnsResponsavelFamiliar = iprot.readString();
        struct.setCnsResponsavelFamiliarIsSet(true);
      }
      if (incoming.get(10)) {
        struct.telefoneCelular = iprot.readString();
        struct.setTelefoneCelularIsSet(true);
      }
      if (incoming.get(11)) {
        struct.numeroNisPisPasep = iprot.readString();
        struct.setNumeroNisPisPasepIsSet(true);
      }
      if (incoming.get(12)) {
        struct.paisNascimento = iprot.readI64();
        struct.setPaisNascimentoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.racaCorCidadao = iprot.readI64();
        struct.setRacaCorCidadaoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.sexoCidadao = iprot.readI64();
        struct.setSexoCidadaoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.statusEhResponsavel = iprot.readBool();
        struct.setStatusEhResponsavelIsSet(true);
      }
      if (incoming.get(16)) {
        struct.etnia = iprot.readI64();
        struct.setEtniaIsSet(true);
      }
      if (incoming.get(17)) {
        struct.nomePaiCidadao = iprot.readString();
        struct.setNomePaiCidadaoIsSet(true);
      }
      if (incoming.get(18)) {
        struct.desconheceNomePai = iprot.readBool();
        struct.setDesconheceNomePaiIsSet(true);
      }
      if (incoming.get(19)) {
        struct.dtNaturalizacao = iprot.readI64();
        struct.setDtNaturalizacaoIsSet(true);
      }
      if (incoming.get(20)) {
        struct.portariaNaturalizacao = iprot.readString();
        struct.setPortariaNaturalizacaoIsSet(true);
      }
      if (incoming.get(21)) {
        struct.dtEntradaBrasil = iprot.readI64();
        struct.setDtEntradaBrasilIsSet(true);
      }
      if (incoming.get(22)) {
        struct.microArea = iprot.readString();
        struct.setMicroAreaIsSet(true);
      }
      if (incoming.get(23)) {
        struct.stForaArea = iprot.readBool();
        struct.setStForaAreaIsSet(true);
      }
      if (incoming.get(24)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
      if (incoming.get(25)) {
        struct.cpfResponsavelFamiliar = iprot.readString();
        struct.setCpfResponsavelFamiliarIsSet(true);
      }
    }
  }

}

