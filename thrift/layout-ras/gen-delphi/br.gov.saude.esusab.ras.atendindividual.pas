(**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esusab.ras.atendindividual;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esusab.ras.common;

const
  cbr_gov_saude_esusab_ras_atendindividual_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esusab_ras_atendindividual_Option_Register_Types = False;
  cbr_gov_saude_esusab_ras_atendindividual_Option_ConstPrefix    = False;
  cbr_gov_saude_esusab_ras_atendindividual_Option_Events         = False;
  cbr_gov_saude_esusab_ras_atendindividual_Option_XmlDoc         = False;

type
  IExameThrift = interface;
  IProblemaCondicaoAvaliacaoAIThrift = interface;
  IFichaAtendimentoIndividualChildThrift = interface;
  IFichaAtendimentoIndividualMasterThrift = interface;

  IExameThrift = interface(IBase)
    function GetCodigoExame: string;
    procedure SetCodigoExame( const Value: string);
    function GetSolicitadoAvaliado: IThriftList<string>;
    procedure SetSolicitadoAvaliado( const Value: IThriftList<string>);

    property CodigoExame: string read GetCodigoExame write SetCodigoExame;
    property SolicitadoAvaliado: IThriftList<string> read GetSolicitadoAvaliado write SetSolicitadoAvaliado;

    function Get__isset_CodigoExame: Boolean;
    function Get__isset_SolicitadoAvaliado: Boolean;

    property __isset_CodigoExame: Boolean read Get__isset_CodigoExame;
    property __isset_SolicitadoAvaliado: Boolean read Get__isset_SolicitadoAvaliado;
  end;

  TExameThriftImpl = class(TInterfacedObject, IBase, IExameThrift)
  private
    FCodigoExame: string;
    FSolicitadoAvaliado: IThriftList<string>;
    
    F__isset_CodigoExame: Boolean;
    F__isset_SolicitadoAvaliado: Boolean;
    
    function GetCodigoExame: string;
    procedure SetCodigoExame( const Value: string);
    function GetSolicitadoAvaliado: IThriftList<string>;
    procedure SetSolicitadoAvaliado( const Value: IThriftList<string>);

    function Get__isset_CodigoExame: Boolean;
    function Get__isset_SolicitadoAvaliado: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property CodigoExame: string read GetCodigoExame write SetCodigoExame;
    property SolicitadoAvaliado: IThriftList<string> read GetSolicitadoAvaliado write SetSolicitadoAvaliado;

    // isset
    property __isset_CodigoExame: Boolean read Get__isset_CodigoExame;
    property __isset_SolicitadoAvaliado: Boolean read Get__isset_SolicitadoAvaliado;
  end;

  IProblemaCondicaoAvaliacaoAIThrift = interface(IBase)
    function GetCiaps: IThriftList<string>;
    procedure SetCiaps( const Value: IThriftList<string>);
    function GetOutroCiap1: string;
    procedure SetOutroCiap1( const Value: string);
    function GetOutroCiap2: string;
    procedure SetOutroCiap2( const Value: string);
    function GetCid10: string;
    procedure SetCid10( const Value: string);
    function GetCid10_2: string;
    procedure SetCid10_2( const Value: string);

    property Ciaps: IThriftList<string> read GetCiaps write SetCiaps;
    property OutroCiap1: string read GetOutroCiap1 write SetOutroCiap1;
    property OutroCiap2: string read GetOutroCiap2 write SetOutroCiap2;
    property Cid10: string read GetCid10 write SetCid10;
    property Cid10_2: string read GetCid10_2 write SetCid10_2;

    function Get__isset_Ciaps: Boolean;
    function Get__isset_OutroCiap1: Boolean;
    function Get__isset_OutroCiap2: Boolean;
    function Get__isset_Cid10: Boolean;
    function Get__isset_Cid10_2: Boolean;

    property __isset_Ciaps: Boolean read Get__isset_Ciaps;
    property __isset_OutroCiap1: Boolean read Get__isset_OutroCiap1;
    property __isset_OutroCiap2: Boolean read Get__isset_OutroCiap2;
    property __isset_Cid10: Boolean read Get__isset_Cid10;
    property __isset_Cid10_2: Boolean read Get__isset_Cid10_2;
  end;

  TProblemaCondicaoAvaliacaoAIThriftImpl = class(TInterfacedObject, IBase, IProblemaCondicaoAvaliacaoAIThrift)
  private
    FCiaps: IThriftList<string>;
    FOutroCiap1: string;
    FOutroCiap2: string;
    FCid10: string;
    FCid10_2: string;
    
    F__isset_Ciaps: Boolean;
    F__isset_OutroCiap1: Boolean;
    F__isset_OutroCiap2: Boolean;
    F__isset_Cid10: Boolean;
    F__isset_Cid10_2: Boolean;
    
    function GetCiaps: IThriftList<string>;
    procedure SetCiaps( const Value: IThriftList<string>);
    function GetOutroCiap1: string;
    procedure SetOutroCiap1( const Value: string);
    function GetOutroCiap2: string;
    procedure SetOutroCiap2( const Value: string);
    function GetCid10: string;
    procedure SetCid10( const Value: string);
    function GetCid10_2: string;
    procedure SetCid10_2( const Value: string);

    function Get__isset_Ciaps: Boolean;
    function Get__isset_OutroCiap1: Boolean;
    function Get__isset_OutroCiap2: Boolean;
    function Get__isset_Cid10: Boolean;
    function Get__isset_Cid10_2: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Ciaps: IThriftList<string> read GetCiaps write SetCiaps;
    property OutroCiap1: string read GetOutroCiap1 write SetOutroCiap1;
    property OutroCiap2: string read GetOutroCiap2 write SetOutroCiap2;
    property Cid10: string read GetCid10 write SetCid10;
    property Cid10_2: string read GetCid10_2 write SetCid10_2;

    // isset
    property __isset_Ciaps: Boolean read Get__isset_Ciaps;
    property __isset_OutroCiap1: Boolean read Get__isset_OutroCiap1;
    property __isset_OutroCiap2: Boolean read Get__isset_OutroCiap2;
    property __isset_Cid10: Boolean read Get__isset_Cid10;
    property __isset_Cid10_2: Boolean read Get__isset_Cid10_2;
  end;

  IFichaAtendimentoIndividualChildThrift = interface(IBase)
    function GetNumeroProntuario: string;
    procedure SetNumeroProntuario( const Value: string);
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetLocalDeAtendimento: Int64;
    procedure SetLocalDeAtendimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetTipoAtendimento: Int64;
    procedure SetTipoAtendimento( const Value: Int64);
    function GetPesoAcompanhamentoNutricional: Double;
    procedure SetPesoAcompanhamentoNutricional( const Value: Double);
    function GetAlturaAcompanhamentoNutricional: Double;
    procedure SetAlturaAcompanhamentoNutricional( const Value: Double);
    function GetAleitamentoMaterno: Int64;
    procedure SetAleitamentoMaterno( const Value: Int64);
    function GetDumDaGestante: Int64;
    procedure SetDumDaGestante( const Value: Int64);
    function GetIdadeGestacional: Integer;
    procedure SetIdadeGestacional( const Value: Integer);
    function GetAtencaoDomiciliarModalidade: Int64;
    procedure SetAtencaoDomiciliarModalidade( const Value: Int64);
    function GetProblemaCondicaoAvaliada: IProblemaCondicaoAvaliacaoAIThrift;
    procedure SetProblemaCondicaoAvaliada( const Value: IProblemaCondicaoAvaliacaoAIThrift);
    function GetExame: IThriftList<IExameThrift>;
    procedure SetExame( const Value: IThriftList<IExameThrift>);
    function GetVacinaEmDia: Boolean;
    procedure SetVacinaEmDia( const Value: Boolean);
    function GetPic: Int64;
    procedure SetPic( const Value: Int64);
    function GetFicouEmObservacao: Boolean;
    procedure SetFicouEmObservacao( const Value: Boolean);
    function GetNasfs: IThriftList<Int64>;
    procedure SetNasfs( const Value: IThriftList<Int64>);
    function GetCondutas: IThriftList<Int64>;
    procedure SetCondutas( const Value: IThriftList<Int64>);
    function GetStGravidezPlanejada: Boolean;
    procedure SetStGravidezPlanejada( const Value: Boolean);
    function GetNuGestasPrevias: Integer;
    procedure SetNuGestasPrevias( const Value: Integer);
    function GetNuPartos: Integer;
    procedure SetNuPartos( const Value: Integer);
    function GetRacionalidadeSaude: Int64;
    procedure SetRacionalidadeSaude( const Value: Int64);
    function GetPerimetroCefalico: Double;
    procedure SetPerimetroCefalico( const Value: Double);
    function GetDataHoraInicialAtendimento: Int64;
    procedure SetDataHoraInicialAtendimento( const Value: Int64);
    function GetDataHoraFinalAtendimento: Int64;
    procedure SetDataHoraFinalAtendimento( const Value: Int64);
    function GetCpfCidadao: string;
    procedure SetCpfCidadao( const Value: string);
    function GetMedicamentos: IThriftList<IMedicamentoThrift>;
    procedure SetMedicamentos( const Value: IThriftList<IMedicamentoThrift>);
    function GetEncaminhamentos: IThriftList<IEncaminhamentoExternoThrift>;
    procedure SetEncaminhamentos( const Value: IThriftList<IEncaminhamentoExternoThrift>);
    function GetResultadosExames: IThriftList<IResultadosExameThrift>;
    procedure SetResultadosExames( const Value: IThriftList<IResultadosExameThrift>);
    function GetUuidRnds: string;
    procedure SetUuidRnds( const Value: string);
    function GetFinalizadorObservacao: ILotacaoHeaderThrift;
    procedure SetFinalizadorObservacao( const Value: ILotacaoHeaderThrift);
    function GetTipoParticipacaoCidadao: Int64;
    procedure SetTipoParticipacaoCidadao( const Value: Int64);
    function GetTipoParticipacaoProfissionalConvidado: Int64;
    procedure SetTipoParticipacaoProfissionalConvidado( const Value: Int64);
    function GetEmultis: IThriftList<Int64>;
    procedure SetEmultis( const Value: IThriftList<Int64>);
    function GetMedicoes: IMedicoesThrift;
    procedure SetMedicoes( const Value: IMedicoesThrift);

    property NumeroProntuario: string read GetNumeroProntuario write SetNumeroProntuario;
    property Cns: string read GetCns write SetCns;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property LocalDeAtendimento: Int64 read GetLocalDeAtendimento write SetLocalDeAtendimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property Turno: Int64 read GetTurno write SetTurno;
    property TipoAtendimento: Int64 read GetTipoAtendimento write SetTipoAtendimento;
    property PesoAcompanhamentoNutricional: Double read GetPesoAcompanhamentoNutricional write SetPesoAcompanhamentoNutricional;
    property AlturaAcompanhamentoNutricional: Double read GetAlturaAcompanhamentoNutricional write SetAlturaAcompanhamentoNutricional;
    property AleitamentoMaterno: Int64 read GetAleitamentoMaterno write SetAleitamentoMaterno;
    property DumDaGestante: Int64 read GetDumDaGestante write SetDumDaGestante;
    property IdadeGestacional: Integer read GetIdadeGestacional write SetIdadeGestacional;
    property AtencaoDomiciliarModalidade: Int64 read GetAtencaoDomiciliarModalidade write SetAtencaoDomiciliarModalidade;
    property ProblemaCondicaoAvaliada: IProblemaCondicaoAvaliacaoAIThrift read GetProblemaCondicaoAvaliada write SetProblemaCondicaoAvaliada;
    property Exame: IThriftList<IExameThrift> read GetExame write SetExame;
    property VacinaEmDia: Boolean read GetVacinaEmDia write SetVacinaEmDia;
    property Pic: Int64 read GetPic write SetPic;
    property FicouEmObservacao: Boolean read GetFicouEmObservacao write SetFicouEmObservacao;
    property Nasfs: IThriftList<Int64> read GetNasfs write SetNasfs;
    property Condutas: IThriftList<Int64> read GetCondutas write SetCondutas;
    property StGravidezPlanejada: Boolean read GetStGravidezPlanejada write SetStGravidezPlanejada;
    property NuGestasPrevias: Integer read GetNuGestasPrevias write SetNuGestasPrevias;
    property NuPartos: Integer read GetNuPartos write SetNuPartos;
    property RacionalidadeSaude: Int64 read GetRacionalidadeSaude write SetRacionalidadeSaude;
    property PerimetroCefalico: Double read GetPerimetroCefalico write SetPerimetroCefalico;
    property DataHoraInicialAtendimento: Int64 read GetDataHoraInicialAtendimento write SetDataHoraInicialAtendimento;
    property DataHoraFinalAtendimento: Int64 read GetDataHoraFinalAtendimento write SetDataHoraFinalAtendimento;
    property CpfCidadao: string read GetCpfCidadao write SetCpfCidadao;
    property Medicamentos: IThriftList<IMedicamentoThrift> read GetMedicamentos write SetMedicamentos;
    property Encaminhamentos: IThriftList<IEncaminhamentoExternoThrift> read GetEncaminhamentos write SetEncaminhamentos;
    property ResultadosExames: IThriftList<IResultadosExameThrift> read GetResultadosExames write SetResultadosExames;
    property UuidRnds: string read GetUuidRnds write SetUuidRnds;
    property FinalizadorObservacao: ILotacaoHeaderThrift read GetFinalizadorObservacao write SetFinalizadorObservacao;
    property TipoParticipacaoCidadao: Int64 read GetTipoParticipacaoCidadao write SetTipoParticipacaoCidadao;
    property TipoParticipacaoProfissionalConvidado: Int64 read GetTipoParticipacaoProfissionalConvidado write SetTipoParticipacaoProfissionalConvidado;
    property Emultis: IThriftList<Int64> read GetEmultis write SetEmultis;
    property Medicoes: IMedicoesThrift read GetMedicoes write SetMedicoes;

    function Get__isset_NumeroProntuario: Boolean;
    function Get__isset_Cns: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_LocalDeAtendimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_Turno: Boolean;
    function Get__isset_TipoAtendimento: Boolean;
    function Get__isset_PesoAcompanhamentoNutricional: Boolean;
    function Get__isset_AlturaAcompanhamentoNutricional: Boolean;
    function Get__isset_AleitamentoMaterno: Boolean;
    function Get__isset_DumDaGestante: Boolean;
    function Get__isset_IdadeGestacional: Boolean;
    function Get__isset_AtencaoDomiciliarModalidade: Boolean;
    function Get__isset_ProblemaCondicaoAvaliada: Boolean;
    function Get__isset_Exame: Boolean;
    function Get__isset_VacinaEmDia: Boolean;
    function Get__isset_Pic: Boolean;
    function Get__isset_FicouEmObservacao: Boolean;
    function Get__isset_Nasfs: Boolean;
    function Get__isset_Condutas: Boolean;
    function Get__isset_StGravidezPlanejada: Boolean;
    function Get__isset_NuGestasPrevias: Boolean;
    function Get__isset_NuPartos: Boolean;
    function Get__isset_RacionalidadeSaude: Boolean;
    function Get__isset_PerimetroCefalico: Boolean;
    function Get__isset_DataHoraInicialAtendimento: Boolean;
    function Get__isset_DataHoraFinalAtendimento: Boolean;
    function Get__isset_CpfCidadao: Boolean;
    function Get__isset_Medicamentos: Boolean;
    function Get__isset_Encaminhamentos: Boolean;
    function Get__isset_ResultadosExames: Boolean;
    function Get__isset_UuidRnds: Boolean;
    function Get__isset_FinalizadorObservacao: Boolean;
    function Get__isset_TipoParticipacaoCidadao: Boolean;
    function Get__isset_TipoParticipacaoProfissionalConvidado: Boolean;
    function Get__isset_Emultis: Boolean;
    function Get__isset_Medicoes: Boolean;

    property __isset_NumeroProntuario: Boolean read Get__isset_NumeroProntuario;
    property __isset_Cns: Boolean read Get__isset_Cns;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_LocalDeAtendimento: Boolean read Get__isset_LocalDeAtendimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_TipoAtendimento: Boolean read Get__isset_TipoAtendimento;
    property __isset_PesoAcompanhamentoNutricional: Boolean read Get__isset_PesoAcompanhamentoNutricional;
    property __isset_AlturaAcompanhamentoNutricional: Boolean read Get__isset_AlturaAcompanhamentoNutricional;
    property __isset_AleitamentoMaterno: Boolean read Get__isset_AleitamentoMaterno;
    property __isset_DumDaGestante: Boolean read Get__isset_DumDaGestante;
    property __isset_IdadeGestacional: Boolean read Get__isset_IdadeGestacional;
    property __isset_AtencaoDomiciliarModalidade: Boolean read Get__isset_AtencaoDomiciliarModalidade;
    property __isset_ProblemaCondicaoAvaliada: Boolean read Get__isset_ProblemaCondicaoAvaliada;
    property __isset_Exame: Boolean read Get__isset_Exame;
    property __isset_VacinaEmDia: Boolean read Get__isset_VacinaEmDia;
    property __isset_Pic: Boolean read Get__isset_Pic;
    property __isset_FicouEmObservacao: Boolean read Get__isset_FicouEmObservacao;
    property __isset_Nasfs: Boolean read Get__isset_Nasfs;
    property __isset_Condutas: Boolean read Get__isset_Condutas;
    property __isset_StGravidezPlanejada: Boolean read Get__isset_StGravidezPlanejada;
    property __isset_NuGestasPrevias: Boolean read Get__isset_NuGestasPrevias;
    property __isset_NuPartos: Boolean read Get__isset_NuPartos;
    property __isset_RacionalidadeSaude: Boolean read Get__isset_RacionalidadeSaude;
    property __isset_PerimetroCefalico: Boolean read Get__isset_PerimetroCefalico;
    property __isset_DataHoraInicialAtendimento: Boolean read Get__isset_DataHoraInicialAtendimento;
    property __isset_DataHoraFinalAtendimento: Boolean read Get__isset_DataHoraFinalAtendimento;
    property __isset_CpfCidadao: Boolean read Get__isset_CpfCidadao;
    property __isset_Medicamentos: Boolean read Get__isset_Medicamentos;
    property __isset_Encaminhamentos: Boolean read Get__isset_Encaminhamentos;
    property __isset_ResultadosExames: Boolean read Get__isset_ResultadosExames;
    property __isset_UuidRnds: Boolean read Get__isset_UuidRnds;
    property __isset_FinalizadorObservacao: Boolean read Get__isset_FinalizadorObservacao;
    property __isset_TipoParticipacaoCidadao: Boolean read Get__isset_TipoParticipacaoCidadao;
    property __isset_TipoParticipacaoProfissionalConvidado: Boolean read Get__isset_TipoParticipacaoProfissionalConvidado;
    property __isset_Emultis: Boolean read Get__isset_Emultis;
    property __isset_Medicoes: Boolean read Get__isset_Medicoes;
  end;

  TFichaAtendimentoIndividualChildThriftImpl = class(TInterfacedObject, IBase, IFichaAtendimentoIndividualChildThrift)
  private
    FNumeroProntuario: string;
    FCns: string;
    FDataNascimento: Int64;
    FLocalDeAtendimento: Int64;
    FSexo: Int64;
    FTurno: Int64;
    FTipoAtendimento: Int64;
    FPesoAcompanhamentoNutricional: Double;
    FAlturaAcompanhamentoNutricional: Double;
    FAleitamentoMaterno: Int64;
    FDumDaGestante: Int64;
    FIdadeGestacional: Integer;
    FAtencaoDomiciliarModalidade: Int64;
    FProblemaCondicaoAvaliada: IProblemaCondicaoAvaliacaoAIThrift;
    FExame: IThriftList<IExameThrift>;
    FVacinaEmDia: Boolean;
    FPic: Int64;
    FFicouEmObservacao: Boolean;
    FNasfs: IThriftList<Int64>;
    FCondutas: IThriftList<Int64>;
    FStGravidezPlanejada: Boolean;
    FNuGestasPrevias: Integer;
    FNuPartos: Integer;
    FRacionalidadeSaude: Int64;
    FPerimetroCefalico: Double;
    FDataHoraInicialAtendimento: Int64;
    FDataHoraFinalAtendimento: Int64;
    FCpfCidadao: string;
    FMedicamentos: IThriftList<IMedicamentoThrift>;
    FEncaminhamentos: IThriftList<IEncaminhamentoExternoThrift>;
    FResultadosExames: IThriftList<IResultadosExameThrift>;
    FUuidRnds: string;
    FFinalizadorObservacao: ILotacaoHeaderThrift;
    FTipoParticipacaoCidadao: Int64;
    FTipoParticipacaoProfissionalConvidado: Int64;
    FEmultis: IThriftList<Int64>;
    FMedicoes: IMedicoesThrift;
    
    F__isset_NumeroProntuario: Boolean;
    F__isset_Cns: Boolean;
    F__isset_DataNascimento: Boolean;
    F__isset_LocalDeAtendimento: Boolean;
    F__isset_Sexo: Boolean;
    F__isset_Turno: Boolean;
    F__isset_TipoAtendimento: Boolean;
    F__isset_PesoAcompanhamentoNutricional: Boolean;
    F__isset_AlturaAcompanhamentoNutricional: Boolean;
    F__isset_AleitamentoMaterno: Boolean;
    F__isset_DumDaGestante: Boolean;
    F__isset_IdadeGestacional: Boolean;
    F__isset_AtencaoDomiciliarModalidade: Boolean;
    F__isset_ProblemaCondicaoAvaliada: Boolean;
    F__isset_Exame: Boolean;
    F__isset_VacinaEmDia: Boolean;
    F__isset_Pic: Boolean;
    F__isset_FicouEmObservacao: Boolean;
    F__isset_Nasfs: Boolean;
    F__isset_Condutas: Boolean;
    F__isset_StGravidezPlanejada: Boolean;
    F__isset_NuGestasPrevias: Boolean;
    F__isset_NuPartos: Boolean;
    F__isset_RacionalidadeSaude: Boolean;
    F__isset_PerimetroCefalico: Boolean;
    F__isset_DataHoraInicialAtendimento: Boolean;
    F__isset_DataHoraFinalAtendimento: Boolean;
    F__isset_CpfCidadao: Boolean;
    F__isset_Medicamentos: Boolean;
    F__isset_Encaminhamentos: Boolean;
    F__isset_ResultadosExames: Boolean;
    F__isset_UuidRnds: Boolean;
    F__isset_FinalizadorObservacao: Boolean;
    F__isset_TipoParticipacaoCidadao: Boolean;
    F__isset_TipoParticipacaoProfissionalConvidado: Boolean;
    F__isset_Emultis: Boolean;
    F__isset_Medicoes: Boolean;
    
    function GetNumeroProntuario: string;
    procedure SetNumeroProntuario( const Value: string);
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetLocalDeAtendimento: Int64;
    procedure SetLocalDeAtendimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetTipoAtendimento: Int64;
    procedure SetTipoAtendimento( const Value: Int64);
    function GetPesoAcompanhamentoNutricional: Double;
    procedure SetPesoAcompanhamentoNutricional( const Value: Double);
    function GetAlturaAcompanhamentoNutricional: Double;
    procedure SetAlturaAcompanhamentoNutricional( const Value: Double);
    function GetAleitamentoMaterno: Int64;
    procedure SetAleitamentoMaterno( const Value: Int64);
    function GetDumDaGestante: Int64;
    procedure SetDumDaGestante( const Value: Int64);
    function GetIdadeGestacional: Integer;
    procedure SetIdadeGestacional( const Value: Integer);
    function GetAtencaoDomiciliarModalidade: Int64;
    procedure SetAtencaoDomiciliarModalidade( const Value: Int64);
    function GetProblemaCondicaoAvaliada: IProblemaCondicaoAvaliacaoAIThrift;
    procedure SetProblemaCondicaoAvaliada( const Value: IProblemaCondicaoAvaliacaoAIThrift);
    function GetExame: IThriftList<IExameThrift>;
    procedure SetExame( const Value: IThriftList<IExameThrift>);
    function GetVacinaEmDia: Boolean;
    procedure SetVacinaEmDia( const Value: Boolean);
    function GetPic: Int64;
    procedure SetPic( const Value: Int64);
    function GetFicouEmObservacao: Boolean;
    procedure SetFicouEmObservacao( const Value: Boolean);
    function GetNasfs: IThriftList<Int64>;
    procedure SetNasfs( const Value: IThriftList<Int64>);
    function GetCondutas: IThriftList<Int64>;
    procedure SetCondutas( const Value: IThriftList<Int64>);
    function GetStGravidezPlanejada: Boolean;
    procedure SetStGravidezPlanejada( const Value: Boolean);
    function GetNuGestasPrevias: Integer;
    procedure SetNuGestasPrevias( const Value: Integer);
    function GetNuPartos: Integer;
    procedure SetNuPartos( const Value: Integer);
    function GetRacionalidadeSaude: Int64;
    procedure SetRacionalidadeSaude( const Value: Int64);
    function GetPerimetroCefalico: Double;
    procedure SetPerimetroCefalico( const Value: Double);
    function GetDataHoraInicialAtendimento: Int64;
    procedure SetDataHoraInicialAtendimento( const Value: Int64);
    function GetDataHoraFinalAtendimento: Int64;
    procedure SetDataHoraFinalAtendimento( const Value: Int64);
    function GetCpfCidadao: string;
    procedure SetCpfCidadao( const Value: string);
    function GetMedicamentos: IThriftList<IMedicamentoThrift>;
    procedure SetMedicamentos( const Value: IThriftList<IMedicamentoThrift>);
    function GetEncaminhamentos: IThriftList<IEncaminhamentoExternoThrift>;
    procedure SetEncaminhamentos( const Value: IThriftList<IEncaminhamentoExternoThrift>);
    function GetResultadosExames: IThriftList<IResultadosExameThrift>;
    procedure SetResultadosExames( const Value: IThriftList<IResultadosExameThrift>);
    function GetUuidRnds: string;
    procedure SetUuidRnds( const Value: string);
    function GetFinalizadorObservacao: ILotacaoHeaderThrift;
    procedure SetFinalizadorObservacao( const Value: ILotacaoHeaderThrift);
    function GetTipoParticipacaoCidadao: Int64;
    procedure SetTipoParticipacaoCidadao( const Value: Int64);
    function GetTipoParticipacaoProfissionalConvidado: Int64;
    procedure SetTipoParticipacaoProfissionalConvidado( const Value: Int64);
    function GetEmultis: IThriftList<Int64>;
    procedure SetEmultis( const Value: IThriftList<Int64>);
    function GetMedicoes: IMedicoesThrift;
    procedure SetMedicoes( const Value: IMedicoesThrift);

    function Get__isset_NumeroProntuario: Boolean;
    function Get__isset_Cns: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_LocalDeAtendimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_Turno: Boolean;
    function Get__isset_TipoAtendimento: Boolean;
    function Get__isset_PesoAcompanhamentoNutricional: Boolean;
    function Get__isset_AlturaAcompanhamentoNutricional: Boolean;
    function Get__isset_AleitamentoMaterno: Boolean;
    function Get__isset_DumDaGestante: Boolean;
    function Get__isset_IdadeGestacional: Boolean;
    function Get__isset_AtencaoDomiciliarModalidade: Boolean;
    function Get__isset_ProblemaCondicaoAvaliada: Boolean;
    function Get__isset_Exame: Boolean;
    function Get__isset_VacinaEmDia: Boolean;
    function Get__isset_Pic: Boolean;
    function Get__isset_FicouEmObservacao: Boolean;
    function Get__isset_Nasfs: Boolean;
    function Get__isset_Condutas: Boolean;
    function Get__isset_StGravidezPlanejada: Boolean;
    function Get__isset_NuGestasPrevias: Boolean;
    function Get__isset_NuPartos: Boolean;
    function Get__isset_RacionalidadeSaude: Boolean;
    function Get__isset_PerimetroCefalico: Boolean;
    function Get__isset_DataHoraInicialAtendimento: Boolean;
    function Get__isset_DataHoraFinalAtendimento: Boolean;
    function Get__isset_CpfCidadao: Boolean;
    function Get__isset_Medicamentos: Boolean;
    function Get__isset_Encaminhamentos: Boolean;
    function Get__isset_ResultadosExames: Boolean;
    function Get__isset_UuidRnds: Boolean;
    function Get__isset_FinalizadorObservacao: Boolean;
    function Get__isset_TipoParticipacaoCidadao: Boolean;
    function Get__isset_TipoParticipacaoProfissionalConvidado: Boolean;
    function Get__isset_Emultis: Boolean;
    function Get__isset_Medicoes: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property NumeroProntuario: string read GetNumeroProntuario write SetNumeroProntuario;
    property Cns: string read GetCns write SetCns;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property LocalDeAtendimento: Int64 read GetLocalDeAtendimento write SetLocalDeAtendimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property Turno: Int64 read GetTurno write SetTurno;
    property TipoAtendimento: Int64 read GetTipoAtendimento write SetTipoAtendimento;
    property PesoAcompanhamentoNutricional: Double read GetPesoAcompanhamentoNutricional write SetPesoAcompanhamentoNutricional;
    property AlturaAcompanhamentoNutricional: Double read GetAlturaAcompanhamentoNutricional write SetAlturaAcompanhamentoNutricional;
    property AleitamentoMaterno: Int64 read GetAleitamentoMaterno write SetAleitamentoMaterno;
    property DumDaGestante: Int64 read GetDumDaGestante write SetDumDaGestante;
    property IdadeGestacional: Integer read GetIdadeGestacional write SetIdadeGestacional;
    property AtencaoDomiciliarModalidade: Int64 read GetAtencaoDomiciliarModalidade write SetAtencaoDomiciliarModalidade;
    property ProblemaCondicaoAvaliada: IProblemaCondicaoAvaliacaoAIThrift read GetProblemaCondicaoAvaliada write SetProblemaCondicaoAvaliada;
    property Exame: IThriftList<IExameThrift> read GetExame write SetExame;
    property VacinaEmDia: Boolean read GetVacinaEmDia write SetVacinaEmDia;
    property Pic: Int64 read GetPic write SetPic;
    property FicouEmObservacao: Boolean read GetFicouEmObservacao write SetFicouEmObservacao;
    property Nasfs: IThriftList<Int64> read GetNasfs write SetNasfs;
    property Condutas: IThriftList<Int64> read GetCondutas write SetCondutas;
    property StGravidezPlanejada: Boolean read GetStGravidezPlanejada write SetStGravidezPlanejada;
    property NuGestasPrevias: Integer read GetNuGestasPrevias write SetNuGestasPrevias;
    property NuPartos: Integer read GetNuPartos write SetNuPartos;
    property RacionalidadeSaude: Int64 read GetRacionalidadeSaude write SetRacionalidadeSaude;
    property PerimetroCefalico: Double read GetPerimetroCefalico write SetPerimetroCefalico;
    property DataHoraInicialAtendimento: Int64 read GetDataHoraInicialAtendimento write SetDataHoraInicialAtendimento;
    property DataHoraFinalAtendimento: Int64 read GetDataHoraFinalAtendimento write SetDataHoraFinalAtendimento;
    property CpfCidadao: string read GetCpfCidadao write SetCpfCidadao;
    property Medicamentos: IThriftList<IMedicamentoThrift> read GetMedicamentos write SetMedicamentos;
    property Encaminhamentos: IThriftList<IEncaminhamentoExternoThrift> read GetEncaminhamentos write SetEncaminhamentos;
    property ResultadosExames: IThriftList<IResultadosExameThrift> read GetResultadosExames write SetResultadosExames;
    property UuidRnds: string read GetUuidRnds write SetUuidRnds;
    property FinalizadorObservacao: ILotacaoHeaderThrift read GetFinalizadorObservacao write SetFinalizadorObservacao;
    property TipoParticipacaoCidadao: Int64 read GetTipoParticipacaoCidadao write SetTipoParticipacaoCidadao;
    property TipoParticipacaoProfissionalConvidado: Int64 read GetTipoParticipacaoProfissionalConvidado write SetTipoParticipacaoProfissionalConvidado;
    property Emultis: IThriftList<Int64> read GetEmultis write SetEmultis;
    property Medicoes: IMedicoesThrift read GetMedicoes write SetMedicoes;

    // isset
    property __isset_NumeroProntuario: Boolean read Get__isset_NumeroProntuario;
    property __isset_Cns: Boolean read Get__isset_Cns;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_LocalDeAtendimento: Boolean read Get__isset_LocalDeAtendimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_TipoAtendimento: Boolean read Get__isset_TipoAtendimento;
    property __isset_PesoAcompanhamentoNutricional: Boolean read Get__isset_PesoAcompanhamentoNutricional;
    property __isset_AlturaAcompanhamentoNutricional: Boolean read Get__isset_AlturaAcompanhamentoNutricional;
    property __isset_AleitamentoMaterno: Boolean read Get__isset_AleitamentoMaterno;
    property __isset_DumDaGestante: Boolean read Get__isset_DumDaGestante;
    property __isset_IdadeGestacional: Boolean read Get__isset_IdadeGestacional;
    property __isset_AtencaoDomiciliarModalidade: Boolean read Get__isset_AtencaoDomiciliarModalidade;
    property __isset_ProblemaCondicaoAvaliada: Boolean read Get__isset_ProblemaCondicaoAvaliada;
    property __isset_Exame: Boolean read Get__isset_Exame;
    property __isset_VacinaEmDia: Boolean read Get__isset_VacinaEmDia;
    property __isset_Pic: Boolean read Get__isset_Pic;
    property __isset_FicouEmObservacao: Boolean read Get__isset_FicouEmObservacao;
    property __isset_Nasfs: Boolean read Get__isset_Nasfs;
    property __isset_Condutas: Boolean read Get__isset_Condutas;
    property __isset_StGravidezPlanejada: Boolean read Get__isset_StGravidezPlanejada;
    property __isset_NuGestasPrevias: Boolean read Get__isset_NuGestasPrevias;
    property __isset_NuPartos: Boolean read Get__isset_NuPartos;
    property __isset_RacionalidadeSaude: Boolean read Get__isset_RacionalidadeSaude;
    property __isset_PerimetroCefalico: Boolean read Get__isset_PerimetroCefalico;
    property __isset_DataHoraInicialAtendimento: Boolean read Get__isset_DataHoraInicialAtendimento;
    property __isset_DataHoraFinalAtendimento: Boolean read Get__isset_DataHoraFinalAtendimento;
    property __isset_CpfCidadao: Boolean read Get__isset_CpfCidadao;
    property __isset_Medicamentos: Boolean read Get__isset_Medicamentos;
    property __isset_Encaminhamentos: Boolean read Get__isset_Encaminhamentos;
    property __isset_ResultadosExames: Boolean read Get__isset_ResultadosExames;
    property __isset_UuidRnds: Boolean read Get__isset_UuidRnds;
    property __isset_FinalizadorObservacao: Boolean read Get__isset_FinalizadorObservacao;
    property __isset_TipoParticipacaoCidadao: Boolean read Get__isset_TipoParticipacaoCidadao;
    property __isset_TipoParticipacaoProfissionalConvidado: Boolean read Get__isset_TipoParticipacaoProfissionalConvidado;
    property __isset_Emultis: Boolean read Get__isset_Emultis;
    property __isset_Medicoes: Boolean read Get__isset_Medicoes;
  end;

  IFichaAtendimentoIndividualMasterThrift = interface(IBase)
    function GetHeaderTransport: IVariasLotacoesHeaderThrift;
    procedure SetHeaderTransport( const Value: IVariasLotacoesHeaderThrift);
    function GetAtendimentosIndividuais: IThriftList<IFichaAtendimentoIndividualChildThrift>;
    procedure SetAtendimentosIndividuais( const Value: IThriftList<IFichaAtendimentoIndividualChildThrift>);
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);

    property HeaderTransport: IVariasLotacoesHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property AtendimentosIndividuais: IThriftList<IFichaAtendimentoIndividualChildThrift> read GetAtendimentosIndividuais write SetAtendimentosIndividuais;
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;

    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_AtendimentosIndividuais: Boolean;
    function Get__isset_TpCdsOrigem: Boolean;

    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_AtendimentosIndividuais: Boolean read Get__isset_AtendimentosIndividuais;
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
  end;

  TFichaAtendimentoIndividualMasterThriftImpl = class(TInterfacedObject, IBase, IFichaAtendimentoIndividualMasterThrift)
  private
    FHeaderTransport: IVariasLotacoesHeaderThrift;
    FAtendimentosIndividuais: IThriftList<IFichaAtendimentoIndividualChildThrift>;
    FUuidFicha: string;
    FTpCdsOrigem: Integer;
    
    F__isset_HeaderTransport: Boolean;
    F__isset_AtendimentosIndividuais: Boolean;
    F__isset_TpCdsOrigem: Boolean;
    
    function GetHeaderTransport: IVariasLotacoesHeaderThrift;
    procedure SetHeaderTransport( const Value: IVariasLotacoesHeaderThrift);
    function GetAtendimentosIndividuais: IThriftList<IFichaAtendimentoIndividualChildThrift>;
    procedure SetAtendimentosIndividuais( const Value: IThriftList<IFichaAtendimentoIndividualChildThrift>);
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);

    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_AtendimentosIndividuais: Boolean;
    function Get__isset_TpCdsOrigem: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property HeaderTransport: IVariasLotacoesHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property AtendimentosIndividuais: IThriftList<IFichaAtendimentoIndividualChildThrift> read GetAtendimentosIndividuais write SetAtendimentosIndividuais;
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;

    // isset
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_AtendimentosIndividuais: Boolean read Get__isset_AtendimentosIndividuais;
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
  end;

implementation

constructor TExameThriftImpl.Create;
begin
  inherited;
end;

destructor TExameThriftImpl.Destroy;
begin
  inherited;
end;

function TExameThriftImpl.GetCodigoExame: string;
begin
  Result := FCodigoExame;
end;

procedure TExameThriftImpl.SetCodigoExame( const Value: string);
begin
  F__isset_CodigoExame := True;
  FCodigoExame := Value;
end;

function TExameThriftImpl.Get__isset_CodigoExame: Boolean;
begin
  Result := F__isset_CodigoExame;
end;

function TExameThriftImpl.GetSolicitadoAvaliado: IThriftList<string>;
begin
  Result := FSolicitadoAvaliado;
end;

procedure TExameThriftImpl.SetSolicitadoAvaliado( const Value: IThriftList<string>);
begin
  F__isset_SolicitadoAvaliado := True;
  FSolicitadoAvaliado := Value;
end;

function TExameThriftImpl.Get__isset_SolicitadoAvaliado: Boolean;
begin
  Result := F__isset_SolicitadoAvaliado;
end;

procedure TExameThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _list0: IList;
  _i1: Integer;
  _elem2: string;

begin
  tracker := iprot.NextRecursionLevel;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoExame := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.List) then
          begin
            SolicitadoAvaliado := TThriftListImpl<string>.Create;
            _list0 := iprot.ReadListBegin();
            for _i1 := 0 to _list0.Count - 1 do
            begin
              _elem2 := iprot.ReadString();
              SolicitadoAvaliado.Add(_elem2);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TExameThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_3 : IList;
  _iter4: string;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('ExameThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_CodigoExame) then
  begin
    field_.Name := 'codigoExame';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoExame);
    oprot.WriteFieldEnd();
  end;
  if (SolicitadoAvaliado <> nil) and __isset_SolicitadoAvaliado then
  begin
    field_.Name := 'solicitadoAvaliado';
    field_.Type_  := TType.List;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    list_3 := TListImpl.Create(TType.String_, SolicitadoAvaliado.Count);
    oprot.WriteListBegin( list_3);
    for _iter4 in SolicitadoAvaliado do
    begin
      oprot.WriteString(_iter4);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TExameThriftImpl.ToString: string;
var
  _sb5 : TThriftStringBuilder;
  _first6 : Boolean;
begin
  _sb5 := TThriftStringBuilder.Create('(');
  try
    _first6 := TRUE;
    if (__isset_CodigoExame) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('CodigoExame: ');
      _sb5.Append(CodigoExame);
    end;
    if (SolicitadoAvaliado <> nil) and __isset_SolicitadoAvaliado then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('SolicitadoAvaliado: ');
      _sb5.Append(SolicitadoAvaliado);
    end;
    _sb5.Append(')');
    Result := _sb5.ToString;
    if _first6 then {prevent warning};
  finally
    _sb5.Free;
  end;
end;

constructor TProblemaCondicaoAvaliacaoAIThriftImpl.Create;
begin
  inherited;
end;

destructor TProblemaCondicaoAvaliacaoAIThriftImpl.Destroy;
begin
  inherited;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.GetCiaps: IThriftList<string>;
begin
  Result := FCiaps;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.SetCiaps( const Value: IThriftList<string>);
begin
  F__isset_Ciaps := True;
  FCiaps := Value;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.Get__isset_Ciaps: Boolean;
begin
  Result := F__isset_Ciaps;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.GetOutroCiap1: string;
begin
  Result := FOutroCiap1;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.SetOutroCiap1( const Value: string);
begin
  F__isset_OutroCiap1 := True;
  FOutroCiap1 := Value;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.Get__isset_OutroCiap1: Boolean;
begin
  Result := F__isset_OutroCiap1;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.GetOutroCiap2: string;
begin
  Result := FOutroCiap2;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.SetOutroCiap2( const Value: string);
begin
  F__isset_OutroCiap2 := True;
  FOutroCiap2 := Value;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.Get__isset_OutroCiap2: Boolean;
begin
  Result := F__isset_OutroCiap2;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.GetCid10: string;
begin
  Result := FCid10;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.SetCid10( const Value: string);
begin
  F__isset_Cid10 := True;
  FCid10 := Value;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.Get__isset_Cid10: Boolean;
begin
  Result := F__isset_Cid10;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.GetCid10_2: string;
begin
  Result := FCid10_2;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.SetCid10_2( const Value: string);
begin
  F__isset_Cid10_2 := True;
  FCid10_2 := Value;
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.Get__isset_Cid10_2: Boolean;
begin
  Result := F__isset_Cid10_2;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _list7: IList;
  _i8: Integer;
  _elem9: string;

begin
  tracker := iprot.NextRecursionLevel;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.List) then
          begin
            Ciaps := TThriftListImpl<string>.Create;
            _list7 := iprot.ReadListBegin();
            for _i8 := 0 to _list7.Count - 1 do
            begin
              _elem9 := iprot.ReadString();
              Ciaps.Add(_elem9);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            OutroCiap1 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            OutroCiap2 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cid10 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cid10_2 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TProblemaCondicaoAvaliacaoAIThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_10 : IList;
  _iter11: string;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('ProblemaCondicaoAvaliacaoAIThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (Ciaps <> nil) and __isset_Ciaps then
  begin
    field_.Name := 'ciaps';
    field_.Type_  := TType.List;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    list_10 := TListImpl.Create(TType.String_, Ciaps.Count);
    oprot.WriteListBegin( list_10);
    for _iter11 in Ciaps do
    begin
      oprot.WriteString(_iter11);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_OutroCiap1) then
  begin
    field_.Name := 'outroCiap1';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(OutroCiap1);
    oprot.WriteFieldEnd();
  end;
  if (__isset_OutroCiap2) then
  begin
    field_.Name := 'outroCiap2';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(OutroCiap2);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cid10) then
  begin
    field_.Name := 'cid10';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cid10);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cid10_2) then
  begin
    field_.Name := 'cid10_2';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cid10_2);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TProblemaCondicaoAvaliacaoAIThriftImpl.ToString: string;
var
  _sb12 : TThriftStringBuilder;
  _first13 : Boolean;
begin
  _sb12 := TThriftStringBuilder.Create('(');
  try
    _first13 := TRUE;
    if (Ciaps <> nil) and __isset_Ciaps then begin
      if not _first13 then _sb12.Append(',');
      _first13 := FALSE;
      _sb12.Append('Ciaps: ');
      _sb12.Append(Ciaps);
    end;
    if (__isset_OutroCiap1) then begin
      if not _first13 then _sb12.Append(',');
      _first13 := FALSE;
      _sb12.Append('OutroCiap1: ');
      _sb12.Append(OutroCiap1);
    end;
    if (__isset_OutroCiap2) then begin
      if not _first13 then _sb12.Append(',');
      _first13 := FALSE;
      _sb12.Append('OutroCiap2: ');
      _sb12.Append(OutroCiap2);
    end;
    if (__isset_Cid10) then begin
      if not _first13 then _sb12.Append(',');
      _first13 := FALSE;
      _sb12.Append('Cid10: ');
      _sb12.Append(Cid10);
    end;
    if (__isset_Cid10_2) then begin
      if not _first13 then _sb12.Append(',');
      _first13 := FALSE;
      _sb12.Append('Cid10_2: ');
      _sb12.Append(Cid10_2);
    end;
    _sb12.Append(')');
    Result := _sb12.ToString;
    if _first13 then {prevent warning};
  finally
    _sb12.Free;
  end;
end;

constructor TFichaAtendimentoIndividualChildThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaAtendimentoIndividualChildThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetNumeroProntuario: string;
begin
  Result := FNumeroProntuario;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetNumeroProntuario( const Value: string);
begin
  F__isset_NumeroProntuario := True;
  FNumeroProntuario := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_NumeroProntuario: Boolean;
begin
  Result := F__isset_NumeroProntuario;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetCns: string;
begin
  Result := FCns;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetCns( const Value: string);
begin
  F__isset_Cns := True;
  FCns := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Cns: Boolean;
begin
  Result := F__isset_Cns;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetDataNascimento: Int64;
begin
  Result := FDataNascimento;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetDataNascimento( const Value: Int64);
begin
  F__isset_DataNascimento := True;
  FDataNascimento := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_DataNascimento: Boolean;
begin
  Result := F__isset_DataNascimento;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetLocalDeAtendimento: Int64;
begin
  Result := FLocalDeAtendimento;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetLocalDeAtendimento( const Value: Int64);
begin
  F__isset_LocalDeAtendimento := True;
  FLocalDeAtendimento := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_LocalDeAtendimento: Boolean;
begin
  Result := F__isset_LocalDeAtendimento;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetSexo: Int64;
begin
  Result := FSexo;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetSexo( const Value: Int64);
begin
  F__isset_Sexo := True;
  FSexo := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Sexo: Boolean;
begin
  Result := F__isset_Sexo;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetTurno: Int64;
begin
  Result := FTurno;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetTurno( const Value: Int64);
begin
  F__isset_Turno := True;
  FTurno := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Turno: Boolean;
begin
  Result := F__isset_Turno;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetTipoAtendimento: Int64;
begin
  Result := FTipoAtendimento;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetTipoAtendimento( const Value: Int64);
begin
  F__isset_TipoAtendimento := True;
  FTipoAtendimento := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_TipoAtendimento: Boolean;
begin
  Result := F__isset_TipoAtendimento;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetPesoAcompanhamentoNutricional: Double;
begin
  Result := FPesoAcompanhamentoNutricional;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetPesoAcompanhamentoNutricional( const Value: Double);
begin
  F__isset_PesoAcompanhamentoNutricional := True;
  FPesoAcompanhamentoNutricional := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_PesoAcompanhamentoNutricional: Boolean;
begin
  Result := F__isset_PesoAcompanhamentoNutricional;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetAlturaAcompanhamentoNutricional: Double;
begin
  Result := FAlturaAcompanhamentoNutricional;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetAlturaAcompanhamentoNutricional( const Value: Double);
begin
  F__isset_AlturaAcompanhamentoNutricional := True;
  FAlturaAcompanhamentoNutricional := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_AlturaAcompanhamentoNutricional: Boolean;
begin
  Result := F__isset_AlturaAcompanhamentoNutricional;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetAleitamentoMaterno: Int64;
begin
  Result := FAleitamentoMaterno;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetAleitamentoMaterno( const Value: Int64);
begin
  F__isset_AleitamentoMaterno := True;
  FAleitamentoMaterno := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_AleitamentoMaterno: Boolean;
begin
  Result := F__isset_AleitamentoMaterno;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetDumDaGestante: Int64;
begin
  Result := FDumDaGestante;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetDumDaGestante( const Value: Int64);
begin
  F__isset_DumDaGestante := True;
  FDumDaGestante := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_DumDaGestante: Boolean;
begin
  Result := F__isset_DumDaGestante;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetIdadeGestacional: Integer;
begin
  Result := FIdadeGestacional;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetIdadeGestacional( const Value: Integer);
begin
  F__isset_IdadeGestacional := True;
  FIdadeGestacional := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_IdadeGestacional: Boolean;
begin
  Result := F__isset_IdadeGestacional;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetAtencaoDomiciliarModalidade: Int64;
begin
  Result := FAtencaoDomiciliarModalidade;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetAtencaoDomiciliarModalidade( const Value: Int64);
begin
  F__isset_AtencaoDomiciliarModalidade := True;
  FAtencaoDomiciliarModalidade := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_AtencaoDomiciliarModalidade: Boolean;
begin
  Result := F__isset_AtencaoDomiciliarModalidade;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetProblemaCondicaoAvaliada: IProblemaCondicaoAvaliacaoAIThrift;
begin
  Result := FProblemaCondicaoAvaliada;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetProblemaCondicaoAvaliada( const Value: IProblemaCondicaoAvaliacaoAIThrift);
begin
  F__isset_ProblemaCondicaoAvaliada := True;
  FProblemaCondicaoAvaliada := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_ProblemaCondicaoAvaliada: Boolean;
begin
  Result := F__isset_ProblemaCondicaoAvaliada;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetExame: IThriftList<IExameThrift>;
begin
  Result := FExame;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetExame( const Value: IThriftList<IExameThrift>);
begin
  F__isset_Exame := True;
  FExame := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Exame: Boolean;
begin
  Result := F__isset_Exame;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetVacinaEmDia: Boolean;
begin
  Result := FVacinaEmDia;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetVacinaEmDia( const Value: Boolean);
begin
  F__isset_VacinaEmDia := True;
  FVacinaEmDia := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_VacinaEmDia: Boolean;
begin
  Result := F__isset_VacinaEmDia;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetPic: Int64;
begin
  Result := FPic;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetPic( const Value: Int64);
begin
  F__isset_Pic := True;
  FPic := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Pic: Boolean;
begin
  Result := F__isset_Pic;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetFicouEmObservacao: Boolean;
begin
  Result := FFicouEmObservacao;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetFicouEmObservacao( const Value: Boolean);
begin
  F__isset_FicouEmObservacao := True;
  FFicouEmObservacao := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_FicouEmObservacao: Boolean;
begin
  Result := F__isset_FicouEmObservacao;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetNasfs: IThriftList<Int64>;
begin
  Result := FNasfs;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetNasfs( const Value: IThriftList<Int64>);
begin
  F__isset_Nasfs := True;
  FNasfs := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Nasfs: Boolean;
begin
  Result := F__isset_Nasfs;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetCondutas: IThriftList<Int64>;
begin
  Result := FCondutas;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetCondutas( const Value: IThriftList<Int64>);
begin
  F__isset_Condutas := True;
  FCondutas := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Condutas: Boolean;
begin
  Result := F__isset_Condutas;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetStGravidezPlanejada: Boolean;
begin
  Result := FStGravidezPlanejada;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetStGravidezPlanejada( const Value: Boolean);
begin
  F__isset_StGravidezPlanejada := True;
  FStGravidezPlanejada := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_StGravidezPlanejada: Boolean;
begin
  Result := F__isset_StGravidezPlanejada;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetNuGestasPrevias: Integer;
begin
  Result := FNuGestasPrevias;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetNuGestasPrevias( const Value: Integer);
begin
  F__isset_NuGestasPrevias := True;
  FNuGestasPrevias := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_NuGestasPrevias: Boolean;
begin
  Result := F__isset_NuGestasPrevias;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetNuPartos: Integer;
begin
  Result := FNuPartos;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetNuPartos( const Value: Integer);
begin
  F__isset_NuPartos := True;
  FNuPartos := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_NuPartos: Boolean;
begin
  Result := F__isset_NuPartos;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetRacionalidadeSaude: Int64;
begin
  Result := FRacionalidadeSaude;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetRacionalidadeSaude( const Value: Int64);
begin
  F__isset_RacionalidadeSaude := True;
  FRacionalidadeSaude := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_RacionalidadeSaude: Boolean;
begin
  Result := F__isset_RacionalidadeSaude;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetPerimetroCefalico: Double;
begin
  Result := FPerimetroCefalico;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetPerimetroCefalico( const Value: Double);
begin
  F__isset_PerimetroCefalico := True;
  FPerimetroCefalico := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_PerimetroCefalico: Boolean;
begin
  Result := F__isset_PerimetroCefalico;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetDataHoraInicialAtendimento: Int64;
begin
  Result := FDataHoraInicialAtendimento;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetDataHoraInicialAtendimento( const Value: Int64);
begin
  F__isset_DataHoraInicialAtendimento := True;
  FDataHoraInicialAtendimento := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_DataHoraInicialAtendimento: Boolean;
begin
  Result := F__isset_DataHoraInicialAtendimento;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetDataHoraFinalAtendimento: Int64;
begin
  Result := FDataHoraFinalAtendimento;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetDataHoraFinalAtendimento( const Value: Int64);
begin
  F__isset_DataHoraFinalAtendimento := True;
  FDataHoraFinalAtendimento := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_DataHoraFinalAtendimento: Boolean;
begin
  Result := F__isset_DataHoraFinalAtendimento;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetCpfCidadao: string;
begin
  Result := FCpfCidadao;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetCpfCidadao( const Value: string);
begin
  F__isset_CpfCidadao := True;
  FCpfCidadao := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_CpfCidadao: Boolean;
begin
  Result := F__isset_CpfCidadao;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetMedicamentos: IThriftList<IMedicamentoThrift>;
begin
  Result := FMedicamentos;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetMedicamentos( const Value: IThriftList<IMedicamentoThrift>);
begin
  F__isset_Medicamentos := True;
  FMedicamentos := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Medicamentos: Boolean;
begin
  Result := F__isset_Medicamentos;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetEncaminhamentos: IThriftList<IEncaminhamentoExternoThrift>;
begin
  Result := FEncaminhamentos;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetEncaminhamentos( const Value: IThriftList<IEncaminhamentoExternoThrift>);
begin
  F__isset_Encaminhamentos := True;
  FEncaminhamentos := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Encaminhamentos: Boolean;
begin
  Result := F__isset_Encaminhamentos;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetResultadosExames: IThriftList<IResultadosExameThrift>;
begin
  Result := FResultadosExames;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetResultadosExames( const Value: IThriftList<IResultadosExameThrift>);
begin
  F__isset_ResultadosExames := True;
  FResultadosExames := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_ResultadosExames: Boolean;
begin
  Result := F__isset_ResultadosExames;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetUuidRnds: string;
begin
  Result := FUuidRnds;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetUuidRnds( const Value: string);
begin
  F__isset_UuidRnds := True;
  FUuidRnds := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_UuidRnds: Boolean;
begin
  Result := F__isset_UuidRnds;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetFinalizadorObservacao: ILotacaoHeaderThrift;
begin
  Result := FFinalizadorObservacao;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetFinalizadorObservacao( const Value: ILotacaoHeaderThrift);
begin
  F__isset_FinalizadorObservacao := True;
  FFinalizadorObservacao := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_FinalizadorObservacao: Boolean;
begin
  Result := F__isset_FinalizadorObservacao;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetTipoParticipacaoCidadao: Int64;
begin
  Result := FTipoParticipacaoCidadao;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetTipoParticipacaoCidadao( const Value: Int64);
begin
  F__isset_TipoParticipacaoCidadao := True;
  FTipoParticipacaoCidadao := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_TipoParticipacaoCidadao: Boolean;
begin
  Result := F__isset_TipoParticipacaoCidadao;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetTipoParticipacaoProfissionalConvidado: Int64;
begin
  Result := FTipoParticipacaoProfissionalConvidado;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetTipoParticipacaoProfissionalConvidado( const Value: Int64);
begin
  F__isset_TipoParticipacaoProfissionalConvidado := True;
  FTipoParticipacaoProfissionalConvidado := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_TipoParticipacaoProfissionalConvidado: Boolean;
begin
  Result := F__isset_TipoParticipacaoProfissionalConvidado;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetEmultis: IThriftList<Int64>;
begin
  Result := FEmultis;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetEmultis( const Value: IThriftList<Int64>);
begin
  F__isset_Emultis := True;
  FEmultis := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Emultis: Boolean;
begin
  Result := F__isset_Emultis;
end;

function TFichaAtendimentoIndividualChildThriftImpl.GetMedicoes: IMedicoesThrift;
begin
  Result := FMedicoes;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.SetMedicoes( const Value: IMedicoesThrift);
begin
  F__isset_Medicoes := True;
  FMedicoes := Value;
end;

function TFichaAtendimentoIndividualChildThriftImpl.Get__isset_Medicoes: Boolean;
begin
  Result := F__isset_Medicoes;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _list14: IList;
  _i15: Integer;
  _elem16: IExameThrift;
  _list17: IList;
  _i18: Integer;
  _elem19: Int64;
  _list20: IList;
  _i21: Integer;
  _elem22: Int64;
  _list23: IList;
  _i24: Integer;
  _elem25: IMedicamentoThrift;
  _list26: IList;
  _i27: Integer;
  _elem28: IEncaminhamentoExternoThrift;
  _list29: IList;
  _i30: Integer;
  _elem31: IResultadosExameThrift;
  _list32: IList;
  _i33: Integer;
  _elem34: Int64;

begin
  tracker := iprot.NextRecursionLevel;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroProntuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cns := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            LocalDeAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            Sexo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            Turno := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.I64) then
          begin
            TipoAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.Double_) then
          begin
            PesoAcompanhamentoNutricional := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.Double_) then
          begin
            AlturaAcompanhamentoNutricional := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.I64) then
          begin
            AleitamentoMaterno := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I64) then
          begin
            DumDaGestante := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.I32) then
          begin
            IdadeGestacional := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.I64) then
          begin
            AtencaoDomiciliarModalidade := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.Struct) then
          begin
            ProblemaCondicaoAvaliada := TProblemaCondicaoAvaliacaoAIThriftImpl.Create;
            ProblemaCondicaoAvaliada.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        17: begin
          if (field_.Type_ = TType.List) then
          begin
            Exame := TThriftListImpl<IExameThrift>.Create;
            _list14 := iprot.ReadListBegin();
            for _i15 := 0 to _list14.Count - 1 do
            begin
              _elem16 := TExameThriftImpl.Create;
              _elem16.Read(iprot);
              Exame.Add(_elem16);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        18: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            VacinaEmDia := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        19: begin
          if (field_.Type_ = TType.I64) then
          begin
            Pic := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        20: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            FicouEmObservacao := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        21: begin
          if (field_.Type_ = TType.List) then
          begin
            Nasfs := TThriftListImpl<Int64>.Create;
            _list17 := iprot.ReadListBegin();
            for _i18 := 0 to _list17.Count - 1 do
            begin
              _elem19 := iprot.ReadI64();
              Nasfs.Add(_elem19);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        22: begin
          if (field_.Type_ = TType.List) then
          begin
            Condutas := TThriftListImpl<Int64>.Create;
            _list20 := iprot.ReadListBegin();
            for _i21 := 0 to _list20.Count - 1 do
            begin
              _elem22 := iprot.ReadI64();
              Condutas.Add(_elem22);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        23: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StGravidezPlanejada := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        24: begin
          if (field_.Type_ = TType.I32) then
          begin
            NuGestasPrevias := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        25: begin
          if (field_.Type_ = TType.I32) then
          begin
            NuPartos := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        26: begin
          if (field_.Type_ = TType.I64) then
          begin
            RacionalidadeSaude := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        27: begin
          if (field_.Type_ = TType.Double_) then
          begin
            PerimetroCefalico := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        28: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataHoraInicialAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        29: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataHoraFinalAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        30: begin
          if (field_.Type_ = TType.String_) then
          begin
            CpfCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        31: begin
          if (field_.Type_ = TType.List) then
          begin
            Medicamentos := TThriftListImpl<IMedicamentoThrift>.Create;
            _list23 := iprot.ReadListBegin();
            for _i24 := 0 to _list23.Count - 1 do
            begin
              _elem25 := TMedicamentoThriftImpl.Create;
              _elem25.Read(iprot);
              Medicamentos.Add(_elem25);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        32: begin
          if (field_.Type_ = TType.List) then
          begin
            Encaminhamentos := TThriftListImpl<IEncaminhamentoExternoThrift>.Create;
            _list26 := iprot.ReadListBegin();
            for _i27 := 0 to _list26.Count - 1 do
            begin
              _elem28 := TEncaminhamentoExternoThriftImpl.Create;
              _elem28.Read(iprot);
              Encaminhamentos.Add(_elem28);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        33: begin
          if (field_.Type_ = TType.List) then
          begin
            ResultadosExames := TThriftListImpl<IResultadosExameThrift>.Create;
            _list29 := iprot.ReadListBegin();
            for _i30 := 0 to _list29.Count - 1 do
            begin
              _elem31 := TResultadosExameThriftImpl.Create;
              _elem31.Read(iprot);
              ResultadosExames.Add(_elem31);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        34: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidRnds := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        35: begin
          if (field_.Type_ = TType.Struct) then
          begin
            FinalizadorObservacao := TLotacaoHeaderThriftImpl.Create;
            FinalizadorObservacao.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        36: begin
          if (field_.Type_ = TType.I64) then
          begin
            TipoParticipacaoCidadao := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        37: begin
          if (field_.Type_ = TType.I64) then
          begin
            TipoParticipacaoProfissionalConvidado := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        38: begin
          if (field_.Type_ = TType.List) then
          begin
            Emultis := TThriftListImpl<Int64>.Create;
            _list32 := iprot.ReadListBegin();
            for _i33 := 0 to _list32.Count - 1 do
            begin
              _elem34 := iprot.ReadI64();
              Emultis.Add(_elem34);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        39: begin
          if (field_.Type_ = TType.Struct) then
          begin
            Medicoes := TMedicoesThriftImpl.Create;
            Medicoes.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TFichaAtendimentoIndividualChildThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_35 : IList;
  _iter36: IExameThrift;
  list_37 : IList;
  _iter38: Int64;
  list_39 : IList;
  _iter40: Int64;
  list_41 : IList;
  _iter42: IMedicamentoThrift;
  list_43 : IList;
  _iter44: IEncaminhamentoExternoThrift;
  list_45 : IList;
  _iter46: IResultadosExameThrift;
  list_47 : IList;
  _iter48: Int64;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('FichaAtendimentoIndividualChildThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_NumeroProntuario) then
  begin
    field_.Name := 'numeroProntuario';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroProntuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Cns) then
  begin
    field_.Name := 'cns';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cns);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataNascimento) then
  begin
    field_.Name := 'dataNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalDeAtendimento) then
  begin
    field_.Name := 'localDeAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(LocalDeAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Sexo) then
  begin
    field_.Name := 'sexo';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Sexo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Turno) then
  begin
    field_.Name := 'turno';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Turno);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoAtendimento) then
  begin
    field_.Name := 'tipoAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TipoAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_PesoAcompanhamentoNutricional) then
  begin
    field_.Name := 'pesoAcompanhamentoNutricional';
    field_.Type_  := TType.Double_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(PesoAcompanhamentoNutricional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AlturaAcompanhamentoNutricional) then
  begin
    field_.Name := 'alturaAcompanhamentoNutricional';
    field_.Type_  := TType.Double_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(AlturaAcompanhamentoNutricional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AleitamentoMaterno) then
  begin
    field_.Name := 'aleitamentoMaterno';
    field_.Type_  := TType.I64;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AleitamentoMaterno);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DumDaGestante) then
  begin
    field_.Name := 'dumDaGestante';
    field_.Type_  := TType.I64;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DumDaGestante);
    oprot.WriteFieldEnd();
  end;
  if (__isset_IdadeGestacional) then
  begin
    field_.Name := 'idadeGestacional';
    field_.Type_  := TType.I32;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(IdadeGestacional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AtencaoDomiciliarModalidade) then
  begin
    field_.Name := 'atencaoDomiciliarModalidade';
    field_.Type_  := TType.I64;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AtencaoDomiciliarModalidade);
    oprot.WriteFieldEnd();
  end;
  if (ProblemaCondicaoAvaliada <> nil) and __isset_ProblemaCondicaoAvaliada then
  begin
    field_.Name := 'problemaCondicaoAvaliada';
    field_.Type_  := TType.Struct;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    ProblemaCondicaoAvaliada.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (Exame <> nil) and __isset_Exame then
  begin
    field_.Name := 'exame';
    field_.Type_  := TType.List;
    field_.ID := 17;
    oprot.WriteFieldBegin(field_);
    list_35 := TListImpl.Create(TType.Struct, Exame.Count);
    oprot.WriteListBegin( list_35);
    for _iter36 in Exame do
    begin
      _iter36.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_VacinaEmDia) then
  begin
    field_.Name := 'vacinaEmDia';
    field_.Type_  := TType.Bool_;
    field_.ID := 18;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(VacinaEmDia);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Pic) then
  begin
    field_.Name := 'pic';
    field_.Type_  := TType.I64;
    field_.ID := 19;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Pic);
    oprot.WriteFieldEnd();
  end;
  if (__isset_FicouEmObservacao) then
  begin
    field_.Name := 'ficouEmObservacao';
    field_.Type_  := TType.Bool_;
    field_.ID := 20;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(FicouEmObservacao);
    oprot.WriteFieldEnd();
  end;
  if (Nasfs <> nil) and __isset_Nasfs then
  begin
    field_.Name := 'nasfs';
    field_.Type_  := TType.List;
    field_.ID := 21;
    oprot.WriteFieldBegin(field_);
    list_37 := TListImpl.Create(TType.I64, Nasfs.Count);
    oprot.WriteListBegin( list_37);
    for _iter38 in Nasfs do
    begin
      oprot.WriteI64(_iter38);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (Condutas <> nil) and __isset_Condutas then
  begin
    field_.Name := 'condutas';
    field_.Type_  := TType.List;
    field_.ID := 22;
    oprot.WriteFieldBegin(field_);
    list_39 := TListImpl.Create(TType.I64, Condutas.Count);
    oprot.WriteListBegin( list_39);
    for _iter40 in Condutas do
    begin
      oprot.WriteI64(_iter40);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_StGravidezPlanejada) then
  begin
    field_.Name := 'stGravidezPlanejada';
    field_.Type_  := TType.Bool_;
    field_.ID := 23;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StGravidezPlanejada);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NuGestasPrevias) then
  begin
    field_.Name := 'nuGestasPrevias';
    field_.Type_  := TType.I32;
    field_.ID := 24;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NuGestasPrevias);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NuPartos) then
  begin
    field_.Name := 'nuPartos';
    field_.Type_  := TType.I32;
    field_.ID := 25;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NuPartos);
    oprot.WriteFieldEnd();
  end;
  if (__isset_RacionalidadeSaude) then
  begin
    field_.Name := 'racionalidadeSaude';
    field_.Type_  := TType.I64;
    field_.ID := 26;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(RacionalidadeSaude);
    oprot.WriteFieldEnd();
  end;
  if (__isset_PerimetroCefalico) then
  begin
    field_.Name := 'perimetroCefalico';
    field_.Type_  := TType.Double_;
    field_.ID := 27;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(PerimetroCefalico);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataHoraInicialAtendimento) then
  begin
    field_.Name := 'dataHoraInicialAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 28;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataHoraInicialAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataHoraFinalAtendimento) then
  begin
    field_.Name := 'dataHoraFinalAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 29;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataHoraFinalAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CpfCidadao) then
  begin
    field_.Name := 'cpfCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 30;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CpfCidadao);
    oprot.WriteFieldEnd();
  end;
  if (Medicamentos <> nil) and __isset_Medicamentos then
  begin
    field_.Name := 'medicamentos';
    field_.Type_  := TType.List;
    field_.ID := 31;
    oprot.WriteFieldBegin(field_);
    list_41 := TListImpl.Create(TType.Struct, Medicamentos.Count);
    oprot.WriteListBegin( list_41);
    for _iter42 in Medicamentos do
    begin
      _iter42.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (Encaminhamentos <> nil) and __isset_Encaminhamentos then
  begin
    field_.Name := 'encaminhamentos';
    field_.Type_  := TType.List;
    field_.ID := 32;
    oprot.WriteFieldBegin(field_);
    list_43 := TListImpl.Create(TType.Struct, Encaminhamentos.Count);
    oprot.WriteListBegin( list_43);
    for _iter44 in Encaminhamentos do
    begin
      _iter44.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (ResultadosExames <> nil) and __isset_ResultadosExames then
  begin
    field_.Name := 'resultadosExames';
    field_.Type_  := TType.List;
    field_.ID := 33;
    oprot.WriteFieldBegin(field_);
    list_45 := TListImpl.Create(TType.Struct, ResultadosExames.Count);
    oprot.WriteListBegin( list_45);
    for _iter46 in ResultadosExames do
    begin
      _iter46.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_UuidRnds) then
  begin
    field_.Name := 'uuidRnds';
    field_.Type_  := TType.String_;
    field_.ID := 34;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(UuidRnds);
    oprot.WriteFieldEnd();
  end;
  if (FinalizadorObservacao <> nil) and __isset_FinalizadorObservacao then
  begin
    field_.Name := 'finalizadorObservacao';
    field_.Type_  := TType.Struct;
    field_.ID := 35;
    oprot.WriteFieldBegin(field_);
    FinalizadorObservacao.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoParticipacaoCidadao) then
  begin
    field_.Name := 'tipoParticipacaoCidadao';
    field_.Type_  := TType.I64;
    field_.ID := 36;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TipoParticipacaoCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoParticipacaoProfissionalConvidado) then
  begin
    field_.Name := 'tipoParticipacaoProfissionalConvidado';
    field_.Type_  := TType.I64;
    field_.ID := 37;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TipoParticipacaoProfissionalConvidado);
    oprot.WriteFieldEnd();
  end;
  if (Emultis <> nil) and __isset_Emultis then
  begin
    field_.Name := 'emultis';
    field_.Type_  := TType.List;
    field_.ID := 38;
    oprot.WriteFieldBegin(field_);
    list_47 := TListImpl.Create(TType.I64, Emultis.Count);
    oprot.WriteListBegin( list_47);
    for _iter48 in Emultis do
    begin
      oprot.WriteI64(_iter48);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (Medicoes <> nil) and __isset_Medicoes then
  begin
    field_.Name := 'medicoes';
    field_.Type_  := TType.Struct;
    field_.ID := 39;
    oprot.WriteFieldBegin(field_);
    Medicoes.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaAtendimentoIndividualChildThriftImpl.ToString: string;
var
  _sb49 : TThriftStringBuilder;
  _first50 : Boolean;
begin
  _sb49 := TThriftStringBuilder.Create('(');
  try
    _first50 := TRUE;
    if (__isset_NumeroProntuario) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('NumeroProntuario: ');
      _sb49.Append(NumeroProntuario);
    end;
    if (__isset_Cns) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Cns: ');
      _sb49.Append(Cns);
    end;
    if (__isset_DataNascimento) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('DataNascimento: ');
      _sb49.Append(DataNascimento);
    end;
    if (__isset_LocalDeAtendimento) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('LocalDeAtendimento: ');
      _sb49.Append(LocalDeAtendimento);
    end;
    if (__isset_Sexo) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Sexo: ');
      _sb49.Append(Sexo);
    end;
    if (__isset_Turno) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Turno: ');
      _sb49.Append(Turno);
    end;
    if (__isset_TipoAtendimento) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('TipoAtendimento: ');
      _sb49.Append(TipoAtendimento);
    end;
    if (__isset_PesoAcompanhamentoNutricional) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('PesoAcompanhamentoNutricional: ');
      _sb49.Append(PesoAcompanhamentoNutricional);
    end;
    if (__isset_AlturaAcompanhamentoNutricional) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('AlturaAcompanhamentoNutricional: ');
      _sb49.Append(AlturaAcompanhamentoNutricional);
    end;
    if (__isset_AleitamentoMaterno) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('AleitamentoMaterno: ');
      _sb49.Append(AleitamentoMaterno);
    end;
    if (__isset_DumDaGestante) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('DumDaGestante: ');
      _sb49.Append(DumDaGestante);
    end;
    if (__isset_IdadeGestacional) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('IdadeGestacional: ');
      _sb49.Append(IdadeGestacional);
    end;
    if (__isset_AtencaoDomiciliarModalidade) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('AtencaoDomiciliarModalidade: ');
      _sb49.Append(AtencaoDomiciliarModalidade);
    end;
    if (ProblemaCondicaoAvaliada <> nil) and __isset_ProblemaCondicaoAvaliada then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('ProblemaCondicaoAvaliada: ');
      if (ProblemaCondicaoAvaliada = nil) then _sb49.Append('<null>') else _sb49.Append(ProblemaCondicaoAvaliada.ToString());
    end;
    if (Exame <> nil) and __isset_Exame then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Exame: ');
      _sb49.Append(Exame);
    end;
    if (__isset_VacinaEmDia) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('VacinaEmDia: ');
      _sb49.Append(VacinaEmDia);
    end;
    if (__isset_Pic) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Pic: ');
      _sb49.Append(Pic);
    end;
    if (__isset_FicouEmObservacao) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('FicouEmObservacao: ');
      _sb49.Append(FicouEmObservacao);
    end;
    if (Nasfs <> nil) and __isset_Nasfs then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Nasfs: ');
      _sb49.Append(Nasfs);
    end;
    if (Condutas <> nil) and __isset_Condutas then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Condutas: ');
      _sb49.Append(Condutas);
    end;
    if (__isset_StGravidezPlanejada) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('StGravidezPlanejada: ');
      _sb49.Append(StGravidezPlanejada);
    end;
    if (__isset_NuGestasPrevias) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('NuGestasPrevias: ');
      _sb49.Append(NuGestasPrevias);
    end;
    if (__isset_NuPartos) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('NuPartos: ');
      _sb49.Append(NuPartos);
    end;
    if (__isset_RacionalidadeSaude) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('RacionalidadeSaude: ');
      _sb49.Append(RacionalidadeSaude);
    end;
    if (__isset_PerimetroCefalico) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('PerimetroCefalico: ');
      _sb49.Append(PerimetroCefalico);
    end;
    if (__isset_DataHoraInicialAtendimento) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('DataHoraInicialAtendimento: ');
      _sb49.Append(DataHoraInicialAtendimento);
    end;
    if (__isset_DataHoraFinalAtendimento) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('DataHoraFinalAtendimento: ');
      _sb49.Append(DataHoraFinalAtendimento);
    end;
    if (__isset_CpfCidadao) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('CpfCidadao: ');
      _sb49.Append(CpfCidadao);
    end;
    if (Medicamentos <> nil) and __isset_Medicamentos then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Medicamentos: ');
      _sb49.Append(Medicamentos);
    end;
    if (Encaminhamentos <> nil) and __isset_Encaminhamentos then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Encaminhamentos: ');
      _sb49.Append(Encaminhamentos);
    end;
    if (ResultadosExames <> nil) and __isset_ResultadosExames then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('ResultadosExames: ');
      _sb49.Append(ResultadosExames);
    end;
    if (__isset_UuidRnds) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('UuidRnds: ');
      _sb49.Append(UuidRnds);
    end;
    if (FinalizadorObservacao <> nil) and __isset_FinalizadorObservacao then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('FinalizadorObservacao: ');
      if (FinalizadorObservacao = nil) then _sb49.Append('<null>') else _sb49.Append(FinalizadorObservacao.ToString());
    end;
    if (__isset_TipoParticipacaoCidadao) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('TipoParticipacaoCidadao: ');
      _sb49.Append(TipoParticipacaoCidadao);
    end;
    if (__isset_TipoParticipacaoProfissionalConvidado) then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('TipoParticipacaoProfissionalConvidado: ');
      _sb49.Append(TipoParticipacaoProfissionalConvidado);
    end;
    if (Emultis <> nil) and __isset_Emultis then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Emultis: ');
      _sb49.Append(Emultis);
    end;
    if (Medicoes <> nil) and __isset_Medicoes then begin
      if not _first50 then _sb49.Append(',');
      _first50 := FALSE;
      _sb49.Append('Medicoes: ');
      if (Medicoes = nil) then _sb49.Append('<null>') else _sb49.Append(Medicoes.ToString());
    end;
    _sb49.Append(')');
    Result := _sb49.ToString;
    if _first50 then {prevent warning};
  finally
    _sb49.Free;
  end;
end;

constructor TFichaAtendimentoIndividualMasterThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaAtendimentoIndividualMasterThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.GetHeaderTransport: IVariasLotacoesHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaAtendimentoIndividualMasterThriftImpl.SetHeaderTransport( const Value: IVariasLotacoesHeaderThrift);
begin
  F__isset_HeaderTransport := True;
  FHeaderTransport := Value;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.Get__isset_HeaderTransport: Boolean;
begin
  Result := F__isset_HeaderTransport;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.GetAtendimentosIndividuais: IThriftList<IFichaAtendimentoIndividualChildThrift>;
begin
  Result := FAtendimentosIndividuais;
end;

procedure TFichaAtendimentoIndividualMasterThriftImpl.SetAtendimentosIndividuais( const Value: IThriftList<IFichaAtendimentoIndividualChildThrift>);
begin
  F__isset_AtendimentosIndividuais := True;
  FAtendimentosIndividuais := Value;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.Get__isset_AtendimentosIndividuais: Boolean;
begin
  Result := F__isset_AtendimentosIndividuais;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaAtendimentoIndividualMasterThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TFichaAtendimentoIndividualMasterThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TFichaAtendimentoIndividualMasterThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

procedure TFichaAtendimentoIndividualMasterThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _req_isset_UuidFicha : Boolean;
  _list51: IList;
  _i52: Integer;
  _elem53: IFichaAtendimentoIndividualChildThrift;

begin
  tracker := iprot.NextRecursionLevel;
  _req_isset_UuidFicha := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TVariasLotacoesHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.List) then
          begin
            AtendimentosIndividuais := TThriftListImpl<IFichaAtendimentoIndividualChildThrift>.Create;
            _list51 := iprot.ReadListBegin();
            for _i52 := 0 to _list51.Count - 1 do
            begin
              _elem53 := TFichaAtendimentoIndividualChildThriftImpl.Create;
              _elem53.Read(iprot);
              AtendimentosIndividuais.Add(_elem53);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
end;

procedure TFichaAtendimentoIndividualMasterThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_54 : IList;
  _iter55: IFichaAtendimentoIndividualChildThrift;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('FichaAtendimentoIndividualMasterThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (HeaderTransport <> nil) and __isset_HeaderTransport then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (AtendimentosIndividuais <> nil) and __isset_AtendimentosIndividuais then
  begin
    field_.Name := 'atendimentosIndividuais';
    field_.Type_  := TType.List;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    list_54 := TListImpl.Create(TType.Struct, AtendimentosIndividuais.Count);
    oprot.WriteListBegin( list_54);
    for _iter55 in AtendimentosIndividuais do
    begin
      _iter55.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 3;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaAtendimentoIndividualMasterThriftImpl.ToString: string;
var
  _sb56 : TThriftStringBuilder;
  _first57 : Boolean;
begin
  _sb56 := TThriftStringBuilder.Create('(');
  try
    _first57 := TRUE;
    if (HeaderTransport <> nil) and __isset_HeaderTransport then begin
      if not _first57 then _sb56.Append(',');
      _first57 := FALSE;
      _sb56.Append('HeaderTransport: ');
      if (HeaderTransport = nil) then _sb56.Append('<null>') else _sb56.Append(HeaderTransport.ToString());
    end;
    if (AtendimentosIndividuais <> nil) and __isset_AtendimentosIndividuais then begin
      if not _first57 then _sb56.Append(',');
      _first57 := FALSE;
      _sb56.Append('AtendimentosIndividuais: ');
      _sb56.Append(AtendimentosIndividuais);
    end;
    if not _first57 then _sb56.Append(',');
    _sb56.Append('UuidFicha: ');
    _sb56.Append(UuidFicha);
    if (__isset_TpCdsOrigem) then begin
      _sb56.Append(', TpCdsOrigem: ');
      _sb56.Append(TpCdsOrigem);
    end;
    _sb56.Append(')');
    Result := _sb56.ToString;
    if _first57 then {prevent warning};
  finally
    _sb56.Free;
  end;
end;


initialization

finalization


end.
