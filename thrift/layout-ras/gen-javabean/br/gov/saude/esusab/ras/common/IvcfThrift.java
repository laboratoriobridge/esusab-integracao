/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.common;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-05")
public class IvcfThrift implements org.apache.thrift.TBase<IvcfThrift, IvcfThrift._Fields>, java.io.Serializable, Cloneable, Comparable<IvcfThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IvcfThrift");

  private static final org.apache.thrift.protocol.TField RESULTADO_FIELD_DESC = new org.apache.thrift.protocol.TField("resultado", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField HAS_SG_IDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgIdade", org.apache.thrift.protocol.TType.BOOL, (short)2);
  private static final org.apache.thrift.protocol.TField HAS_SG_PERCEPCAO_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgPercepcaoSaude", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField HAS_SG_AVD_INSTRUMENTAL_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgAvdInstrumental", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField HAS_SG_AVD_BASICA_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgAvdBasica", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField HAS_SG_COGNICAO_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgCognicao", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField HAS_SG_HUMOR_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgHumor", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField HAS_SG_ALCANCE_PREENSAO_PINCA_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgAlcancePreensaoPinca", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField HAS_SG_CAP_AEROBICA_MUSCULAR_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgCapAerobicaMuscular", org.apache.thrift.protocol.TType.BOOL, (short)9);
  private static final org.apache.thrift.protocol.TField HAS_SG_MARCHA_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgMarcha", org.apache.thrift.protocol.TType.BOOL, (short)10);
  private static final org.apache.thrift.protocol.TField HAS_SG_CONTINENCIA_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgContinencia", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField HAS_SG_VISAO_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgVisao", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField HAS_SG_AUDICAO_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgAudicao", org.apache.thrift.protocol.TType.BOOL, (short)13);
  private static final org.apache.thrift.protocol.TField HAS_SG_COMORBIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("hasSgComorbidade", org.apache.thrift.protocol.TType.BOOL, (short)14);
  private static final org.apache.thrift.protocol.TField DATA_RESULTADO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataResultado", org.apache.thrift.protocol.TType.I64, (short)15);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new IvcfThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new IvcfThriftTupleSchemeFactory());
  }

  private int resultado; // optional
  private boolean hasSgIdade; // optional
  private boolean hasSgPercepcaoSaude; // optional
  private boolean hasSgAvdInstrumental; // optional
  private boolean hasSgAvdBasica; // optional
  private boolean hasSgCognicao; // optional
  private boolean hasSgHumor; // optional
  private boolean hasSgAlcancePreensaoPinca; // optional
  private boolean hasSgCapAerobicaMuscular; // optional
  private boolean hasSgMarcha; // optional
  private boolean hasSgContinencia; // optional
  private boolean hasSgVisao; // optional
  private boolean hasSgAudicao; // optional
  private boolean hasSgComorbidade; // optional
  private long dataResultado; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RESULTADO((short)1, "resultado"),
    HAS_SG_IDADE((short)2, "hasSgIdade"),
    HAS_SG_PERCEPCAO_SAUDE((short)3, "hasSgPercepcaoSaude"),
    HAS_SG_AVD_INSTRUMENTAL((short)4, "hasSgAvdInstrumental"),
    HAS_SG_AVD_BASICA((short)5, "hasSgAvdBasica"),
    HAS_SG_COGNICAO((short)6, "hasSgCognicao"),
    HAS_SG_HUMOR((short)7, "hasSgHumor"),
    HAS_SG_ALCANCE_PREENSAO_PINCA((short)8, "hasSgAlcancePreensaoPinca"),
    HAS_SG_CAP_AEROBICA_MUSCULAR((short)9, "hasSgCapAerobicaMuscular"),
    HAS_SG_MARCHA((short)10, "hasSgMarcha"),
    HAS_SG_CONTINENCIA((short)11, "hasSgContinencia"),
    HAS_SG_VISAO((short)12, "hasSgVisao"),
    HAS_SG_AUDICAO((short)13, "hasSgAudicao"),
    HAS_SG_COMORBIDADE((short)14, "hasSgComorbidade"),
    DATA_RESULTADO((short)15, "dataResultado");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RESULTADO
          return RESULTADO;
        case 2: // HAS_SG_IDADE
          return HAS_SG_IDADE;
        case 3: // HAS_SG_PERCEPCAO_SAUDE
          return HAS_SG_PERCEPCAO_SAUDE;
        case 4: // HAS_SG_AVD_INSTRUMENTAL
          return HAS_SG_AVD_INSTRUMENTAL;
        case 5: // HAS_SG_AVD_BASICA
          return HAS_SG_AVD_BASICA;
        case 6: // HAS_SG_COGNICAO
          return HAS_SG_COGNICAO;
        case 7: // HAS_SG_HUMOR
          return HAS_SG_HUMOR;
        case 8: // HAS_SG_ALCANCE_PREENSAO_PINCA
          return HAS_SG_ALCANCE_PREENSAO_PINCA;
        case 9: // HAS_SG_CAP_AEROBICA_MUSCULAR
          return HAS_SG_CAP_AEROBICA_MUSCULAR;
        case 10: // HAS_SG_MARCHA
          return HAS_SG_MARCHA;
        case 11: // HAS_SG_CONTINENCIA
          return HAS_SG_CONTINENCIA;
        case 12: // HAS_SG_VISAO
          return HAS_SG_VISAO;
        case 13: // HAS_SG_AUDICAO
          return HAS_SG_AUDICAO;
        case 14: // HAS_SG_COMORBIDADE
          return HAS_SG_COMORBIDADE;
        case 15: // DATA_RESULTADO
          return DATA_RESULTADO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RESULTADO_ISSET_ID = 0;
  private static final int __HASSGIDADE_ISSET_ID = 1;
  private static final int __HASSGPERCEPCAOSAUDE_ISSET_ID = 2;
  private static final int __HASSGAVDINSTRUMENTAL_ISSET_ID = 3;
  private static final int __HASSGAVDBASICA_ISSET_ID = 4;
  private static final int __HASSGCOGNICAO_ISSET_ID = 5;
  private static final int __HASSGHUMOR_ISSET_ID = 6;
  private static final int __HASSGALCANCEPREENSAOPINCA_ISSET_ID = 7;
  private static final int __HASSGCAPAEROBICAMUSCULAR_ISSET_ID = 8;
  private static final int __HASSGMARCHA_ISSET_ID = 9;
  private static final int __HASSGCONTINENCIA_ISSET_ID = 10;
  private static final int __HASSGVISAO_ISSET_ID = 11;
  private static final int __HASSGAUDICAO_ISSET_ID = 12;
  private static final int __HASSGCOMORBIDADE_ISSET_ID = 13;
  private static final int __DATARESULTADO_ISSET_ID = 14;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.RESULTADO,_Fields.HAS_SG_IDADE,_Fields.HAS_SG_PERCEPCAO_SAUDE,_Fields.HAS_SG_AVD_INSTRUMENTAL,_Fields.HAS_SG_AVD_BASICA,_Fields.HAS_SG_COGNICAO,_Fields.HAS_SG_HUMOR,_Fields.HAS_SG_ALCANCE_PREENSAO_PINCA,_Fields.HAS_SG_CAP_AEROBICA_MUSCULAR,_Fields.HAS_SG_MARCHA,_Fields.HAS_SG_CONTINENCIA,_Fields.HAS_SG_VISAO,_Fields.HAS_SG_AUDICAO,_Fields.HAS_SG_COMORBIDADE,_Fields.DATA_RESULTADO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RESULTADO, new org.apache.thrift.meta_data.FieldMetaData("resultado", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HAS_SG_IDADE, new org.apache.thrift.meta_data.FieldMetaData("hasSgIdade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_PERCEPCAO_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("hasSgPercepcaoSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_AVD_INSTRUMENTAL, new org.apache.thrift.meta_data.FieldMetaData("hasSgAvdInstrumental", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_AVD_BASICA, new org.apache.thrift.meta_data.FieldMetaData("hasSgAvdBasica", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_COGNICAO, new org.apache.thrift.meta_data.FieldMetaData("hasSgCognicao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_HUMOR, new org.apache.thrift.meta_data.FieldMetaData("hasSgHumor", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_ALCANCE_PREENSAO_PINCA, new org.apache.thrift.meta_data.FieldMetaData("hasSgAlcancePreensaoPinca", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_CAP_AEROBICA_MUSCULAR, new org.apache.thrift.meta_data.FieldMetaData("hasSgCapAerobicaMuscular", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_MARCHA, new org.apache.thrift.meta_data.FieldMetaData("hasSgMarcha", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_CONTINENCIA, new org.apache.thrift.meta_data.FieldMetaData("hasSgContinencia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_VISAO, new org.apache.thrift.meta_data.FieldMetaData("hasSgVisao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_AUDICAO, new org.apache.thrift.meta_data.FieldMetaData("hasSgAudicao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.HAS_SG_COMORBIDADE, new org.apache.thrift.meta_data.FieldMetaData("hasSgComorbidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DATA_RESULTADO, new org.apache.thrift.meta_data.FieldMetaData("dataResultado", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(IvcfThrift.class, metaDataMap);
  }

  public IvcfThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public IvcfThrift(IvcfThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.resultado = other.resultado;
    this.hasSgIdade = other.hasSgIdade;
    this.hasSgPercepcaoSaude = other.hasSgPercepcaoSaude;
    this.hasSgAvdInstrumental = other.hasSgAvdInstrumental;
    this.hasSgAvdBasica = other.hasSgAvdBasica;
    this.hasSgCognicao = other.hasSgCognicao;
    this.hasSgHumor = other.hasSgHumor;
    this.hasSgAlcancePreensaoPinca = other.hasSgAlcancePreensaoPinca;
    this.hasSgCapAerobicaMuscular = other.hasSgCapAerobicaMuscular;
    this.hasSgMarcha = other.hasSgMarcha;
    this.hasSgContinencia = other.hasSgContinencia;
    this.hasSgVisao = other.hasSgVisao;
    this.hasSgAudicao = other.hasSgAudicao;
    this.hasSgComorbidade = other.hasSgComorbidade;
    this.dataResultado = other.dataResultado;
  }

  public IvcfThrift deepCopy() {
    return new IvcfThrift(this);
  }

  @Override
  public void clear() {
    setResultadoIsSet(false);
    this.resultado = 0;
    setHasSgIdadeIsSet(false);
    this.hasSgIdade = false;
    setHasSgPercepcaoSaudeIsSet(false);
    this.hasSgPercepcaoSaude = false;
    setHasSgAvdInstrumentalIsSet(false);
    this.hasSgAvdInstrumental = false;
    setHasSgAvdBasicaIsSet(false);
    this.hasSgAvdBasica = false;
    setHasSgCognicaoIsSet(false);
    this.hasSgCognicao = false;
    setHasSgHumorIsSet(false);
    this.hasSgHumor = false;
    setHasSgAlcancePreensaoPincaIsSet(false);
    this.hasSgAlcancePreensaoPinca = false;
    setHasSgCapAerobicaMuscularIsSet(false);
    this.hasSgCapAerobicaMuscular = false;
    setHasSgMarchaIsSet(false);
    this.hasSgMarcha = false;
    setHasSgContinenciaIsSet(false);
    this.hasSgContinencia = false;
    setHasSgVisaoIsSet(false);
    this.hasSgVisao = false;
    setHasSgAudicaoIsSet(false);
    this.hasSgAudicao = false;
    setHasSgComorbidadeIsSet(false);
    this.hasSgComorbidade = false;
    setDataResultadoIsSet(false);
    this.dataResultado = 0;
  }

  public int getResultado() {
    return this.resultado;
  }

  public void setResultado(int resultado) {
    this.resultado = resultado;
    setResultadoIsSet(true);
  }

  public void unsetResultado() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESULTADO_ISSET_ID);
  }

  /** Returns true if field resultado is set (has been assigned a value) and false otherwise */
  public boolean isSetResultado() {
    return EncodingUtils.testBit(__isset_bitfield, __RESULTADO_ISSET_ID);
  }

  public void setResultadoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESULTADO_ISSET_ID, value);
  }

  public boolean isHasSgIdade() {
    return this.hasSgIdade;
  }

  public void setHasSgIdade(boolean hasSgIdade) {
    this.hasSgIdade = hasSgIdade;
    setHasSgIdadeIsSet(true);
  }

  public void unsetHasSgIdade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGIDADE_ISSET_ID);
  }

  /** Returns true if field hasSgIdade is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgIdade() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGIDADE_ISSET_ID);
  }

  public void setHasSgIdadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGIDADE_ISSET_ID, value);
  }

  public boolean isHasSgPercepcaoSaude() {
    return this.hasSgPercepcaoSaude;
  }

  public void setHasSgPercepcaoSaude(boolean hasSgPercepcaoSaude) {
    this.hasSgPercepcaoSaude = hasSgPercepcaoSaude;
    setHasSgPercepcaoSaudeIsSet(true);
  }

  public void unsetHasSgPercepcaoSaude() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGPERCEPCAOSAUDE_ISSET_ID);
  }

  /** Returns true if field hasSgPercepcaoSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgPercepcaoSaude() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGPERCEPCAOSAUDE_ISSET_ID);
  }

  public void setHasSgPercepcaoSaudeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGPERCEPCAOSAUDE_ISSET_ID, value);
  }

  public boolean isHasSgAvdInstrumental() {
    return this.hasSgAvdInstrumental;
  }

  public void setHasSgAvdInstrumental(boolean hasSgAvdInstrumental) {
    this.hasSgAvdInstrumental = hasSgAvdInstrumental;
    setHasSgAvdInstrumentalIsSet(true);
  }

  public void unsetHasSgAvdInstrumental() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGAVDINSTRUMENTAL_ISSET_ID);
  }

  /** Returns true if field hasSgAvdInstrumental is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgAvdInstrumental() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGAVDINSTRUMENTAL_ISSET_ID);
  }

  public void setHasSgAvdInstrumentalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGAVDINSTRUMENTAL_ISSET_ID, value);
  }

  public boolean isHasSgAvdBasica() {
    return this.hasSgAvdBasica;
  }

  public void setHasSgAvdBasica(boolean hasSgAvdBasica) {
    this.hasSgAvdBasica = hasSgAvdBasica;
    setHasSgAvdBasicaIsSet(true);
  }

  public void unsetHasSgAvdBasica() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGAVDBASICA_ISSET_ID);
  }

  /** Returns true if field hasSgAvdBasica is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgAvdBasica() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGAVDBASICA_ISSET_ID);
  }

  public void setHasSgAvdBasicaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGAVDBASICA_ISSET_ID, value);
  }

  public boolean isHasSgCognicao() {
    return this.hasSgCognicao;
  }

  public void setHasSgCognicao(boolean hasSgCognicao) {
    this.hasSgCognicao = hasSgCognicao;
    setHasSgCognicaoIsSet(true);
  }

  public void unsetHasSgCognicao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGCOGNICAO_ISSET_ID);
  }

  /** Returns true if field hasSgCognicao is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgCognicao() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGCOGNICAO_ISSET_ID);
  }

  public void setHasSgCognicaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGCOGNICAO_ISSET_ID, value);
  }

  public boolean isHasSgHumor() {
    return this.hasSgHumor;
  }

  public void setHasSgHumor(boolean hasSgHumor) {
    this.hasSgHumor = hasSgHumor;
    setHasSgHumorIsSet(true);
  }

  public void unsetHasSgHumor() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGHUMOR_ISSET_ID);
  }

  /** Returns true if field hasSgHumor is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgHumor() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGHUMOR_ISSET_ID);
  }

  public void setHasSgHumorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGHUMOR_ISSET_ID, value);
  }

  public boolean isHasSgAlcancePreensaoPinca() {
    return this.hasSgAlcancePreensaoPinca;
  }

  public void setHasSgAlcancePreensaoPinca(boolean hasSgAlcancePreensaoPinca) {
    this.hasSgAlcancePreensaoPinca = hasSgAlcancePreensaoPinca;
    setHasSgAlcancePreensaoPincaIsSet(true);
  }

  public void unsetHasSgAlcancePreensaoPinca() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGALCANCEPREENSAOPINCA_ISSET_ID);
  }

  /** Returns true if field hasSgAlcancePreensaoPinca is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgAlcancePreensaoPinca() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGALCANCEPREENSAOPINCA_ISSET_ID);
  }

  public void setHasSgAlcancePreensaoPincaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGALCANCEPREENSAOPINCA_ISSET_ID, value);
  }

  public boolean isHasSgCapAerobicaMuscular() {
    return this.hasSgCapAerobicaMuscular;
  }

  public void setHasSgCapAerobicaMuscular(boolean hasSgCapAerobicaMuscular) {
    this.hasSgCapAerobicaMuscular = hasSgCapAerobicaMuscular;
    setHasSgCapAerobicaMuscularIsSet(true);
  }

  public void unsetHasSgCapAerobicaMuscular() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGCAPAEROBICAMUSCULAR_ISSET_ID);
  }

  /** Returns true if field hasSgCapAerobicaMuscular is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgCapAerobicaMuscular() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGCAPAEROBICAMUSCULAR_ISSET_ID);
  }

  public void setHasSgCapAerobicaMuscularIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGCAPAEROBICAMUSCULAR_ISSET_ID, value);
  }

  public boolean isHasSgMarcha() {
    return this.hasSgMarcha;
  }

  public void setHasSgMarcha(boolean hasSgMarcha) {
    this.hasSgMarcha = hasSgMarcha;
    setHasSgMarchaIsSet(true);
  }

  public void unsetHasSgMarcha() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGMARCHA_ISSET_ID);
  }

  /** Returns true if field hasSgMarcha is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgMarcha() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGMARCHA_ISSET_ID);
  }

  public void setHasSgMarchaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGMARCHA_ISSET_ID, value);
  }

  public boolean isHasSgContinencia() {
    return this.hasSgContinencia;
  }

  public void setHasSgContinencia(boolean hasSgContinencia) {
    this.hasSgContinencia = hasSgContinencia;
    setHasSgContinenciaIsSet(true);
  }

  public void unsetHasSgContinencia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGCONTINENCIA_ISSET_ID);
  }

  /** Returns true if field hasSgContinencia is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgContinencia() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGCONTINENCIA_ISSET_ID);
  }

  public void setHasSgContinenciaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGCONTINENCIA_ISSET_ID, value);
  }

  public boolean isHasSgVisao() {
    return this.hasSgVisao;
  }

  public void setHasSgVisao(boolean hasSgVisao) {
    this.hasSgVisao = hasSgVisao;
    setHasSgVisaoIsSet(true);
  }

  public void unsetHasSgVisao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGVISAO_ISSET_ID);
  }

  /** Returns true if field hasSgVisao is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgVisao() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGVISAO_ISSET_ID);
  }

  public void setHasSgVisaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGVISAO_ISSET_ID, value);
  }

  public boolean isHasSgAudicao() {
    return this.hasSgAudicao;
  }

  public void setHasSgAudicao(boolean hasSgAudicao) {
    this.hasSgAudicao = hasSgAudicao;
    setHasSgAudicaoIsSet(true);
  }

  public void unsetHasSgAudicao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGAUDICAO_ISSET_ID);
  }

  /** Returns true if field hasSgAudicao is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgAudicao() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGAUDICAO_ISSET_ID);
  }

  public void setHasSgAudicaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGAUDICAO_ISSET_ID, value);
  }

  public boolean isHasSgComorbidade() {
    return this.hasSgComorbidade;
  }

  public void setHasSgComorbidade(boolean hasSgComorbidade) {
    this.hasSgComorbidade = hasSgComorbidade;
    setHasSgComorbidadeIsSet(true);
  }

  public void unsetHasSgComorbidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HASSGCOMORBIDADE_ISSET_ID);
  }

  /** Returns true if field hasSgComorbidade is set (has been assigned a value) and false otherwise */
  public boolean isSetHasSgComorbidade() {
    return EncodingUtils.testBit(__isset_bitfield, __HASSGCOMORBIDADE_ISSET_ID);
  }

  public void setHasSgComorbidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HASSGCOMORBIDADE_ISSET_ID, value);
  }

  public long getDataResultado() {
    return this.dataResultado;
  }

  public void setDataResultado(long dataResultado) {
    this.dataResultado = dataResultado;
    setDataResultadoIsSet(true);
  }

  public void unsetDataResultado() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATARESULTADO_ISSET_ID);
  }

  /** Returns true if field dataResultado is set (has been assigned a value) and false otherwise */
  public boolean isSetDataResultado() {
    return EncodingUtils.testBit(__isset_bitfield, __DATARESULTADO_ISSET_ID);
  }

  public void setDataResultadoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATARESULTADO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case RESULTADO:
      if (value == null) {
        unsetResultado();
      } else {
        setResultado((Integer)value);
      }
      break;

    case HAS_SG_IDADE:
      if (value == null) {
        unsetHasSgIdade();
      } else {
        setHasSgIdade((Boolean)value);
      }
      break;

    case HAS_SG_PERCEPCAO_SAUDE:
      if (value == null) {
        unsetHasSgPercepcaoSaude();
      } else {
        setHasSgPercepcaoSaude((Boolean)value);
      }
      break;

    case HAS_SG_AVD_INSTRUMENTAL:
      if (value == null) {
        unsetHasSgAvdInstrumental();
      } else {
        setHasSgAvdInstrumental((Boolean)value);
      }
      break;

    case HAS_SG_AVD_BASICA:
      if (value == null) {
        unsetHasSgAvdBasica();
      } else {
        setHasSgAvdBasica((Boolean)value);
      }
      break;

    case HAS_SG_COGNICAO:
      if (value == null) {
        unsetHasSgCognicao();
      } else {
        setHasSgCognicao((Boolean)value);
      }
      break;

    case HAS_SG_HUMOR:
      if (value == null) {
        unsetHasSgHumor();
      } else {
        setHasSgHumor((Boolean)value);
      }
      break;

    case HAS_SG_ALCANCE_PREENSAO_PINCA:
      if (value == null) {
        unsetHasSgAlcancePreensaoPinca();
      } else {
        setHasSgAlcancePreensaoPinca((Boolean)value);
      }
      break;

    case HAS_SG_CAP_AEROBICA_MUSCULAR:
      if (value == null) {
        unsetHasSgCapAerobicaMuscular();
      } else {
        setHasSgCapAerobicaMuscular((Boolean)value);
      }
      break;

    case HAS_SG_MARCHA:
      if (value == null) {
        unsetHasSgMarcha();
      } else {
        setHasSgMarcha((Boolean)value);
      }
      break;

    case HAS_SG_CONTINENCIA:
      if (value == null) {
        unsetHasSgContinencia();
      } else {
        setHasSgContinencia((Boolean)value);
      }
      break;

    case HAS_SG_VISAO:
      if (value == null) {
        unsetHasSgVisao();
      } else {
        setHasSgVisao((Boolean)value);
      }
      break;

    case HAS_SG_AUDICAO:
      if (value == null) {
        unsetHasSgAudicao();
      } else {
        setHasSgAudicao((Boolean)value);
      }
      break;

    case HAS_SG_COMORBIDADE:
      if (value == null) {
        unsetHasSgComorbidade();
      } else {
        setHasSgComorbidade((Boolean)value);
      }
      break;

    case DATA_RESULTADO:
      if (value == null) {
        unsetDataResultado();
      } else {
        setDataResultado((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case RESULTADO:
      return getResultado();

    case HAS_SG_IDADE:
      return isHasSgIdade();

    case HAS_SG_PERCEPCAO_SAUDE:
      return isHasSgPercepcaoSaude();

    case HAS_SG_AVD_INSTRUMENTAL:
      return isHasSgAvdInstrumental();

    case HAS_SG_AVD_BASICA:
      return isHasSgAvdBasica();

    case HAS_SG_COGNICAO:
      return isHasSgCognicao();

    case HAS_SG_HUMOR:
      return isHasSgHumor();

    case HAS_SG_ALCANCE_PREENSAO_PINCA:
      return isHasSgAlcancePreensaoPinca();

    case HAS_SG_CAP_AEROBICA_MUSCULAR:
      return isHasSgCapAerobicaMuscular();

    case HAS_SG_MARCHA:
      return isHasSgMarcha();

    case HAS_SG_CONTINENCIA:
      return isHasSgContinencia();

    case HAS_SG_VISAO:
      return isHasSgVisao();

    case HAS_SG_AUDICAO:
      return isHasSgAudicao();

    case HAS_SG_COMORBIDADE:
      return isHasSgComorbidade();

    case DATA_RESULTADO:
      return getDataResultado();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case RESULTADO:
      return isSetResultado();
    case HAS_SG_IDADE:
      return isSetHasSgIdade();
    case HAS_SG_PERCEPCAO_SAUDE:
      return isSetHasSgPercepcaoSaude();
    case HAS_SG_AVD_INSTRUMENTAL:
      return isSetHasSgAvdInstrumental();
    case HAS_SG_AVD_BASICA:
      return isSetHasSgAvdBasica();
    case HAS_SG_COGNICAO:
      return isSetHasSgCognicao();
    case HAS_SG_HUMOR:
      return isSetHasSgHumor();
    case HAS_SG_ALCANCE_PREENSAO_PINCA:
      return isSetHasSgAlcancePreensaoPinca();
    case HAS_SG_CAP_AEROBICA_MUSCULAR:
      return isSetHasSgCapAerobicaMuscular();
    case HAS_SG_MARCHA:
      return isSetHasSgMarcha();
    case HAS_SG_CONTINENCIA:
      return isSetHasSgContinencia();
    case HAS_SG_VISAO:
      return isSetHasSgVisao();
    case HAS_SG_AUDICAO:
      return isSetHasSgAudicao();
    case HAS_SG_COMORBIDADE:
      return isSetHasSgComorbidade();
    case DATA_RESULTADO:
      return isSetDataResultado();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof IvcfThrift)
      return this.equals((IvcfThrift)that);
    return false;
  }

  public boolean equals(IvcfThrift that) {
    if (that == null)
      return false;

    boolean this_present_resultado = true && this.isSetResultado();
    boolean that_present_resultado = true && that.isSetResultado();
    if (this_present_resultado || that_present_resultado) {
      if (!(this_present_resultado && that_present_resultado))
        return false;
      if (this.resultado != that.resultado)
        return false;
    }

    boolean this_present_hasSgIdade = true && this.isSetHasSgIdade();
    boolean that_present_hasSgIdade = true && that.isSetHasSgIdade();
    if (this_present_hasSgIdade || that_present_hasSgIdade) {
      if (!(this_present_hasSgIdade && that_present_hasSgIdade))
        return false;
      if (this.hasSgIdade != that.hasSgIdade)
        return false;
    }

    boolean this_present_hasSgPercepcaoSaude = true && this.isSetHasSgPercepcaoSaude();
    boolean that_present_hasSgPercepcaoSaude = true && that.isSetHasSgPercepcaoSaude();
    if (this_present_hasSgPercepcaoSaude || that_present_hasSgPercepcaoSaude) {
      if (!(this_present_hasSgPercepcaoSaude && that_present_hasSgPercepcaoSaude))
        return false;
      if (this.hasSgPercepcaoSaude != that.hasSgPercepcaoSaude)
        return false;
    }

    boolean this_present_hasSgAvdInstrumental = true && this.isSetHasSgAvdInstrumental();
    boolean that_present_hasSgAvdInstrumental = true && that.isSetHasSgAvdInstrumental();
    if (this_present_hasSgAvdInstrumental || that_present_hasSgAvdInstrumental) {
      if (!(this_present_hasSgAvdInstrumental && that_present_hasSgAvdInstrumental))
        return false;
      if (this.hasSgAvdInstrumental != that.hasSgAvdInstrumental)
        return false;
    }

    boolean this_present_hasSgAvdBasica = true && this.isSetHasSgAvdBasica();
    boolean that_present_hasSgAvdBasica = true && that.isSetHasSgAvdBasica();
    if (this_present_hasSgAvdBasica || that_present_hasSgAvdBasica) {
      if (!(this_present_hasSgAvdBasica && that_present_hasSgAvdBasica))
        return false;
      if (this.hasSgAvdBasica != that.hasSgAvdBasica)
        return false;
    }

    boolean this_present_hasSgCognicao = true && this.isSetHasSgCognicao();
    boolean that_present_hasSgCognicao = true && that.isSetHasSgCognicao();
    if (this_present_hasSgCognicao || that_present_hasSgCognicao) {
      if (!(this_present_hasSgCognicao && that_present_hasSgCognicao))
        return false;
      if (this.hasSgCognicao != that.hasSgCognicao)
        return false;
    }

    boolean this_present_hasSgHumor = true && this.isSetHasSgHumor();
    boolean that_present_hasSgHumor = true && that.isSetHasSgHumor();
    if (this_present_hasSgHumor || that_present_hasSgHumor) {
      if (!(this_present_hasSgHumor && that_present_hasSgHumor))
        return false;
      if (this.hasSgHumor != that.hasSgHumor)
        return false;
    }

    boolean this_present_hasSgAlcancePreensaoPinca = true && this.isSetHasSgAlcancePreensaoPinca();
    boolean that_present_hasSgAlcancePreensaoPinca = true && that.isSetHasSgAlcancePreensaoPinca();
    if (this_present_hasSgAlcancePreensaoPinca || that_present_hasSgAlcancePreensaoPinca) {
      if (!(this_present_hasSgAlcancePreensaoPinca && that_present_hasSgAlcancePreensaoPinca))
        return false;
      if (this.hasSgAlcancePreensaoPinca != that.hasSgAlcancePreensaoPinca)
        return false;
    }

    boolean this_present_hasSgCapAerobicaMuscular = true && this.isSetHasSgCapAerobicaMuscular();
    boolean that_present_hasSgCapAerobicaMuscular = true && that.isSetHasSgCapAerobicaMuscular();
    if (this_present_hasSgCapAerobicaMuscular || that_present_hasSgCapAerobicaMuscular) {
      if (!(this_present_hasSgCapAerobicaMuscular && that_present_hasSgCapAerobicaMuscular))
        return false;
      if (this.hasSgCapAerobicaMuscular != that.hasSgCapAerobicaMuscular)
        return false;
    }

    boolean this_present_hasSgMarcha = true && this.isSetHasSgMarcha();
    boolean that_present_hasSgMarcha = true && that.isSetHasSgMarcha();
    if (this_present_hasSgMarcha || that_present_hasSgMarcha) {
      if (!(this_present_hasSgMarcha && that_present_hasSgMarcha))
        return false;
      if (this.hasSgMarcha != that.hasSgMarcha)
        return false;
    }

    boolean this_present_hasSgContinencia = true && this.isSetHasSgContinencia();
    boolean that_present_hasSgContinencia = true && that.isSetHasSgContinencia();
    if (this_present_hasSgContinencia || that_present_hasSgContinencia) {
      if (!(this_present_hasSgContinencia && that_present_hasSgContinencia))
        return false;
      if (this.hasSgContinencia != that.hasSgContinencia)
        return false;
    }

    boolean this_present_hasSgVisao = true && this.isSetHasSgVisao();
    boolean that_present_hasSgVisao = true && that.isSetHasSgVisao();
    if (this_present_hasSgVisao || that_present_hasSgVisao) {
      if (!(this_present_hasSgVisao && that_present_hasSgVisao))
        return false;
      if (this.hasSgVisao != that.hasSgVisao)
        return false;
    }

    boolean this_present_hasSgAudicao = true && this.isSetHasSgAudicao();
    boolean that_present_hasSgAudicao = true && that.isSetHasSgAudicao();
    if (this_present_hasSgAudicao || that_present_hasSgAudicao) {
      if (!(this_present_hasSgAudicao && that_present_hasSgAudicao))
        return false;
      if (this.hasSgAudicao != that.hasSgAudicao)
        return false;
    }

    boolean this_present_hasSgComorbidade = true && this.isSetHasSgComorbidade();
    boolean that_present_hasSgComorbidade = true && that.isSetHasSgComorbidade();
    if (this_present_hasSgComorbidade || that_present_hasSgComorbidade) {
      if (!(this_present_hasSgComorbidade && that_present_hasSgComorbidade))
        return false;
      if (this.hasSgComorbidade != that.hasSgComorbidade)
        return false;
    }

    boolean this_present_dataResultado = true && this.isSetDataResultado();
    boolean that_present_dataResultado = true && that.isSetDataResultado();
    if (this_present_dataResultado || that_present_dataResultado) {
      if (!(this_present_dataResultado && that_present_dataResultado))
        return false;
      if (this.dataResultado != that.dataResultado)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_resultado = true && (isSetResultado());
    list.add(present_resultado);
    if (present_resultado)
      list.add(resultado);

    boolean present_hasSgIdade = true && (isSetHasSgIdade());
    list.add(present_hasSgIdade);
    if (present_hasSgIdade)
      list.add(hasSgIdade);

    boolean present_hasSgPercepcaoSaude = true && (isSetHasSgPercepcaoSaude());
    list.add(present_hasSgPercepcaoSaude);
    if (present_hasSgPercepcaoSaude)
      list.add(hasSgPercepcaoSaude);

    boolean present_hasSgAvdInstrumental = true && (isSetHasSgAvdInstrumental());
    list.add(present_hasSgAvdInstrumental);
    if (present_hasSgAvdInstrumental)
      list.add(hasSgAvdInstrumental);

    boolean present_hasSgAvdBasica = true && (isSetHasSgAvdBasica());
    list.add(present_hasSgAvdBasica);
    if (present_hasSgAvdBasica)
      list.add(hasSgAvdBasica);

    boolean present_hasSgCognicao = true && (isSetHasSgCognicao());
    list.add(present_hasSgCognicao);
    if (present_hasSgCognicao)
      list.add(hasSgCognicao);

    boolean present_hasSgHumor = true && (isSetHasSgHumor());
    list.add(present_hasSgHumor);
    if (present_hasSgHumor)
      list.add(hasSgHumor);

    boolean present_hasSgAlcancePreensaoPinca = true && (isSetHasSgAlcancePreensaoPinca());
    list.add(present_hasSgAlcancePreensaoPinca);
    if (present_hasSgAlcancePreensaoPinca)
      list.add(hasSgAlcancePreensaoPinca);

    boolean present_hasSgCapAerobicaMuscular = true && (isSetHasSgCapAerobicaMuscular());
    list.add(present_hasSgCapAerobicaMuscular);
    if (present_hasSgCapAerobicaMuscular)
      list.add(hasSgCapAerobicaMuscular);

    boolean present_hasSgMarcha = true && (isSetHasSgMarcha());
    list.add(present_hasSgMarcha);
    if (present_hasSgMarcha)
      list.add(hasSgMarcha);

    boolean present_hasSgContinencia = true && (isSetHasSgContinencia());
    list.add(present_hasSgContinencia);
    if (present_hasSgContinencia)
      list.add(hasSgContinencia);

    boolean present_hasSgVisao = true && (isSetHasSgVisao());
    list.add(present_hasSgVisao);
    if (present_hasSgVisao)
      list.add(hasSgVisao);

    boolean present_hasSgAudicao = true && (isSetHasSgAudicao());
    list.add(present_hasSgAudicao);
    if (present_hasSgAudicao)
      list.add(hasSgAudicao);

    boolean present_hasSgComorbidade = true && (isSetHasSgComorbidade());
    list.add(present_hasSgComorbidade);
    if (present_hasSgComorbidade)
      list.add(hasSgComorbidade);

    boolean present_dataResultado = true && (isSetDataResultado());
    list.add(present_dataResultado);
    if (present_dataResultado)
      list.add(dataResultado);

    return list.hashCode();
  }

  @Override
  public int compareTo(IvcfThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetResultado()).compareTo(other.isSetResultado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResultado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resultado, other.resultado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgIdade()).compareTo(other.isSetHasSgIdade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgIdade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgIdade, other.hasSgIdade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgPercepcaoSaude()).compareTo(other.isSetHasSgPercepcaoSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgPercepcaoSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgPercepcaoSaude, other.hasSgPercepcaoSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgAvdInstrumental()).compareTo(other.isSetHasSgAvdInstrumental());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgAvdInstrumental()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgAvdInstrumental, other.hasSgAvdInstrumental);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgAvdBasica()).compareTo(other.isSetHasSgAvdBasica());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgAvdBasica()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgAvdBasica, other.hasSgAvdBasica);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgCognicao()).compareTo(other.isSetHasSgCognicao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgCognicao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgCognicao, other.hasSgCognicao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgHumor()).compareTo(other.isSetHasSgHumor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgHumor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgHumor, other.hasSgHumor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgAlcancePreensaoPinca()).compareTo(other.isSetHasSgAlcancePreensaoPinca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgAlcancePreensaoPinca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgAlcancePreensaoPinca, other.hasSgAlcancePreensaoPinca);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgCapAerobicaMuscular()).compareTo(other.isSetHasSgCapAerobicaMuscular());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgCapAerobicaMuscular()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgCapAerobicaMuscular, other.hasSgCapAerobicaMuscular);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgMarcha()).compareTo(other.isSetHasSgMarcha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgMarcha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgMarcha, other.hasSgMarcha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgContinencia()).compareTo(other.isSetHasSgContinencia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgContinencia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgContinencia, other.hasSgContinencia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgVisao()).compareTo(other.isSetHasSgVisao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgVisao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgVisao, other.hasSgVisao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgAudicao()).compareTo(other.isSetHasSgAudicao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgAudicao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgAudicao, other.hasSgAudicao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHasSgComorbidade()).compareTo(other.isSetHasSgComorbidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHasSgComorbidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hasSgComorbidade, other.hasSgComorbidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataResultado()).compareTo(other.isSetDataResultado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataResultado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataResultado, other.dataResultado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("IvcfThrift(");
    boolean first = true;

    if (isSetResultado()) {
      sb.append("resultado:");
      sb.append(this.resultado);
      first = false;
    }
    if (isSetHasSgIdade()) {
      if (!first) sb.append(", ");
      sb.append("hasSgIdade:");
      sb.append(this.hasSgIdade);
      first = false;
    }
    if (isSetHasSgPercepcaoSaude()) {
      if (!first) sb.append(", ");
      sb.append("hasSgPercepcaoSaude:");
      sb.append(this.hasSgPercepcaoSaude);
      first = false;
    }
    if (isSetHasSgAvdInstrumental()) {
      if (!first) sb.append(", ");
      sb.append("hasSgAvdInstrumental:");
      sb.append(this.hasSgAvdInstrumental);
      first = false;
    }
    if (isSetHasSgAvdBasica()) {
      if (!first) sb.append(", ");
      sb.append("hasSgAvdBasica:");
      sb.append(this.hasSgAvdBasica);
      first = false;
    }
    if (isSetHasSgCognicao()) {
      if (!first) sb.append(", ");
      sb.append("hasSgCognicao:");
      sb.append(this.hasSgCognicao);
      first = false;
    }
    if (isSetHasSgHumor()) {
      if (!first) sb.append(", ");
      sb.append("hasSgHumor:");
      sb.append(this.hasSgHumor);
      first = false;
    }
    if (isSetHasSgAlcancePreensaoPinca()) {
      if (!first) sb.append(", ");
      sb.append("hasSgAlcancePreensaoPinca:");
      sb.append(this.hasSgAlcancePreensaoPinca);
      first = false;
    }
    if (isSetHasSgCapAerobicaMuscular()) {
      if (!first) sb.append(", ");
      sb.append("hasSgCapAerobicaMuscular:");
      sb.append(this.hasSgCapAerobicaMuscular);
      first = false;
    }
    if (isSetHasSgMarcha()) {
      if (!first) sb.append(", ");
      sb.append("hasSgMarcha:");
      sb.append(this.hasSgMarcha);
      first = false;
    }
    if (isSetHasSgContinencia()) {
      if (!first) sb.append(", ");
      sb.append("hasSgContinencia:");
      sb.append(this.hasSgContinencia);
      first = false;
    }
    if (isSetHasSgVisao()) {
      if (!first) sb.append(", ");
      sb.append("hasSgVisao:");
      sb.append(this.hasSgVisao);
      first = false;
    }
    if (isSetHasSgAudicao()) {
      if (!first) sb.append(", ");
      sb.append("hasSgAudicao:");
      sb.append(this.hasSgAudicao);
      first = false;
    }
    if (isSetHasSgComorbidade()) {
      if (!first) sb.append(", ");
      sb.append("hasSgComorbidade:");
      sb.append(this.hasSgComorbidade);
      first = false;
    }
    if (isSetDataResultado()) {
      if (!first) sb.append(", ");
      sb.append("dataResultado:");
      sb.append(this.dataResultado);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class IvcfThriftStandardSchemeFactory implements SchemeFactory {
    public IvcfThriftStandardScheme getScheme() {
      return new IvcfThriftStandardScheme();
    }
  }

  private static class IvcfThriftStandardScheme extends StandardScheme<IvcfThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, IvcfThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RESULTADO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.resultado = iprot.readI32();
              struct.setResultadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HAS_SG_IDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgIdade = iprot.readBool();
              struct.setHasSgIdadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HAS_SG_PERCEPCAO_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgPercepcaoSaude = iprot.readBool();
              struct.setHasSgPercepcaoSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // HAS_SG_AVD_INSTRUMENTAL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgAvdInstrumental = iprot.readBool();
              struct.setHasSgAvdInstrumentalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // HAS_SG_AVD_BASICA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgAvdBasica = iprot.readBool();
              struct.setHasSgAvdBasicaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HAS_SG_COGNICAO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgCognicao = iprot.readBool();
              struct.setHasSgCognicaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // HAS_SG_HUMOR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgHumor = iprot.readBool();
              struct.setHasSgHumorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // HAS_SG_ALCANCE_PREENSAO_PINCA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgAlcancePreensaoPinca = iprot.readBool();
              struct.setHasSgAlcancePreensaoPincaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // HAS_SG_CAP_AEROBICA_MUSCULAR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgCapAerobicaMuscular = iprot.readBool();
              struct.setHasSgCapAerobicaMuscularIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // HAS_SG_MARCHA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgMarcha = iprot.readBool();
              struct.setHasSgMarchaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // HAS_SG_CONTINENCIA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgContinencia = iprot.readBool();
              struct.setHasSgContinenciaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // HAS_SG_VISAO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgVisao = iprot.readBool();
              struct.setHasSgVisaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // HAS_SG_AUDICAO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgAudicao = iprot.readBool();
              struct.setHasSgAudicaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // HAS_SG_COMORBIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.hasSgComorbidade = iprot.readBool();
              struct.setHasSgComorbidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DATA_RESULTADO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataResultado = iprot.readI64();
              struct.setDataResultadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, IvcfThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetResultado()) {
        oprot.writeFieldBegin(RESULTADO_FIELD_DESC);
        oprot.writeI32(struct.resultado);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgIdade()) {
        oprot.writeFieldBegin(HAS_SG_IDADE_FIELD_DESC);
        oprot.writeBool(struct.hasSgIdade);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgPercepcaoSaude()) {
        oprot.writeFieldBegin(HAS_SG_PERCEPCAO_SAUDE_FIELD_DESC);
        oprot.writeBool(struct.hasSgPercepcaoSaude);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgAvdInstrumental()) {
        oprot.writeFieldBegin(HAS_SG_AVD_INSTRUMENTAL_FIELD_DESC);
        oprot.writeBool(struct.hasSgAvdInstrumental);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgAvdBasica()) {
        oprot.writeFieldBegin(HAS_SG_AVD_BASICA_FIELD_DESC);
        oprot.writeBool(struct.hasSgAvdBasica);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgCognicao()) {
        oprot.writeFieldBegin(HAS_SG_COGNICAO_FIELD_DESC);
        oprot.writeBool(struct.hasSgCognicao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgHumor()) {
        oprot.writeFieldBegin(HAS_SG_HUMOR_FIELD_DESC);
        oprot.writeBool(struct.hasSgHumor);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgAlcancePreensaoPinca()) {
        oprot.writeFieldBegin(HAS_SG_ALCANCE_PREENSAO_PINCA_FIELD_DESC);
        oprot.writeBool(struct.hasSgAlcancePreensaoPinca);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgCapAerobicaMuscular()) {
        oprot.writeFieldBegin(HAS_SG_CAP_AEROBICA_MUSCULAR_FIELD_DESC);
        oprot.writeBool(struct.hasSgCapAerobicaMuscular);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgMarcha()) {
        oprot.writeFieldBegin(HAS_SG_MARCHA_FIELD_DESC);
        oprot.writeBool(struct.hasSgMarcha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgContinencia()) {
        oprot.writeFieldBegin(HAS_SG_CONTINENCIA_FIELD_DESC);
        oprot.writeBool(struct.hasSgContinencia);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgVisao()) {
        oprot.writeFieldBegin(HAS_SG_VISAO_FIELD_DESC);
        oprot.writeBool(struct.hasSgVisao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgAudicao()) {
        oprot.writeFieldBegin(HAS_SG_AUDICAO_FIELD_DESC);
        oprot.writeBool(struct.hasSgAudicao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHasSgComorbidade()) {
        oprot.writeFieldBegin(HAS_SG_COMORBIDADE_FIELD_DESC);
        oprot.writeBool(struct.hasSgComorbidade);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataResultado()) {
        oprot.writeFieldBegin(DATA_RESULTADO_FIELD_DESC);
        oprot.writeI64(struct.dataResultado);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class IvcfThriftTupleSchemeFactory implements SchemeFactory {
    public IvcfThriftTupleScheme getScheme() {
      return new IvcfThriftTupleScheme();
    }
  }

  private static class IvcfThriftTupleScheme extends TupleScheme<IvcfThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, IvcfThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetResultado()) {
        optionals.set(0);
      }
      if (struct.isSetHasSgIdade()) {
        optionals.set(1);
      }
      if (struct.isSetHasSgPercepcaoSaude()) {
        optionals.set(2);
      }
      if (struct.isSetHasSgAvdInstrumental()) {
        optionals.set(3);
      }
      if (struct.isSetHasSgAvdBasica()) {
        optionals.set(4);
      }
      if (struct.isSetHasSgCognicao()) {
        optionals.set(5);
      }
      if (struct.isSetHasSgHumor()) {
        optionals.set(6);
      }
      if (struct.isSetHasSgAlcancePreensaoPinca()) {
        optionals.set(7);
      }
      if (struct.isSetHasSgCapAerobicaMuscular()) {
        optionals.set(8);
      }
      if (struct.isSetHasSgMarcha()) {
        optionals.set(9);
      }
      if (struct.isSetHasSgContinencia()) {
        optionals.set(10);
      }
      if (struct.isSetHasSgVisao()) {
        optionals.set(11);
      }
      if (struct.isSetHasSgAudicao()) {
        optionals.set(12);
      }
      if (struct.isSetHasSgComorbidade()) {
        optionals.set(13);
      }
      if (struct.isSetDataResultado()) {
        optionals.set(14);
      }
      oprot.writeBitSet(optionals, 15);
      if (struct.isSetResultado()) {
        oprot.writeI32(struct.resultado);
      }
      if (struct.isSetHasSgIdade()) {
        oprot.writeBool(struct.hasSgIdade);
      }
      if (struct.isSetHasSgPercepcaoSaude()) {
        oprot.writeBool(struct.hasSgPercepcaoSaude);
      }
      if (struct.isSetHasSgAvdInstrumental()) {
        oprot.writeBool(struct.hasSgAvdInstrumental);
      }
      if (struct.isSetHasSgAvdBasica()) {
        oprot.writeBool(struct.hasSgAvdBasica);
      }
      if (struct.isSetHasSgCognicao()) {
        oprot.writeBool(struct.hasSgCognicao);
      }
      if (struct.isSetHasSgHumor()) {
        oprot.writeBool(struct.hasSgHumor);
      }
      if (struct.isSetHasSgAlcancePreensaoPinca()) {
        oprot.writeBool(struct.hasSgAlcancePreensaoPinca);
      }
      if (struct.isSetHasSgCapAerobicaMuscular()) {
        oprot.writeBool(struct.hasSgCapAerobicaMuscular);
      }
      if (struct.isSetHasSgMarcha()) {
        oprot.writeBool(struct.hasSgMarcha);
      }
      if (struct.isSetHasSgContinencia()) {
        oprot.writeBool(struct.hasSgContinencia);
      }
      if (struct.isSetHasSgVisao()) {
        oprot.writeBool(struct.hasSgVisao);
      }
      if (struct.isSetHasSgAudicao()) {
        oprot.writeBool(struct.hasSgAudicao);
      }
      if (struct.isSetHasSgComorbidade()) {
        oprot.writeBool(struct.hasSgComorbidade);
      }
      if (struct.isSetDataResultado()) {
        oprot.writeI64(struct.dataResultado);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, IvcfThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(15);
      if (incoming.get(0)) {
        struct.resultado = iprot.readI32();
        struct.setResultadoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.hasSgIdade = iprot.readBool();
        struct.setHasSgIdadeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.hasSgPercepcaoSaude = iprot.readBool();
        struct.setHasSgPercepcaoSaudeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.hasSgAvdInstrumental = iprot.readBool();
        struct.setHasSgAvdInstrumentalIsSet(true);
      }
      if (incoming.get(4)) {
        struct.hasSgAvdBasica = iprot.readBool();
        struct.setHasSgAvdBasicaIsSet(true);
      }
      if (incoming.get(5)) {
        struct.hasSgCognicao = iprot.readBool();
        struct.setHasSgCognicaoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.hasSgHumor = iprot.readBool();
        struct.setHasSgHumorIsSet(true);
      }
      if (incoming.get(7)) {
        struct.hasSgAlcancePreensaoPinca = iprot.readBool();
        struct.setHasSgAlcancePreensaoPincaIsSet(true);
      }
      if (incoming.get(8)) {
        struct.hasSgCapAerobicaMuscular = iprot.readBool();
        struct.setHasSgCapAerobicaMuscularIsSet(true);
      }
      if (incoming.get(9)) {
        struct.hasSgMarcha = iprot.readBool();
        struct.setHasSgMarchaIsSet(true);
      }
      if (incoming.get(10)) {
        struct.hasSgContinencia = iprot.readBool();
        struct.setHasSgContinenciaIsSet(true);
      }
      if (incoming.get(11)) {
        struct.hasSgVisao = iprot.readBool();
        struct.setHasSgVisaoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.hasSgAudicao = iprot.readBool();
        struct.setHasSgAudicaoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.hasSgComorbidade = iprot.readBool();
        struct.setHasSgComorbidadeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.dataResultado = iprot.readI64();
        struct.setDataResultadoIsSet(true);
      }
    }
  }

}

