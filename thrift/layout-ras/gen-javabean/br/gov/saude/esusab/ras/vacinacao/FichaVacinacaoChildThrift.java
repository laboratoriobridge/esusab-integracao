/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.vacinacao;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-07")
public class FichaVacinacaoChildThrift implements org.apache.thrift.TBase<FichaVacinacaoChildThrift, FichaVacinacaoChildThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaVacinacaoChildThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaVacinacaoChildThrift");

  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NUM_PRONTUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("numProntuario", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CNS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCidadao", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DT_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dtNascimento", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField LOCAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("localAtendimento", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField VIAJANTE_FIELD_DESC = new org.apache.thrift.protocol.TField("viajante", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField COMUNICANTE_HANSENIASE_FIELD_DESC = new org.apache.thrift.protocol.TField("comunicanteHanseniase", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField GESTANTE_FIELD_DESC = new org.apache.thrift.protocol.TField("gestante", org.apache.thrift.protocol.TType.BOOL, (short)9);
  private static final org.apache.thrift.protocol.TField PUERPERA_FIELD_DESC = new org.apache.thrift.protocol.TField("puerpera", org.apache.thrift.protocol.TType.BOOL, (short)10);
  private static final org.apache.thrift.protocol.TField VACINAS_FIELD_DESC = new org.apache.thrift.protocol.TField("vacinas", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField DATA_HORA_INICIAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataHoraInicialAtendimento", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField DATA_HORA_FINAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataHoraFinalAtendimento", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaVacinacaoChildThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaVacinacaoChildThriftTupleSchemeFactory());
  }

  private long turno; // optional
  private String numProntuario; // optional
  private String cnsCidadao; // optional
  private long dtNascimento; // optional
  private long sexo; // optional
  private long localAtendimento; // optional
  private boolean viajante; // optional
  private boolean comunicanteHanseniase; // optional
  private boolean gestante; // optional
  private boolean puerpera; // optional
  private List<VacinaRowThrift> vacinas; // optional
  private long dataHoraInicialAtendimento; // optional
  private long dataHoraFinalAtendimento; // optional
  private String cpfCidadao; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TURNO((short)1, "turno"),
    NUM_PRONTUARIO((short)2, "numProntuario"),
    CNS_CIDADAO((short)3, "cnsCidadao"),
    DT_NASCIMENTO((short)4, "dtNascimento"),
    SEXO((short)5, "sexo"),
    LOCAL_ATENDIMENTO((short)6, "localAtendimento"),
    VIAJANTE((short)7, "viajante"),
    COMUNICANTE_HANSENIASE((short)8, "comunicanteHanseniase"),
    GESTANTE((short)9, "gestante"),
    PUERPERA((short)10, "puerpera"),
    VACINAS((short)11, "vacinas"),
    DATA_HORA_INICIAL_ATENDIMENTO((short)12, "dataHoraInicialAtendimento"),
    DATA_HORA_FINAL_ATENDIMENTO((short)13, "dataHoraFinalAtendimento"),
    CPF_CIDADAO((short)14, "cpfCidadao");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TURNO
          return TURNO;
        case 2: // NUM_PRONTUARIO
          return NUM_PRONTUARIO;
        case 3: // CNS_CIDADAO
          return CNS_CIDADAO;
        case 4: // DT_NASCIMENTO
          return DT_NASCIMENTO;
        case 5: // SEXO
          return SEXO;
        case 6: // LOCAL_ATENDIMENTO
          return LOCAL_ATENDIMENTO;
        case 7: // VIAJANTE
          return VIAJANTE;
        case 8: // COMUNICANTE_HANSENIASE
          return COMUNICANTE_HANSENIASE;
        case 9: // GESTANTE
          return GESTANTE;
        case 10: // PUERPERA
          return PUERPERA;
        case 11: // VACINAS
          return VACINAS;
        case 12: // DATA_HORA_INICIAL_ATENDIMENTO
          return DATA_HORA_INICIAL_ATENDIMENTO;
        case 13: // DATA_HORA_FINAL_ATENDIMENTO
          return DATA_HORA_FINAL_ATENDIMENTO;
        case 14: // CPF_CIDADAO
          return CPF_CIDADAO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TURNO_ISSET_ID = 0;
  private static final int __DTNASCIMENTO_ISSET_ID = 1;
  private static final int __SEXO_ISSET_ID = 2;
  private static final int __LOCALATENDIMENTO_ISSET_ID = 3;
  private static final int __VIAJANTE_ISSET_ID = 4;
  private static final int __COMUNICANTEHANSENIASE_ISSET_ID = 5;
  private static final int __GESTANTE_ISSET_ID = 6;
  private static final int __PUERPERA_ISSET_ID = 7;
  private static final int __DATAHORAINICIALATENDIMENTO_ISSET_ID = 8;
  private static final int __DATAHORAFINALATENDIMENTO_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TURNO,_Fields.NUM_PRONTUARIO,_Fields.CNS_CIDADAO,_Fields.DT_NASCIMENTO,_Fields.SEXO,_Fields.LOCAL_ATENDIMENTO,_Fields.VIAJANTE,_Fields.COMUNICANTE_HANSENIASE,_Fields.GESTANTE,_Fields.PUERPERA,_Fields.VACINAS,_Fields.DATA_HORA_INICIAL_ATENDIMENTO,_Fields.DATA_HORA_FINAL_ATENDIMENTO,_Fields.CPF_CIDADAO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_PRONTUARIO, new org.apache.thrift.meta_data.FieldMetaData("numProntuario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cnsCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dtNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("localAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VIAJANTE, new org.apache.thrift.meta_data.FieldMetaData("viajante", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.COMUNICANTE_HANSENIASE, new org.apache.thrift.meta_data.FieldMetaData("comunicanteHanseniase", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.GESTANTE, new org.apache.thrift.meta_data.FieldMetaData("gestante", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PUERPERA, new org.apache.thrift.meta_data.FieldMetaData("puerpera", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.VACINAS, new org.apache.thrift.meta_data.FieldMetaData("vacinas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, VacinaRowThrift.class))));
    tmpMap.put(_Fields.DATA_HORA_INICIAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataHoraInicialAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DATA_HORA_FINAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataHoraFinalAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaVacinacaoChildThrift.class, metaDataMap);
  }

  public FichaVacinacaoChildThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaVacinacaoChildThrift(FichaVacinacaoChildThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.turno = other.turno;
    if (other.isSetNumProntuario()) {
      this.numProntuario = other.numProntuario;
    }
    if (other.isSetCnsCidadao()) {
      this.cnsCidadao = other.cnsCidadao;
    }
    this.dtNascimento = other.dtNascimento;
    this.sexo = other.sexo;
    this.localAtendimento = other.localAtendimento;
    this.viajante = other.viajante;
    this.comunicanteHanseniase = other.comunicanteHanseniase;
    this.gestante = other.gestante;
    this.puerpera = other.puerpera;
    if (other.isSetVacinas()) {
      List<VacinaRowThrift> __this__vacinas = new ArrayList<VacinaRowThrift>(other.vacinas.size());
      for (VacinaRowThrift other_element : other.vacinas) {
        __this__vacinas.add(new VacinaRowThrift(other_element));
      }
      this.vacinas = __this__vacinas;
    }
    this.dataHoraInicialAtendimento = other.dataHoraInicialAtendimento;
    this.dataHoraFinalAtendimento = other.dataHoraFinalAtendimento;
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
  }

  public FichaVacinacaoChildThrift deepCopy() {
    return new FichaVacinacaoChildThrift(this);
  }

  @Override
  public void clear() {
    setTurnoIsSet(false);
    this.turno = 0;
    this.numProntuario = null;
    this.cnsCidadao = null;
    setDtNascimentoIsSet(false);
    this.dtNascimento = 0;
    setSexoIsSet(false);
    this.sexo = 0;
    setLocalAtendimentoIsSet(false);
    this.localAtendimento = 0;
    setViajanteIsSet(false);
    this.viajante = false;
    setComunicanteHanseniaseIsSet(false);
    this.comunicanteHanseniase = false;
    setGestanteIsSet(false);
    this.gestante = false;
    setPuerperaIsSet(false);
    this.puerpera = false;
    this.vacinas = null;
    setDataHoraInicialAtendimentoIsSet(false);
    this.dataHoraInicialAtendimento = 0;
    setDataHoraFinalAtendimentoIsSet(false);
    this.dataHoraFinalAtendimento = 0;
    this.cpfCidadao = null;
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public String getNumProntuario() {
    return this.numProntuario;
  }

  public void setNumProntuario(String numProntuario) {
    this.numProntuario = numProntuario;
  }

  public void unsetNumProntuario() {
    this.numProntuario = null;
  }

  /** Returns true if field numProntuario is set (has been assigned a value) and false otherwise */
  public boolean isSetNumProntuario() {
    return this.numProntuario != null;
  }

  public void setNumProntuarioIsSet(boolean value) {
    if (!value) {
      this.numProntuario = null;
    }
  }

  public String getCnsCidadao() {
    return this.cnsCidadao;
  }

  public void setCnsCidadao(String cnsCidadao) {
    this.cnsCidadao = cnsCidadao;
  }

  public void unsetCnsCidadao() {
    this.cnsCidadao = null;
  }

  /** Returns true if field cnsCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCidadao() {
    return this.cnsCidadao != null;
  }

  public void setCnsCidadaoIsSet(boolean value) {
    if (!value) {
      this.cnsCidadao = null;
    }
  }

  public long getDtNascimento() {
    return this.dtNascimento;
  }

  public void setDtNascimento(long dtNascimento) {
    this.dtNascimento = dtNascimento;
    setDtNascimentoIsSet(true);
  }

  public void unsetDtNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTNASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dtNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDtNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DTNASCIMENTO_ISSET_ID);
  }

  public void setDtNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTNASCIMENTO_ISSET_ID, value);
  }

  public long getSexo() {
    return this.sexo;
  }

  public void setSexo(long sexo) {
    this.sexo = sexo;
    setSexoIsSet(true);
  }

  public void unsetSexo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  public void setSexoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXO_ISSET_ID, value);
  }

  public long getLocalAtendimento() {
    return this.localAtendimento;
  }

  public void setLocalAtendimento(long localAtendimento) {
    this.localAtendimento = localAtendimento;
    setLocalAtendimentoIsSet(true);
  }

  public void unsetLocalAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field localAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID);
  }

  public void setLocalAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID, value);
  }

  public boolean isViajante() {
    return this.viajante;
  }

  public void setViajante(boolean viajante) {
    this.viajante = viajante;
    setViajanteIsSet(true);
  }

  public void unsetViajante() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VIAJANTE_ISSET_ID);
  }

  /** Returns true if field viajante is set (has been assigned a value) and false otherwise */
  public boolean isSetViajante() {
    return EncodingUtils.testBit(__isset_bitfield, __VIAJANTE_ISSET_ID);
  }

  public void setViajanteIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VIAJANTE_ISSET_ID, value);
  }

  public boolean isComunicanteHanseniase() {
    return this.comunicanteHanseniase;
  }

  public void setComunicanteHanseniase(boolean comunicanteHanseniase) {
    this.comunicanteHanseniase = comunicanteHanseniase;
    setComunicanteHanseniaseIsSet(true);
  }

  public void unsetComunicanteHanseniase() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMUNICANTEHANSENIASE_ISSET_ID);
  }

  /** Returns true if field comunicanteHanseniase is set (has been assigned a value) and false otherwise */
  public boolean isSetComunicanteHanseniase() {
    return EncodingUtils.testBit(__isset_bitfield, __COMUNICANTEHANSENIASE_ISSET_ID);
  }

  public void setComunicanteHanseniaseIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMUNICANTEHANSENIASE_ISSET_ID, value);
  }

  public boolean isGestante() {
    return this.gestante;
  }

  public void setGestante(boolean gestante) {
    this.gestante = gestante;
    setGestanteIsSet(true);
  }

  public void unsetGestante() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GESTANTE_ISSET_ID);
  }

  /** Returns true if field gestante is set (has been assigned a value) and false otherwise */
  public boolean isSetGestante() {
    return EncodingUtils.testBit(__isset_bitfield, __GESTANTE_ISSET_ID);
  }

  public void setGestanteIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GESTANTE_ISSET_ID, value);
  }

  public boolean isPuerpera() {
    return this.puerpera;
  }

  public void setPuerpera(boolean puerpera) {
    this.puerpera = puerpera;
    setPuerperaIsSet(true);
  }

  public void unsetPuerpera() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PUERPERA_ISSET_ID);
  }

  /** Returns true if field puerpera is set (has been assigned a value) and false otherwise */
  public boolean isSetPuerpera() {
    return EncodingUtils.testBit(__isset_bitfield, __PUERPERA_ISSET_ID);
  }

  public void setPuerperaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PUERPERA_ISSET_ID, value);
  }

  public int getVacinasSize() {
    return (this.vacinas == null) ? 0 : this.vacinas.size();
  }

  public java.util.Iterator<VacinaRowThrift> getVacinasIterator() {
    return (this.vacinas == null) ? null : this.vacinas.iterator();
  }

  public void addToVacinas(VacinaRowThrift elem) {
    if (this.vacinas == null) {
      this.vacinas = new ArrayList<VacinaRowThrift>();
    }
    this.vacinas.add(elem);
  }

  public List<VacinaRowThrift> getVacinas() {
    return this.vacinas;
  }

  public void setVacinas(List<VacinaRowThrift> vacinas) {
    this.vacinas = vacinas;
  }

  public void unsetVacinas() {
    this.vacinas = null;
  }

  /** Returns true if field vacinas is set (has been assigned a value) and false otherwise */
  public boolean isSetVacinas() {
    return this.vacinas != null;
  }

  public void setVacinasIsSet(boolean value) {
    if (!value) {
      this.vacinas = null;
    }
  }

  public long getDataHoraInicialAtendimento() {
    return this.dataHoraInicialAtendimento;
  }

  public void setDataHoraInicialAtendimento(long dataHoraInicialAtendimento) {
    this.dataHoraInicialAtendimento = dataHoraInicialAtendimento;
    setDataHoraInicialAtendimentoIsSet(true);
  }

  public void unsetDataHoraInicialAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATAHORAINICIALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field dataHoraInicialAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataHoraInicialAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATAHORAINICIALATENDIMENTO_ISSET_ID);
  }

  public void setDataHoraInicialAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATAHORAINICIALATENDIMENTO_ISSET_ID, value);
  }

  public long getDataHoraFinalAtendimento() {
    return this.dataHoraFinalAtendimento;
  }

  public void setDataHoraFinalAtendimento(long dataHoraFinalAtendimento) {
    this.dataHoraFinalAtendimento = dataHoraFinalAtendimento;
    setDataHoraFinalAtendimentoIsSet(true);
  }

  public void unsetDataHoraFinalAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATAHORAFINALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field dataHoraFinalAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataHoraFinalAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATAHORAFINALATENDIMENTO_ISSET_ID);
  }

  public void setDataHoraFinalAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATAHORAFINALATENDIMENTO_ISSET_ID, value);
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case NUM_PRONTUARIO:
      if (value == null) {
        unsetNumProntuario();
      } else {
        setNumProntuario((String)value);
      }
      break;

    case CNS_CIDADAO:
      if (value == null) {
        unsetCnsCidadao();
      } else {
        setCnsCidadao((String)value);
      }
      break;

    case DT_NASCIMENTO:
      if (value == null) {
        unsetDtNascimento();
      } else {
        setDtNascimento((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((Long)value);
      }
      break;

    case LOCAL_ATENDIMENTO:
      if (value == null) {
        unsetLocalAtendimento();
      } else {
        setLocalAtendimento((Long)value);
      }
      break;

    case VIAJANTE:
      if (value == null) {
        unsetViajante();
      } else {
        setViajante((Boolean)value);
      }
      break;

    case COMUNICANTE_HANSENIASE:
      if (value == null) {
        unsetComunicanteHanseniase();
      } else {
        setComunicanteHanseniase((Boolean)value);
      }
      break;

    case GESTANTE:
      if (value == null) {
        unsetGestante();
      } else {
        setGestante((Boolean)value);
      }
      break;

    case PUERPERA:
      if (value == null) {
        unsetPuerpera();
      } else {
        setPuerpera((Boolean)value);
      }
      break;

    case VACINAS:
      if (value == null) {
        unsetVacinas();
      } else {
        setVacinas((List<VacinaRowThrift>)value);
      }
      break;

    case DATA_HORA_INICIAL_ATENDIMENTO:
      if (value == null) {
        unsetDataHoraInicialAtendimento();
      } else {
        setDataHoraInicialAtendimento((Long)value);
      }
      break;

    case DATA_HORA_FINAL_ATENDIMENTO:
      if (value == null) {
        unsetDataHoraFinalAtendimento();
      } else {
        setDataHoraFinalAtendimento((Long)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TURNO:
      return getTurno();

    case NUM_PRONTUARIO:
      return getNumProntuario();

    case CNS_CIDADAO:
      return getCnsCidadao();

    case DT_NASCIMENTO:
      return getDtNascimento();

    case SEXO:
      return getSexo();

    case LOCAL_ATENDIMENTO:
      return getLocalAtendimento();

    case VIAJANTE:
      return isViajante();

    case COMUNICANTE_HANSENIASE:
      return isComunicanteHanseniase();

    case GESTANTE:
      return isGestante();

    case PUERPERA:
      return isPuerpera();

    case VACINAS:
      return getVacinas();

    case DATA_HORA_INICIAL_ATENDIMENTO:
      return getDataHoraInicialAtendimento();

    case DATA_HORA_FINAL_ATENDIMENTO:
      return getDataHoraFinalAtendimento();

    case CPF_CIDADAO:
      return getCpfCidadao();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TURNO:
      return isSetTurno();
    case NUM_PRONTUARIO:
      return isSetNumProntuario();
    case CNS_CIDADAO:
      return isSetCnsCidadao();
    case DT_NASCIMENTO:
      return isSetDtNascimento();
    case SEXO:
      return isSetSexo();
    case LOCAL_ATENDIMENTO:
      return isSetLocalAtendimento();
    case VIAJANTE:
      return isSetViajante();
    case COMUNICANTE_HANSENIASE:
      return isSetComunicanteHanseniase();
    case GESTANTE:
      return isSetGestante();
    case PUERPERA:
      return isSetPuerpera();
    case VACINAS:
      return isSetVacinas();
    case DATA_HORA_INICIAL_ATENDIMENTO:
      return isSetDataHoraInicialAtendimento();
    case DATA_HORA_FINAL_ATENDIMENTO:
      return isSetDataHoraFinalAtendimento();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaVacinacaoChildThrift)
      return this.equals((FichaVacinacaoChildThrift)that);
    return false;
  }

  public boolean equals(FichaVacinacaoChildThrift that) {
    if (that == null)
      return false;

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_numProntuario = true && this.isSetNumProntuario();
    boolean that_present_numProntuario = true && that.isSetNumProntuario();
    if (this_present_numProntuario || that_present_numProntuario) {
      if (!(this_present_numProntuario && that_present_numProntuario))
        return false;
      if (!this.numProntuario.equals(that.numProntuario))
        return false;
    }

    boolean this_present_cnsCidadao = true && this.isSetCnsCidadao();
    boolean that_present_cnsCidadao = true && that.isSetCnsCidadao();
    if (this_present_cnsCidadao || that_present_cnsCidadao) {
      if (!(this_present_cnsCidadao && that_present_cnsCidadao))
        return false;
      if (!this.cnsCidadao.equals(that.cnsCidadao))
        return false;
    }

    boolean this_present_dtNascimento = true && this.isSetDtNascimento();
    boolean that_present_dtNascimento = true && that.isSetDtNascimento();
    if (this_present_dtNascimento || that_present_dtNascimento) {
      if (!(this_present_dtNascimento && that_present_dtNascimento))
        return false;
      if (this.dtNascimento != that.dtNascimento)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (this.sexo != that.sexo)
        return false;
    }

    boolean this_present_localAtendimento = true && this.isSetLocalAtendimento();
    boolean that_present_localAtendimento = true && that.isSetLocalAtendimento();
    if (this_present_localAtendimento || that_present_localAtendimento) {
      if (!(this_present_localAtendimento && that_present_localAtendimento))
        return false;
      if (this.localAtendimento != that.localAtendimento)
        return false;
    }

    boolean this_present_viajante = true && this.isSetViajante();
    boolean that_present_viajante = true && that.isSetViajante();
    if (this_present_viajante || that_present_viajante) {
      if (!(this_present_viajante && that_present_viajante))
        return false;
      if (this.viajante != that.viajante)
        return false;
    }

    boolean this_present_comunicanteHanseniase = true && this.isSetComunicanteHanseniase();
    boolean that_present_comunicanteHanseniase = true && that.isSetComunicanteHanseniase();
    if (this_present_comunicanteHanseniase || that_present_comunicanteHanseniase) {
      if (!(this_present_comunicanteHanseniase && that_present_comunicanteHanseniase))
        return false;
      if (this.comunicanteHanseniase != that.comunicanteHanseniase)
        return false;
    }

    boolean this_present_gestante = true && this.isSetGestante();
    boolean that_present_gestante = true && that.isSetGestante();
    if (this_present_gestante || that_present_gestante) {
      if (!(this_present_gestante && that_present_gestante))
        return false;
      if (this.gestante != that.gestante)
        return false;
    }

    boolean this_present_puerpera = true && this.isSetPuerpera();
    boolean that_present_puerpera = true && that.isSetPuerpera();
    if (this_present_puerpera || that_present_puerpera) {
      if (!(this_present_puerpera && that_present_puerpera))
        return false;
      if (this.puerpera != that.puerpera)
        return false;
    }

    boolean this_present_vacinas = true && this.isSetVacinas();
    boolean that_present_vacinas = true && that.isSetVacinas();
    if (this_present_vacinas || that_present_vacinas) {
      if (!(this_present_vacinas && that_present_vacinas))
        return false;
      if (!this.vacinas.equals(that.vacinas))
        return false;
    }

    boolean this_present_dataHoraInicialAtendimento = true && this.isSetDataHoraInicialAtendimento();
    boolean that_present_dataHoraInicialAtendimento = true && that.isSetDataHoraInicialAtendimento();
    if (this_present_dataHoraInicialAtendimento || that_present_dataHoraInicialAtendimento) {
      if (!(this_present_dataHoraInicialAtendimento && that_present_dataHoraInicialAtendimento))
        return false;
      if (this.dataHoraInicialAtendimento != that.dataHoraInicialAtendimento)
        return false;
    }

    boolean this_present_dataHoraFinalAtendimento = true && this.isSetDataHoraFinalAtendimento();
    boolean that_present_dataHoraFinalAtendimento = true && that.isSetDataHoraFinalAtendimento();
    if (this_present_dataHoraFinalAtendimento || that_present_dataHoraFinalAtendimento) {
      if (!(this_present_dataHoraFinalAtendimento && that_present_dataHoraFinalAtendimento))
        return false;
      if (this.dataHoraFinalAtendimento != that.dataHoraFinalAtendimento)
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_turno = true && (isSetTurno());
    list.add(present_turno);
    if (present_turno)
      list.add(turno);

    boolean present_numProntuario = true && (isSetNumProntuario());
    list.add(present_numProntuario);
    if (present_numProntuario)
      list.add(numProntuario);

    boolean present_cnsCidadao = true && (isSetCnsCidadao());
    list.add(present_cnsCidadao);
    if (present_cnsCidadao)
      list.add(cnsCidadao);

    boolean present_dtNascimento = true && (isSetDtNascimento());
    list.add(present_dtNascimento);
    if (present_dtNascimento)
      list.add(dtNascimento);

    boolean present_sexo = true && (isSetSexo());
    list.add(present_sexo);
    if (present_sexo)
      list.add(sexo);

    boolean present_localAtendimento = true && (isSetLocalAtendimento());
    list.add(present_localAtendimento);
    if (present_localAtendimento)
      list.add(localAtendimento);

    boolean present_viajante = true && (isSetViajante());
    list.add(present_viajante);
    if (present_viajante)
      list.add(viajante);

    boolean present_comunicanteHanseniase = true && (isSetComunicanteHanseniase());
    list.add(present_comunicanteHanseniase);
    if (present_comunicanteHanseniase)
      list.add(comunicanteHanseniase);

    boolean present_gestante = true && (isSetGestante());
    list.add(present_gestante);
    if (present_gestante)
      list.add(gestante);

    boolean present_puerpera = true && (isSetPuerpera());
    list.add(present_puerpera);
    if (present_puerpera)
      list.add(puerpera);

    boolean present_vacinas = true && (isSetVacinas());
    list.add(present_vacinas);
    if (present_vacinas)
      list.add(vacinas);

    boolean present_dataHoraInicialAtendimento = true && (isSetDataHoraInicialAtendimento());
    list.add(present_dataHoraInicialAtendimento);
    if (present_dataHoraInicialAtendimento)
      list.add(dataHoraInicialAtendimento);

    boolean present_dataHoraFinalAtendimento = true && (isSetDataHoraFinalAtendimento());
    list.add(present_dataHoraFinalAtendimento);
    if (present_dataHoraFinalAtendimento)
      list.add(dataHoraFinalAtendimento);

    boolean present_cpfCidadao = true && (isSetCpfCidadao());
    list.add(present_cpfCidadao);
    if (present_cpfCidadao)
      list.add(cpfCidadao);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaVacinacaoChildThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(other.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, other.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumProntuario()).compareTo(other.isSetNumProntuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumProntuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numProntuario, other.numProntuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsCidadao()).compareTo(other.isSetCnsCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCidadao, other.cnsCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtNascimento()).compareTo(other.isSetDtNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtNascimento, other.dtNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(other.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, other.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalAtendimento()).compareTo(other.isSetLocalAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localAtendimento, other.localAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetViajante()).compareTo(other.isSetViajante());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViajante()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.viajante, other.viajante);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComunicanteHanseniase()).compareTo(other.isSetComunicanteHanseniase());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComunicanteHanseniase()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comunicanteHanseniase, other.comunicanteHanseniase);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGestante()).compareTo(other.isSetGestante());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGestante()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gestante, other.gestante);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPuerpera()).compareTo(other.isSetPuerpera());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPuerpera()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.puerpera, other.puerpera);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVacinas()).compareTo(other.isSetVacinas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVacinas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vacinas, other.vacinas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataHoraInicialAtendimento()).compareTo(other.isSetDataHoraInicialAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataHoraInicialAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataHoraInicialAtendimento, other.dataHoraInicialAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataHoraFinalAtendimento()).compareTo(other.isSetDataHoraFinalAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataHoraFinalAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataHoraFinalAtendimento, other.dataHoraFinalAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(other.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, other.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaVacinacaoChildThrift(");
    boolean first = true;

    if (isSetTurno()) {
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetNumProntuario()) {
      if (!first) sb.append(", ");
      sb.append("numProntuario:");
      if (this.numProntuario == null) {
        sb.append("null");
      } else {
        sb.append(this.numProntuario);
      }
      first = false;
    }
    if (isSetCnsCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cnsCidadao:");
      if (this.cnsCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCidadao);
      }
      first = false;
    }
    if (isSetDtNascimento()) {
      if (!first) sb.append(", ");
      sb.append("dtNascimento:");
      sb.append(this.dtNascimento);
      first = false;
    }
    if (isSetSexo()) {
      if (!first) sb.append(", ");
      sb.append("sexo:");
      sb.append(this.sexo);
      first = false;
    }
    if (isSetLocalAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("localAtendimento:");
      sb.append(this.localAtendimento);
      first = false;
    }
    if (isSetViajante()) {
      if (!first) sb.append(", ");
      sb.append("viajante:");
      sb.append(this.viajante);
      first = false;
    }
    if (isSetComunicanteHanseniase()) {
      if (!first) sb.append(", ");
      sb.append("comunicanteHanseniase:");
      sb.append(this.comunicanteHanseniase);
      first = false;
    }
    if (isSetGestante()) {
      if (!first) sb.append(", ");
      sb.append("gestante:");
      sb.append(this.gestante);
      first = false;
    }
    if (isSetPuerpera()) {
      if (!first) sb.append(", ");
      sb.append("puerpera:");
      sb.append(this.puerpera);
      first = false;
    }
    if (isSetVacinas()) {
      if (!first) sb.append(", ");
      sb.append("vacinas:");
      if (this.vacinas == null) {
        sb.append("null");
      } else {
        sb.append(this.vacinas);
      }
      first = false;
    }
    if (isSetDataHoraInicialAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("dataHoraInicialAtendimento:");
      sb.append(this.dataHoraInicialAtendimento);
      first = false;
    }
    if (isSetDataHoraFinalAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("dataHoraFinalAtendimento:");
      sb.append(this.dataHoraFinalAtendimento);
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaVacinacaoChildThriftStandardSchemeFactory implements SchemeFactory {
    public FichaVacinacaoChildThriftStandardScheme getScheme() {
      return new FichaVacinacaoChildThriftStandardScheme();
    }
  }

  private static class FichaVacinacaoChildThriftStandardScheme extends StandardScheme<FichaVacinacaoChildThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaVacinacaoChildThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NUM_PRONTUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numProntuario = iprot.readString();
              struct.setNumProntuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CNS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCidadao = iprot.readString();
              struct.setCnsCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DT_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtNascimento = iprot.readI64();
              struct.setDtNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexo = iprot.readI64();
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LOCAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.localAtendimento = iprot.readI64();
              struct.setLocalAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // VIAJANTE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.viajante = iprot.readBool();
              struct.setViajanteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // COMUNICANTE_HANSENIASE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.comunicanteHanseniase = iprot.readBool();
              struct.setComunicanteHanseniaseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // GESTANTE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.gestante = iprot.readBool();
              struct.setGestanteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PUERPERA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.puerpera = iprot.readBool();
              struct.setPuerperaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // VACINAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.vacinas = new ArrayList<VacinaRowThrift>(_list0.size);
                VacinaRowThrift _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new VacinaRowThrift();
                  _elem1.read(iprot);
                  struct.vacinas.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setVacinasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DATA_HORA_INICIAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataHoraInicialAtendimento = iprot.readI64();
              struct.setDataHoraInicialAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DATA_HORA_FINAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataHoraFinalAtendimento = iprot.readI64();
              struct.setDataHoraFinalAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaVacinacaoChildThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.numProntuario != null) {
        if (struct.isSetNumProntuario()) {
          oprot.writeFieldBegin(NUM_PRONTUARIO_FIELD_DESC);
          oprot.writeString(struct.numProntuario);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cnsCidadao != null) {
        if (struct.isSetCnsCidadao()) {
          oprot.writeFieldBegin(CNS_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cnsCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDtNascimento()) {
        oprot.writeFieldBegin(DT_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dtNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexo()) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI64(struct.sexo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLocalAtendimento()) {
        oprot.writeFieldBegin(LOCAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.localAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetViajante()) {
        oprot.writeFieldBegin(VIAJANTE_FIELD_DESC);
        oprot.writeBool(struct.viajante);
        oprot.writeFieldEnd();
      }
      if (struct.isSetComunicanteHanseniase()) {
        oprot.writeFieldBegin(COMUNICANTE_HANSENIASE_FIELD_DESC);
        oprot.writeBool(struct.comunicanteHanseniase);
        oprot.writeFieldEnd();
      }
      if (struct.isSetGestante()) {
        oprot.writeFieldBegin(GESTANTE_FIELD_DESC);
        oprot.writeBool(struct.gestante);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPuerpera()) {
        oprot.writeFieldBegin(PUERPERA_FIELD_DESC);
        oprot.writeBool(struct.puerpera);
        oprot.writeFieldEnd();
      }
      if (struct.vacinas != null) {
        if (struct.isSetVacinas()) {
          oprot.writeFieldBegin(VACINAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.vacinas.size()));
            for (VacinaRowThrift _iter3 : struct.vacinas)
            {
              _iter3.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataHoraInicialAtendimento()) {
        oprot.writeFieldBegin(DATA_HORA_INICIAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataHoraInicialAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataHoraFinalAtendimento()) {
        oprot.writeFieldBegin(DATA_HORA_FINAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataHoraFinalAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaVacinacaoChildThriftTupleSchemeFactory implements SchemeFactory {
    public FichaVacinacaoChildThriftTupleScheme getScheme() {
      return new FichaVacinacaoChildThriftTupleScheme();
    }
  }

  private static class FichaVacinacaoChildThriftTupleScheme extends TupleScheme<FichaVacinacaoChildThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaVacinacaoChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTurno()) {
        optionals.set(0);
      }
      if (struct.isSetNumProntuario()) {
        optionals.set(1);
      }
      if (struct.isSetCnsCidadao()) {
        optionals.set(2);
      }
      if (struct.isSetDtNascimento()) {
        optionals.set(3);
      }
      if (struct.isSetSexo()) {
        optionals.set(4);
      }
      if (struct.isSetLocalAtendimento()) {
        optionals.set(5);
      }
      if (struct.isSetViajante()) {
        optionals.set(6);
      }
      if (struct.isSetComunicanteHanseniase()) {
        optionals.set(7);
      }
      if (struct.isSetGestante()) {
        optionals.set(8);
      }
      if (struct.isSetPuerpera()) {
        optionals.set(9);
      }
      if (struct.isSetVacinas()) {
        optionals.set(10);
      }
      if (struct.isSetDataHoraInicialAtendimento()) {
        optionals.set(11);
      }
      if (struct.isSetDataHoraFinalAtendimento()) {
        optionals.set(12);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetNumProntuario()) {
        oprot.writeString(struct.numProntuario);
      }
      if (struct.isSetCnsCidadao()) {
        oprot.writeString(struct.cnsCidadao);
      }
      if (struct.isSetDtNascimento()) {
        oprot.writeI64(struct.dtNascimento);
      }
      if (struct.isSetSexo()) {
        oprot.writeI64(struct.sexo);
      }
      if (struct.isSetLocalAtendimento()) {
        oprot.writeI64(struct.localAtendimento);
      }
      if (struct.isSetViajante()) {
        oprot.writeBool(struct.viajante);
      }
      if (struct.isSetComunicanteHanseniase()) {
        oprot.writeBool(struct.comunicanteHanseniase);
      }
      if (struct.isSetGestante()) {
        oprot.writeBool(struct.gestante);
      }
      if (struct.isSetPuerpera()) {
        oprot.writeBool(struct.puerpera);
      }
      if (struct.isSetVacinas()) {
        {
          oprot.writeI32(struct.vacinas.size());
          for (VacinaRowThrift _iter4 : struct.vacinas)
          {
            _iter4.write(oprot);
          }
        }
      }
      if (struct.isSetDataHoraInicialAtendimento()) {
        oprot.writeI64(struct.dataHoraInicialAtendimento);
      }
      if (struct.isSetDataHoraFinalAtendimento()) {
        oprot.writeI64(struct.dataHoraFinalAtendimento);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaVacinacaoChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.numProntuario = iprot.readString();
        struct.setNumProntuarioIsSet(true);
      }
      if (incoming.get(2)) {
        struct.cnsCidadao = iprot.readString();
        struct.setCnsCidadaoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.dtNascimento = iprot.readI64();
        struct.setDtNascimentoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sexo = iprot.readI64();
        struct.setSexoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.localAtendimento = iprot.readI64();
        struct.setLocalAtendimentoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.viajante = iprot.readBool();
        struct.setViajanteIsSet(true);
      }
      if (incoming.get(7)) {
        struct.comunicanteHanseniase = iprot.readBool();
        struct.setComunicanteHanseniaseIsSet(true);
      }
      if (incoming.get(8)) {
        struct.gestante = iprot.readBool();
        struct.setGestanteIsSet(true);
      }
      if (incoming.get(9)) {
        struct.puerpera = iprot.readBool();
        struct.setPuerperaIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.vacinas = new ArrayList<VacinaRowThrift>(_list5.size);
          VacinaRowThrift _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = new VacinaRowThrift();
            _elem6.read(iprot);
            struct.vacinas.add(_elem6);
          }
        }
        struct.setVacinasIsSet(true);
      }
      if (incoming.get(11)) {
        struct.dataHoraInicialAtendimento = iprot.readI64();
        struct.setDataHoraInicialAtendimentoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.dataHoraFinalAtendimento = iprot.readI64();
        struct.setDataHoraFinalAtendimentoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
    }
  }

}

