/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class EncaminhamentoExternoThrift : TBase
  {
    private long _especialidade;
    private string _hipoteseDiagnosticoCid10;
    private string _hipoteseDiagnosticoCiap2;
    private long _classificacaoRisco;
    private string _cboCodigo_2002;
    private long _classificacaoPrioridade;

    public long Especialidade
    {
      get
      {
        return _especialidade;
      }
      set
      {
        __isset.especialidade = true;
        this._especialidade = value;
      }
    }

    public string HipoteseDiagnosticoCid10
    {
      get
      {
        return _hipoteseDiagnosticoCid10;
      }
      set
      {
        __isset.hipoteseDiagnosticoCid10 = true;
        this._hipoteseDiagnosticoCid10 = value;
      }
    }

    public string HipoteseDiagnosticoCiap2
    {
      get
      {
        return _hipoteseDiagnosticoCiap2;
      }
      set
      {
        __isset.hipoteseDiagnosticoCiap2 = true;
        this._hipoteseDiagnosticoCiap2 = value;
      }
    }

    public long ClassificacaoRisco
    {
      get
      {
        return _classificacaoRisco;
      }
      set
      {
        __isset.classificacaoRisco = true;
        this._classificacaoRisco = value;
      }
    }

    public string CboCodigo_2002
    {
      get
      {
        return _cboCodigo_2002;
      }
      set
      {
        __isset.cboCodigo_2002 = true;
        this._cboCodigo_2002 = value;
      }
    }

    public long ClassificacaoPrioridade
    {
      get
      {
        return _classificacaoPrioridade;
      }
      set
      {
        __isset.classificacaoPrioridade = true;
        this._classificacaoPrioridade = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool especialidade;
      public bool hipoteseDiagnosticoCid10;
      public bool hipoteseDiagnosticoCiap2;
      public bool classificacaoRisco;
      public bool cboCodigo_2002;
      public bool classificacaoPrioridade;
    }

    public EncaminhamentoExternoThrift() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.I64) {
                Especialidade = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                HipoteseDiagnosticoCid10 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                HipoteseDiagnosticoCiap2 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I64) {
                ClassificacaoRisco = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                CboCodigo_2002 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I64) {
                ClassificacaoPrioridade = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("EncaminhamentoExternoThrift");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (__isset.especialidade) {
          field.Name = "especialidade";
          field.Type = TType.I64;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Especialidade);
          oprot.WriteFieldEnd();
        }
        if (HipoteseDiagnosticoCid10 != null && __isset.hipoteseDiagnosticoCid10) {
          field.Name = "hipoteseDiagnosticoCid10";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(HipoteseDiagnosticoCid10);
          oprot.WriteFieldEnd();
        }
        if (HipoteseDiagnosticoCiap2 != null && __isset.hipoteseDiagnosticoCiap2) {
          field.Name = "hipoteseDiagnosticoCiap2";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(HipoteseDiagnosticoCiap2);
          oprot.WriteFieldEnd();
        }
        if (__isset.classificacaoRisco) {
          field.Name = "classificacaoRisco";
          field.Type = TType.I64;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(ClassificacaoRisco);
          oprot.WriteFieldEnd();
        }
        if (CboCodigo_2002 != null && __isset.cboCodigo_2002) {
          field.Name = "cboCodigo_2002";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CboCodigo_2002);
          oprot.WriteFieldEnd();
        }
        if (__isset.classificacaoPrioridade) {
          field.Name = "classificacaoPrioridade";
          field.Type = TType.I64;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(ClassificacaoPrioridade);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("EncaminhamentoExternoThrift(");
      bool __first = true;
      if (__isset.especialidade) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Especialidade: ");
        __sb.Append(Especialidade);
      }
      if (HipoteseDiagnosticoCid10 != null && __isset.hipoteseDiagnosticoCid10) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("HipoteseDiagnosticoCid10: ");
        __sb.Append(HipoteseDiagnosticoCid10);
      }
      if (HipoteseDiagnosticoCiap2 != null && __isset.hipoteseDiagnosticoCiap2) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("HipoteseDiagnosticoCiap2: ");
        __sb.Append(HipoteseDiagnosticoCiap2);
      }
      if (__isset.classificacaoRisco) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ClassificacaoRisco: ");
        __sb.Append(ClassificacaoRisco);
      }
      if (CboCodigo_2002 != null && __isset.cboCodigo_2002) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CboCodigo_2002: ");
        __sb.Append(CboCodigo_2002);
      }
      if (__isset.classificacaoPrioridade) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ClassificacaoPrioridade: ");
        __sb.Append(ClassificacaoPrioridade);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
