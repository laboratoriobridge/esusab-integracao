/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.atendprocedimentos;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-06")
public class FichaProcedimentoMasterThrift implements org.apache.thrift.TBase<FichaProcedimentoMasterThrift, FichaProcedimentoMasterThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaProcedimentoMasterThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaProcedimentoMasterThrift");

  private static final org.apache.thrift.protocol.TField UUID_FICHA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFicha", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TP_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tpCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField HEADER_TRANSPORT_FIELD_DESC = new org.apache.thrift.protocol.TField("headerTransport", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField ATEND_PROCEDIMENTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("atendProcedimentos", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_AFERICAO_PA_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalAfericaoPa", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_GLICEMIA_CAPILAR_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalGlicemiaCapilar", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_AFERICAO_TEMPERATURA_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalAfericaoTemperatura", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_MEDICAO_ALTURA_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalMedicaoAltura", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_CURATIVO_SIMPLES_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalCurativoSimples", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_MEDICAO_PESO_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalMedicaoPeso", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("numTotalColetaMaterialParaExameLaboratorial", org.apache.thrift.protocol.TType.I64, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaProcedimentoMasterThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaProcedimentoMasterThriftTupleSchemeFactory());
  }

  private String uuidFicha; // required
  private int tpCdsOrigem; // optional
  private br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift headerTransport; // optional
  private List<FichaProcedimentoChildThrift> atendProcedimentos; // optional
  private long numTotalAfericaoPa; // optional
  private long numTotalGlicemiaCapilar; // optional
  private long numTotalAfericaoTemperatura; // optional
  private long numTotalMedicaoAltura; // optional
  private long numTotalCurativoSimples; // optional
  private long numTotalMedicaoPeso; // optional
  private long numTotalColetaMaterialParaExameLaboratorial; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UUID_FICHA((short)1, "uuidFicha"),
    TP_CDS_ORIGEM((short)2, "tpCdsOrigem"),
    HEADER_TRANSPORT((short)3, "headerTransport"),
    ATEND_PROCEDIMENTOS((short)4, "atendProcedimentos"),
    NUM_TOTAL_AFERICAO_PA((short)5, "numTotalAfericaoPa"),
    NUM_TOTAL_GLICEMIA_CAPILAR((short)6, "numTotalGlicemiaCapilar"),
    NUM_TOTAL_AFERICAO_TEMPERATURA((short)7, "numTotalAfericaoTemperatura"),
    NUM_TOTAL_MEDICAO_ALTURA((short)8, "numTotalMedicaoAltura"),
    NUM_TOTAL_CURATIVO_SIMPLES((short)9, "numTotalCurativoSimples"),
    NUM_TOTAL_MEDICAO_PESO((short)10, "numTotalMedicaoPeso"),
    NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL((short)11, "numTotalColetaMaterialParaExameLaboratorial");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UUID_FICHA
          return UUID_FICHA;
        case 2: // TP_CDS_ORIGEM
          return TP_CDS_ORIGEM;
        case 3: // HEADER_TRANSPORT
          return HEADER_TRANSPORT;
        case 4: // ATEND_PROCEDIMENTOS
          return ATEND_PROCEDIMENTOS;
        case 5: // NUM_TOTAL_AFERICAO_PA
          return NUM_TOTAL_AFERICAO_PA;
        case 6: // NUM_TOTAL_GLICEMIA_CAPILAR
          return NUM_TOTAL_GLICEMIA_CAPILAR;
        case 7: // NUM_TOTAL_AFERICAO_TEMPERATURA
          return NUM_TOTAL_AFERICAO_TEMPERATURA;
        case 8: // NUM_TOTAL_MEDICAO_ALTURA
          return NUM_TOTAL_MEDICAO_ALTURA;
        case 9: // NUM_TOTAL_CURATIVO_SIMPLES
          return NUM_TOTAL_CURATIVO_SIMPLES;
        case 10: // NUM_TOTAL_MEDICAO_PESO
          return NUM_TOTAL_MEDICAO_PESO;
        case 11: // NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL
          return NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TPCDSORIGEM_ISSET_ID = 0;
  private static final int __NUMTOTALAFERICAOPA_ISSET_ID = 1;
  private static final int __NUMTOTALGLICEMIACAPILAR_ISSET_ID = 2;
  private static final int __NUMTOTALAFERICAOTEMPERATURA_ISSET_ID = 3;
  private static final int __NUMTOTALMEDICAOALTURA_ISSET_ID = 4;
  private static final int __NUMTOTALCURATIVOSIMPLES_ISSET_ID = 5;
  private static final int __NUMTOTALMEDICAOPESO_ISSET_ID = 6;
  private static final int __NUMTOTALCOLETAMATERIALPARAEXAMELABORATORIAL_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TP_CDS_ORIGEM,_Fields.HEADER_TRANSPORT,_Fields.ATEND_PROCEDIMENTOS,_Fields.NUM_TOTAL_AFERICAO_PA,_Fields.NUM_TOTAL_GLICEMIA_CAPILAR,_Fields.NUM_TOTAL_AFERICAO_TEMPERATURA,_Fields.NUM_TOTAL_MEDICAO_ALTURA,_Fields.NUM_TOTAL_CURATIVO_SIMPLES,_Fields.NUM_TOTAL_MEDICAO_PESO,_Fields.NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UUID_FICHA, new org.apache.thrift.meta_data.FieldMetaData("uuidFicha", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TP_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tpCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HEADER_TRANSPORT, new org.apache.thrift.meta_data.FieldMetaData("headerTransport", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.ATEND_PROCEDIMENTOS, new org.apache.thrift.meta_data.FieldMetaData("atendProcedimentos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FichaProcedimentoChildThrift.class))));
    tmpMap.put(_Fields.NUM_TOTAL_AFERICAO_PA, new org.apache.thrift.meta_data.FieldMetaData("numTotalAfericaoPa", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_TOTAL_GLICEMIA_CAPILAR, new org.apache.thrift.meta_data.FieldMetaData("numTotalGlicemiaCapilar", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_TOTAL_AFERICAO_TEMPERATURA, new org.apache.thrift.meta_data.FieldMetaData("numTotalAfericaoTemperatura", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_TOTAL_MEDICAO_ALTURA, new org.apache.thrift.meta_data.FieldMetaData("numTotalMedicaoAltura", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_TOTAL_CURATIVO_SIMPLES, new org.apache.thrift.meta_data.FieldMetaData("numTotalCurativoSimples", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_TOTAL_MEDICAO_PESO, new org.apache.thrift.meta_data.FieldMetaData("numTotalMedicaoPeso", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL, new org.apache.thrift.meta_data.FieldMetaData("numTotalColetaMaterialParaExameLaboratorial", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaProcedimentoMasterThrift.class, metaDataMap);
  }

  public FichaProcedimentoMasterThrift() {
  }

  public FichaProcedimentoMasterThrift(
    String uuidFicha)
  {
    this();
    this.uuidFicha = uuidFicha;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaProcedimentoMasterThrift(FichaProcedimentoMasterThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUuidFicha()) {
      this.uuidFicha = other.uuidFicha;
    }
    this.tpCdsOrigem = other.tpCdsOrigem;
    if (other.isSetHeaderTransport()) {
      this.headerTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift(other.headerTransport);
    }
    if (other.isSetAtendProcedimentos()) {
      List<FichaProcedimentoChildThrift> __this__atendProcedimentos = new ArrayList<FichaProcedimentoChildThrift>(other.atendProcedimentos.size());
      for (FichaProcedimentoChildThrift other_element : other.atendProcedimentos) {
        __this__atendProcedimentos.add(new FichaProcedimentoChildThrift(other_element));
      }
      this.atendProcedimentos = __this__atendProcedimentos;
    }
    this.numTotalAfericaoPa = other.numTotalAfericaoPa;
    this.numTotalGlicemiaCapilar = other.numTotalGlicemiaCapilar;
    this.numTotalAfericaoTemperatura = other.numTotalAfericaoTemperatura;
    this.numTotalMedicaoAltura = other.numTotalMedicaoAltura;
    this.numTotalCurativoSimples = other.numTotalCurativoSimples;
    this.numTotalMedicaoPeso = other.numTotalMedicaoPeso;
    this.numTotalColetaMaterialParaExameLaboratorial = other.numTotalColetaMaterialParaExameLaboratorial;
  }

  public FichaProcedimentoMasterThrift deepCopy() {
    return new FichaProcedimentoMasterThrift(this);
  }

  @Override
  public void clear() {
    this.uuidFicha = null;
    setTpCdsOrigemIsSet(false);
    this.tpCdsOrigem = 0;
    this.headerTransport = null;
    this.atendProcedimentos = null;
    setNumTotalAfericaoPaIsSet(false);
    this.numTotalAfericaoPa = 0;
    setNumTotalGlicemiaCapilarIsSet(false);
    this.numTotalGlicemiaCapilar = 0;
    setNumTotalAfericaoTemperaturaIsSet(false);
    this.numTotalAfericaoTemperatura = 0;
    setNumTotalMedicaoAlturaIsSet(false);
    this.numTotalMedicaoAltura = 0;
    setNumTotalCurativoSimplesIsSet(false);
    this.numTotalCurativoSimples = 0;
    setNumTotalMedicaoPesoIsSet(false);
    this.numTotalMedicaoPeso = 0;
    setNumTotalColetaMaterialParaExameLaboratorialIsSet(false);
    this.numTotalColetaMaterialParaExameLaboratorial = 0;
  }

  public String getUuidFicha() {
    return this.uuidFicha;
  }

  public void setUuidFicha(String uuidFicha) {
    this.uuidFicha = uuidFicha;
  }

  public void unsetUuidFicha() {
    this.uuidFicha = null;
  }

  /** Returns true if field uuidFicha is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFicha() {
    return this.uuidFicha != null;
  }

  public void setUuidFichaIsSet(boolean value) {
    if (!value) {
      this.uuidFicha = null;
    }
  }

  public int getTpCdsOrigem() {
    return this.tpCdsOrigem;
  }

  public void setTpCdsOrigem(int tpCdsOrigem) {
    this.tpCdsOrigem = tpCdsOrigem;
    setTpCdsOrigemIsSet(true);
  }

  public void unsetTpCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tpCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTpCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  public void setTpCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID, value);
  }

  public br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift getHeaderTransport() {
    return this.headerTransport;
  }

  public void setHeaderTransport(br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift headerTransport) {
    this.headerTransport = headerTransport;
  }

  public void unsetHeaderTransport() {
    this.headerTransport = null;
  }

  /** Returns true if field headerTransport is set (has been assigned a value) and false otherwise */
  public boolean isSetHeaderTransport() {
    return this.headerTransport != null;
  }

  public void setHeaderTransportIsSet(boolean value) {
    if (!value) {
      this.headerTransport = null;
    }
  }

  public int getAtendProcedimentosSize() {
    return (this.atendProcedimentos == null) ? 0 : this.atendProcedimentos.size();
  }

  public java.util.Iterator<FichaProcedimentoChildThrift> getAtendProcedimentosIterator() {
    return (this.atendProcedimentos == null) ? null : this.atendProcedimentos.iterator();
  }

  public void addToAtendProcedimentos(FichaProcedimentoChildThrift elem) {
    if (this.atendProcedimentos == null) {
      this.atendProcedimentos = new ArrayList<FichaProcedimentoChildThrift>();
    }
    this.atendProcedimentos.add(elem);
  }

  public List<FichaProcedimentoChildThrift> getAtendProcedimentos() {
    return this.atendProcedimentos;
  }

  public void setAtendProcedimentos(List<FichaProcedimentoChildThrift> atendProcedimentos) {
    this.atendProcedimentos = atendProcedimentos;
  }

  public void unsetAtendProcedimentos() {
    this.atendProcedimentos = null;
  }

  /** Returns true if field atendProcedimentos is set (has been assigned a value) and false otherwise */
  public boolean isSetAtendProcedimentos() {
    return this.atendProcedimentos != null;
  }

  public void setAtendProcedimentosIsSet(boolean value) {
    if (!value) {
      this.atendProcedimentos = null;
    }
  }

  public long getNumTotalAfericaoPa() {
    return this.numTotalAfericaoPa;
  }

  public void setNumTotalAfericaoPa(long numTotalAfericaoPa) {
    this.numTotalAfericaoPa = numTotalAfericaoPa;
    setNumTotalAfericaoPaIsSet(true);
  }

  public void unsetNumTotalAfericaoPa() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALAFERICAOPA_ISSET_ID);
  }

  /** Returns true if field numTotalAfericaoPa is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalAfericaoPa() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALAFERICAOPA_ISSET_ID);
  }

  public void setNumTotalAfericaoPaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALAFERICAOPA_ISSET_ID, value);
  }

  public long getNumTotalGlicemiaCapilar() {
    return this.numTotalGlicemiaCapilar;
  }

  public void setNumTotalGlicemiaCapilar(long numTotalGlicemiaCapilar) {
    this.numTotalGlicemiaCapilar = numTotalGlicemiaCapilar;
    setNumTotalGlicemiaCapilarIsSet(true);
  }

  public void unsetNumTotalGlicemiaCapilar() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALGLICEMIACAPILAR_ISSET_ID);
  }

  /** Returns true if field numTotalGlicemiaCapilar is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalGlicemiaCapilar() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALGLICEMIACAPILAR_ISSET_ID);
  }

  public void setNumTotalGlicemiaCapilarIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALGLICEMIACAPILAR_ISSET_ID, value);
  }

  public long getNumTotalAfericaoTemperatura() {
    return this.numTotalAfericaoTemperatura;
  }

  public void setNumTotalAfericaoTemperatura(long numTotalAfericaoTemperatura) {
    this.numTotalAfericaoTemperatura = numTotalAfericaoTemperatura;
    setNumTotalAfericaoTemperaturaIsSet(true);
  }

  public void unsetNumTotalAfericaoTemperatura() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALAFERICAOTEMPERATURA_ISSET_ID);
  }

  /** Returns true if field numTotalAfericaoTemperatura is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalAfericaoTemperatura() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALAFERICAOTEMPERATURA_ISSET_ID);
  }

  public void setNumTotalAfericaoTemperaturaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALAFERICAOTEMPERATURA_ISSET_ID, value);
  }

  public long getNumTotalMedicaoAltura() {
    return this.numTotalMedicaoAltura;
  }

  public void setNumTotalMedicaoAltura(long numTotalMedicaoAltura) {
    this.numTotalMedicaoAltura = numTotalMedicaoAltura;
    setNumTotalMedicaoAlturaIsSet(true);
  }

  public void unsetNumTotalMedicaoAltura() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALMEDICAOALTURA_ISSET_ID);
  }

  /** Returns true if field numTotalMedicaoAltura is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalMedicaoAltura() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALMEDICAOALTURA_ISSET_ID);
  }

  public void setNumTotalMedicaoAlturaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALMEDICAOALTURA_ISSET_ID, value);
  }

  public long getNumTotalCurativoSimples() {
    return this.numTotalCurativoSimples;
  }

  public void setNumTotalCurativoSimples(long numTotalCurativoSimples) {
    this.numTotalCurativoSimples = numTotalCurativoSimples;
    setNumTotalCurativoSimplesIsSet(true);
  }

  public void unsetNumTotalCurativoSimples() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALCURATIVOSIMPLES_ISSET_ID);
  }

  /** Returns true if field numTotalCurativoSimples is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalCurativoSimples() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALCURATIVOSIMPLES_ISSET_ID);
  }

  public void setNumTotalCurativoSimplesIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALCURATIVOSIMPLES_ISSET_ID, value);
  }

  public long getNumTotalMedicaoPeso() {
    return this.numTotalMedicaoPeso;
  }

  public void setNumTotalMedicaoPeso(long numTotalMedicaoPeso) {
    this.numTotalMedicaoPeso = numTotalMedicaoPeso;
    setNumTotalMedicaoPesoIsSet(true);
  }

  public void unsetNumTotalMedicaoPeso() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALMEDICAOPESO_ISSET_ID);
  }

  /** Returns true if field numTotalMedicaoPeso is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalMedicaoPeso() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALMEDICAOPESO_ISSET_ID);
  }

  public void setNumTotalMedicaoPesoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALMEDICAOPESO_ISSET_ID, value);
  }

  public long getNumTotalColetaMaterialParaExameLaboratorial() {
    return this.numTotalColetaMaterialParaExameLaboratorial;
  }

  public void setNumTotalColetaMaterialParaExameLaboratorial(long numTotalColetaMaterialParaExameLaboratorial) {
    this.numTotalColetaMaterialParaExameLaboratorial = numTotalColetaMaterialParaExameLaboratorial;
    setNumTotalColetaMaterialParaExameLaboratorialIsSet(true);
  }

  public void unsetNumTotalColetaMaterialParaExameLaboratorial() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMTOTALCOLETAMATERIALPARAEXAMELABORATORIAL_ISSET_ID);
  }

  /** Returns true if field numTotalColetaMaterialParaExameLaboratorial is set (has been assigned a value) and false otherwise */
  public boolean isSetNumTotalColetaMaterialParaExameLaboratorial() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMTOTALCOLETAMATERIALPARAEXAMELABORATORIAL_ISSET_ID);
  }

  public void setNumTotalColetaMaterialParaExameLaboratorialIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMTOTALCOLETAMATERIALPARAEXAMELABORATORIAL_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UUID_FICHA:
      if (value == null) {
        unsetUuidFicha();
      } else {
        setUuidFicha((String)value);
      }
      break;

    case TP_CDS_ORIGEM:
      if (value == null) {
        unsetTpCdsOrigem();
      } else {
        setTpCdsOrigem((Integer)value);
      }
      break;

    case HEADER_TRANSPORT:
      if (value == null) {
        unsetHeaderTransport();
      } else {
        setHeaderTransport((br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift)value);
      }
      break;

    case ATEND_PROCEDIMENTOS:
      if (value == null) {
        unsetAtendProcedimentos();
      } else {
        setAtendProcedimentos((List<FichaProcedimentoChildThrift>)value);
      }
      break;

    case NUM_TOTAL_AFERICAO_PA:
      if (value == null) {
        unsetNumTotalAfericaoPa();
      } else {
        setNumTotalAfericaoPa((Long)value);
      }
      break;

    case NUM_TOTAL_GLICEMIA_CAPILAR:
      if (value == null) {
        unsetNumTotalGlicemiaCapilar();
      } else {
        setNumTotalGlicemiaCapilar((Long)value);
      }
      break;

    case NUM_TOTAL_AFERICAO_TEMPERATURA:
      if (value == null) {
        unsetNumTotalAfericaoTemperatura();
      } else {
        setNumTotalAfericaoTemperatura((Long)value);
      }
      break;

    case NUM_TOTAL_MEDICAO_ALTURA:
      if (value == null) {
        unsetNumTotalMedicaoAltura();
      } else {
        setNumTotalMedicaoAltura((Long)value);
      }
      break;

    case NUM_TOTAL_CURATIVO_SIMPLES:
      if (value == null) {
        unsetNumTotalCurativoSimples();
      } else {
        setNumTotalCurativoSimples((Long)value);
      }
      break;

    case NUM_TOTAL_MEDICAO_PESO:
      if (value == null) {
        unsetNumTotalMedicaoPeso();
      } else {
        setNumTotalMedicaoPeso((Long)value);
      }
      break;

    case NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL:
      if (value == null) {
        unsetNumTotalColetaMaterialParaExameLaboratorial();
      } else {
        setNumTotalColetaMaterialParaExameLaboratorial((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UUID_FICHA:
      return getUuidFicha();

    case TP_CDS_ORIGEM:
      return getTpCdsOrigem();

    case HEADER_TRANSPORT:
      return getHeaderTransport();

    case ATEND_PROCEDIMENTOS:
      return getAtendProcedimentos();

    case NUM_TOTAL_AFERICAO_PA:
      return getNumTotalAfericaoPa();

    case NUM_TOTAL_GLICEMIA_CAPILAR:
      return getNumTotalGlicemiaCapilar();

    case NUM_TOTAL_AFERICAO_TEMPERATURA:
      return getNumTotalAfericaoTemperatura();

    case NUM_TOTAL_MEDICAO_ALTURA:
      return getNumTotalMedicaoAltura();

    case NUM_TOTAL_CURATIVO_SIMPLES:
      return getNumTotalCurativoSimples();

    case NUM_TOTAL_MEDICAO_PESO:
      return getNumTotalMedicaoPeso();

    case NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL:
      return getNumTotalColetaMaterialParaExameLaboratorial();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UUID_FICHA:
      return isSetUuidFicha();
    case TP_CDS_ORIGEM:
      return isSetTpCdsOrigem();
    case HEADER_TRANSPORT:
      return isSetHeaderTransport();
    case ATEND_PROCEDIMENTOS:
      return isSetAtendProcedimentos();
    case NUM_TOTAL_AFERICAO_PA:
      return isSetNumTotalAfericaoPa();
    case NUM_TOTAL_GLICEMIA_CAPILAR:
      return isSetNumTotalGlicemiaCapilar();
    case NUM_TOTAL_AFERICAO_TEMPERATURA:
      return isSetNumTotalAfericaoTemperatura();
    case NUM_TOTAL_MEDICAO_ALTURA:
      return isSetNumTotalMedicaoAltura();
    case NUM_TOTAL_CURATIVO_SIMPLES:
      return isSetNumTotalCurativoSimples();
    case NUM_TOTAL_MEDICAO_PESO:
      return isSetNumTotalMedicaoPeso();
    case NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL:
      return isSetNumTotalColetaMaterialParaExameLaboratorial();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaProcedimentoMasterThrift)
      return this.equals((FichaProcedimentoMasterThrift)that);
    return false;
  }

  public boolean equals(FichaProcedimentoMasterThrift that) {
    if (that == null)
      return false;

    boolean this_present_uuidFicha = true && this.isSetUuidFicha();
    boolean that_present_uuidFicha = true && that.isSetUuidFicha();
    if (this_present_uuidFicha || that_present_uuidFicha) {
      if (!(this_present_uuidFicha && that_present_uuidFicha))
        return false;
      if (!this.uuidFicha.equals(that.uuidFicha))
        return false;
    }

    boolean this_present_tpCdsOrigem = true && this.isSetTpCdsOrigem();
    boolean that_present_tpCdsOrigem = true && that.isSetTpCdsOrigem();
    if (this_present_tpCdsOrigem || that_present_tpCdsOrigem) {
      if (!(this_present_tpCdsOrigem && that_present_tpCdsOrigem))
        return false;
      if (this.tpCdsOrigem != that.tpCdsOrigem)
        return false;
    }

    boolean this_present_headerTransport = true && this.isSetHeaderTransport();
    boolean that_present_headerTransport = true && that.isSetHeaderTransport();
    if (this_present_headerTransport || that_present_headerTransport) {
      if (!(this_present_headerTransport && that_present_headerTransport))
        return false;
      if (!this.headerTransport.equals(that.headerTransport))
        return false;
    }

    boolean this_present_atendProcedimentos = true && this.isSetAtendProcedimentos();
    boolean that_present_atendProcedimentos = true && that.isSetAtendProcedimentos();
    if (this_present_atendProcedimentos || that_present_atendProcedimentos) {
      if (!(this_present_atendProcedimentos && that_present_atendProcedimentos))
        return false;
      if (!this.atendProcedimentos.equals(that.atendProcedimentos))
        return false;
    }

    boolean this_present_numTotalAfericaoPa = true && this.isSetNumTotalAfericaoPa();
    boolean that_present_numTotalAfericaoPa = true && that.isSetNumTotalAfericaoPa();
    if (this_present_numTotalAfericaoPa || that_present_numTotalAfericaoPa) {
      if (!(this_present_numTotalAfericaoPa && that_present_numTotalAfericaoPa))
        return false;
      if (this.numTotalAfericaoPa != that.numTotalAfericaoPa)
        return false;
    }

    boolean this_present_numTotalGlicemiaCapilar = true && this.isSetNumTotalGlicemiaCapilar();
    boolean that_present_numTotalGlicemiaCapilar = true && that.isSetNumTotalGlicemiaCapilar();
    if (this_present_numTotalGlicemiaCapilar || that_present_numTotalGlicemiaCapilar) {
      if (!(this_present_numTotalGlicemiaCapilar && that_present_numTotalGlicemiaCapilar))
        return false;
      if (this.numTotalGlicemiaCapilar != that.numTotalGlicemiaCapilar)
        return false;
    }

    boolean this_present_numTotalAfericaoTemperatura = true && this.isSetNumTotalAfericaoTemperatura();
    boolean that_present_numTotalAfericaoTemperatura = true && that.isSetNumTotalAfericaoTemperatura();
    if (this_present_numTotalAfericaoTemperatura || that_present_numTotalAfericaoTemperatura) {
      if (!(this_present_numTotalAfericaoTemperatura && that_present_numTotalAfericaoTemperatura))
        return false;
      if (this.numTotalAfericaoTemperatura != that.numTotalAfericaoTemperatura)
        return false;
    }

    boolean this_present_numTotalMedicaoAltura = true && this.isSetNumTotalMedicaoAltura();
    boolean that_present_numTotalMedicaoAltura = true && that.isSetNumTotalMedicaoAltura();
    if (this_present_numTotalMedicaoAltura || that_present_numTotalMedicaoAltura) {
      if (!(this_present_numTotalMedicaoAltura && that_present_numTotalMedicaoAltura))
        return false;
      if (this.numTotalMedicaoAltura != that.numTotalMedicaoAltura)
        return false;
    }

    boolean this_present_numTotalCurativoSimples = true && this.isSetNumTotalCurativoSimples();
    boolean that_present_numTotalCurativoSimples = true && that.isSetNumTotalCurativoSimples();
    if (this_present_numTotalCurativoSimples || that_present_numTotalCurativoSimples) {
      if (!(this_present_numTotalCurativoSimples && that_present_numTotalCurativoSimples))
        return false;
      if (this.numTotalCurativoSimples != that.numTotalCurativoSimples)
        return false;
    }

    boolean this_present_numTotalMedicaoPeso = true && this.isSetNumTotalMedicaoPeso();
    boolean that_present_numTotalMedicaoPeso = true && that.isSetNumTotalMedicaoPeso();
    if (this_present_numTotalMedicaoPeso || that_present_numTotalMedicaoPeso) {
      if (!(this_present_numTotalMedicaoPeso && that_present_numTotalMedicaoPeso))
        return false;
      if (this.numTotalMedicaoPeso != that.numTotalMedicaoPeso)
        return false;
    }

    boolean this_present_numTotalColetaMaterialParaExameLaboratorial = true && this.isSetNumTotalColetaMaterialParaExameLaboratorial();
    boolean that_present_numTotalColetaMaterialParaExameLaboratorial = true && that.isSetNumTotalColetaMaterialParaExameLaboratorial();
    if (this_present_numTotalColetaMaterialParaExameLaboratorial || that_present_numTotalColetaMaterialParaExameLaboratorial) {
      if (!(this_present_numTotalColetaMaterialParaExameLaboratorial && that_present_numTotalColetaMaterialParaExameLaboratorial))
        return false;
      if (this.numTotalColetaMaterialParaExameLaboratorial != that.numTotalColetaMaterialParaExameLaboratorial)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_uuidFicha = true && (isSetUuidFicha());
    list.add(present_uuidFicha);
    if (present_uuidFicha)
      list.add(uuidFicha);

    boolean present_tpCdsOrigem = true && (isSetTpCdsOrigem());
    list.add(present_tpCdsOrigem);
    if (present_tpCdsOrigem)
      list.add(tpCdsOrigem);

    boolean present_headerTransport = true && (isSetHeaderTransport());
    list.add(present_headerTransport);
    if (present_headerTransport)
      list.add(headerTransport);

    boolean present_atendProcedimentos = true && (isSetAtendProcedimentos());
    list.add(present_atendProcedimentos);
    if (present_atendProcedimentos)
      list.add(atendProcedimentos);

    boolean present_numTotalAfericaoPa = true && (isSetNumTotalAfericaoPa());
    list.add(present_numTotalAfericaoPa);
    if (present_numTotalAfericaoPa)
      list.add(numTotalAfericaoPa);

    boolean present_numTotalGlicemiaCapilar = true && (isSetNumTotalGlicemiaCapilar());
    list.add(present_numTotalGlicemiaCapilar);
    if (present_numTotalGlicemiaCapilar)
      list.add(numTotalGlicemiaCapilar);

    boolean present_numTotalAfericaoTemperatura = true && (isSetNumTotalAfericaoTemperatura());
    list.add(present_numTotalAfericaoTemperatura);
    if (present_numTotalAfericaoTemperatura)
      list.add(numTotalAfericaoTemperatura);

    boolean present_numTotalMedicaoAltura = true && (isSetNumTotalMedicaoAltura());
    list.add(present_numTotalMedicaoAltura);
    if (present_numTotalMedicaoAltura)
      list.add(numTotalMedicaoAltura);

    boolean present_numTotalCurativoSimples = true && (isSetNumTotalCurativoSimples());
    list.add(present_numTotalCurativoSimples);
    if (present_numTotalCurativoSimples)
      list.add(numTotalCurativoSimples);

    boolean present_numTotalMedicaoPeso = true && (isSetNumTotalMedicaoPeso());
    list.add(present_numTotalMedicaoPeso);
    if (present_numTotalMedicaoPeso)
      list.add(numTotalMedicaoPeso);

    boolean present_numTotalColetaMaterialParaExameLaboratorial = true && (isSetNumTotalColetaMaterialParaExameLaboratorial());
    list.add(present_numTotalColetaMaterialParaExameLaboratorial);
    if (present_numTotalColetaMaterialParaExameLaboratorial)
      list.add(numTotalColetaMaterialParaExameLaboratorial);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaProcedimentoMasterThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUuidFicha()).compareTo(other.isSetUuidFicha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFicha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFicha, other.uuidFicha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTpCdsOrigem()).compareTo(other.isSetTpCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTpCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tpCdsOrigem, other.tpCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeaderTransport()).compareTo(other.isSetHeaderTransport());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeaderTransport()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headerTransport, other.headerTransport);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtendProcedimentos()).compareTo(other.isSetAtendProcedimentos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtendProcedimentos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atendProcedimentos, other.atendProcedimentos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalAfericaoPa()).compareTo(other.isSetNumTotalAfericaoPa());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalAfericaoPa()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalAfericaoPa, other.numTotalAfericaoPa);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalGlicemiaCapilar()).compareTo(other.isSetNumTotalGlicemiaCapilar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalGlicemiaCapilar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalGlicemiaCapilar, other.numTotalGlicemiaCapilar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalAfericaoTemperatura()).compareTo(other.isSetNumTotalAfericaoTemperatura());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalAfericaoTemperatura()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalAfericaoTemperatura, other.numTotalAfericaoTemperatura);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalMedicaoAltura()).compareTo(other.isSetNumTotalMedicaoAltura());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalMedicaoAltura()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalMedicaoAltura, other.numTotalMedicaoAltura);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalCurativoSimples()).compareTo(other.isSetNumTotalCurativoSimples());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalCurativoSimples()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalCurativoSimples, other.numTotalCurativoSimples);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalMedicaoPeso()).compareTo(other.isSetNumTotalMedicaoPeso());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalMedicaoPeso()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalMedicaoPeso, other.numTotalMedicaoPeso);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumTotalColetaMaterialParaExameLaboratorial()).compareTo(other.isSetNumTotalColetaMaterialParaExameLaboratorial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumTotalColetaMaterialParaExameLaboratorial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numTotalColetaMaterialParaExameLaboratorial, other.numTotalColetaMaterialParaExameLaboratorial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaProcedimentoMasterThrift(");
    boolean first = true;

    sb.append("uuidFicha:");
    if (this.uuidFicha == null) {
      sb.append("null");
    } else {
      sb.append(this.uuidFicha);
    }
    first = false;
    if (isSetTpCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tpCdsOrigem:");
      sb.append(this.tpCdsOrigem);
      first = false;
    }
    if (isSetHeaderTransport()) {
      if (!first) sb.append(", ");
      sb.append("headerTransport:");
      if (this.headerTransport == null) {
        sb.append("null");
      } else {
        sb.append(this.headerTransport);
      }
      first = false;
    }
    if (isSetAtendProcedimentos()) {
      if (!first) sb.append(", ");
      sb.append("atendProcedimentos:");
      if (this.atendProcedimentos == null) {
        sb.append("null");
      } else {
        sb.append(this.atendProcedimentos);
      }
      first = false;
    }
    if (isSetNumTotalAfericaoPa()) {
      if (!first) sb.append(", ");
      sb.append("numTotalAfericaoPa:");
      sb.append(this.numTotalAfericaoPa);
      first = false;
    }
    if (isSetNumTotalGlicemiaCapilar()) {
      if (!first) sb.append(", ");
      sb.append("numTotalGlicemiaCapilar:");
      sb.append(this.numTotalGlicemiaCapilar);
      first = false;
    }
    if (isSetNumTotalAfericaoTemperatura()) {
      if (!first) sb.append(", ");
      sb.append("numTotalAfericaoTemperatura:");
      sb.append(this.numTotalAfericaoTemperatura);
      first = false;
    }
    if (isSetNumTotalMedicaoAltura()) {
      if (!first) sb.append(", ");
      sb.append("numTotalMedicaoAltura:");
      sb.append(this.numTotalMedicaoAltura);
      first = false;
    }
    if (isSetNumTotalCurativoSimples()) {
      if (!first) sb.append(", ");
      sb.append("numTotalCurativoSimples:");
      sb.append(this.numTotalCurativoSimples);
      first = false;
    }
    if (isSetNumTotalMedicaoPeso()) {
      if (!first) sb.append(", ");
      sb.append("numTotalMedicaoPeso:");
      sb.append(this.numTotalMedicaoPeso);
      first = false;
    }
    if (isSetNumTotalColetaMaterialParaExameLaboratorial()) {
      if (!first) sb.append(", ");
      sb.append("numTotalColetaMaterialParaExameLaboratorial:");
      sb.append(this.numTotalColetaMaterialParaExameLaboratorial);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetUuidFicha()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuidFicha' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (headerTransport != null) {
      headerTransport.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaProcedimentoMasterThriftStandardSchemeFactory implements SchemeFactory {
    public FichaProcedimentoMasterThriftStandardScheme getScheme() {
      return new FichaProcedimentoMasterThriftStandardScheme();
    }
  }

  private static class FichaProcedimentoMasterThriftStandardScheme extends StandardScheme<FichaProcedimentoMasterThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaProcedimentoMasterThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UUID_FICHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFicha = iprot.readString();
              struct.setUuidFichaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TP_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tpCdsOrigem = iprot.readI32();
              struct.setTpCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HEADER_TRANSPORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.headerTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift();
              struct.headerTransport.read(iprot);
              struct.setHeaderTransportIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ATEND_PROCEDIMENTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.atendProcedimentos = new ArrayList<FichaProcedimentoChildThrift>(_list8.size);
                FichaProcedimentoChildThrift _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = new FichaProcedimentoChildThrift();
                  _elem9.read(iprot);
                  struct.atendProcedimentos.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setAtendProcedimentosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NUM_TOTAL_AFERICAO_PA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalAfericaoPa = iprot.readI64();
              struct.setNumTotalAfericaoPaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NUM_TOTAL_GLICEMIA_CAPILAR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalGlicemiaCapilar = iprot.readI64();
              struct.setNumTotalGlicemiaCapilarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NUM_TOTAL_AFERICAO_TEMPERATURA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalAfericaoTemperatura = iprot.readI64();
              struct.setNumTotalAfericaoTemperaturaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NUM_TOTAL_MEDICAO_ALTURA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalMedicaoAltura = iprot.readI64();
              struct.setNumTotalMedicaoAlturaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NUM_TOTAL_CURATIVO_SIMPLES
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalCurativoSimples = iprot.readI64();
              struct.setNumTotalCurativoSimplesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NUM_TOTAL_MEDICAO_PESO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalMedicaoPeso = iprot.readI64();
              struct.setNumTotalMedicaoPesoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.numTotalColetaMaterialParaExameLaboratorial = iprot.readI64();
              struct.setNumTotalColetaMaterialParaExameLaboratorialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaProcedimentoMasterThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.uuidFicha != null) {
        oprot.writeFieldBegin(UUID_FICHA_FIELD_DESC);
        oprot.writeString(struct.uuidFicha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeFieldBegin(TP_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tpCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.headerTransport != null) {
        if (struct.isSetHeaderTransport()) {
          oprot.writeFieldBegin(HEADER_TRANSPORT_FIELD_DESC);
          struct.headerTransport.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.atendProcedimentos != null) {
        if (struct.isSetAtendProcedimentos()) {
          oprot.writeFieldBegin(ATEND_PROCEDIMENTOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.atendProcedimentos.size()));
            for (FichaProcedimentoChildThrift _iter11 : struct.atendProcedimentos)
            {
              _iter11.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNumTotalAfericaoPa()) {
        oprot.writeFieldBegin(NUM_TOTAL_AFERICAO_PA_FIELD_DESC);
        oprot.writeI64(struct.numTotalAfericaoPa);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumTotalGlicemiaCapilar()) {
        oprot.writeFieldBegin(NUM_TOTAL_GLICEMIA_CAPILAR_FIELD_DESC);
        oprot.writeI64(struct.numTotalGlicemiaCapilar);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumTotalAfericaoTemperatura()) {
        oprot.writeFieldBegin(NUM_TOTAL_AFERICAO_TEMPERATURA_FIELD_DESC);
        oprot.writeI64(struct.numTotalAfericaoTemperatura);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumTotalMedicaoAltura()) {
        oprot.writeFieldBegin(NUM_TOTAL_MEDICAO_ALTURA_FIELD_DESC);
        oprot.writeI64(struct.numTotalMedicaoAltura);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumTotalCurativoSimples()) {
        oprot.writeFieldBegin(NUM_TOTAL_CURATIVO_SIMPLES_FIELD_DESC);
        oprot.writeI64(struct.numTotalCurativoSimples);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumTotalMedicaoPeso()) {
        oprot.writeFieldBegin(NUM_TOTAL_MEDICAO_PESO_FIELD_DESC);
        oprot.writeI64(struct.numTotalMedicaoPeso);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumTotalColetaMaterialParaExameLaboratorial()) {
        oprot.writeFieldBegin(NUM_TOTAL_COLETA_MATERIAL_PARA_EXAME_LABORATORIAL_FIELD_DESC);
        oprot.writeI64(struct.numTotalColetaMaterialParaExameLaboratorial);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaProcedimentoMasterThriftTupleSchemeFactory implements SchemeFactory {
    public FichaProcedimentoMasterThriftTupleScheme getScheme() {
      return new FichaProcedimentoMasterThriftTupleScheme();
    }
  }

  private static class FichaProcedimentoMasterThriftTupleScheme extends TupleScheme<FichaProcedimentoMasterThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaProcedimentoMasterThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.uuidFicha);
      BitSet optionals = new BitSet();
      if (struct.isSetTpCdsOrigem()) {
        optionals.set(0);
      }
      if (struct.isSetHeaderTransport()) {
        optionals.set(1);
      }
      if (struct.isSetAtendProcedimentos()) {
        optionals.set(2);
      }
      if (struct.isSetNumTotalAfericaoPa()) {
        optionals.set(3);
      }
      if (struct.isSetNumTotalGlicemiaCapilar()) {
        optionals.set(4);
      }
      if (struct.isSetNumTotalAfericaoTemperatura()) {
        optionals.set(5);
      }
      if (struct.isSetNumTotalMedicaoAltura()) {
        optionals.set(6);
      }
      if (struct.isSetNumTotalCurativoSimples()) {
        optionals.set(7);
      }
      if (struct.isSetNumTotalMedicaoPeso()) {
        optionals.set(8);
      }
      if (struct.isSetNumTotalColetaMaterialParaExameLaboratorial()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeI32(struct.tpCdsOrigem);
      }
      if (struct.isSetHeaderTransport()) {
        struct.headerTransport.write(oprot);
      }
      if (struct.isSetAtendProcedimentos()) {
        {
          oprot.writeI32(struct.atendProcedimentos.size());
          for (FichaProcedimentoChildThrift _iter12 : struct.atendProcedimentos)
          {
            _iter12.write(oprot);
          }
        }
      }
      if (struct.isSetNumTotalAfericaoPa()) {
        oprot.writeI64(struct.numTotalAfericaoPa);
      }
      if (struct.isSetNumTotalGlicemiaCapilar()) {
        oprot.writeI64(struct.numTotalGlicemiaCapilar);
      }
      if (struct.isSetNumTotalAfericaoTemperatura()) {
        oprot.writeI64(struct.numTotalAfericaoTemperatura);
      }
      if (struct.isSetNumTotalMedicaoAltura()) {
        oprot.writeI64(struct.numTotalMedicaoAltura);
      }
      if (struct.isSetNumTotalCurativoSimples()) {
        oprot.writeI64(struct.numTotalCurativoSimples);
      }
      if (struct.isSetNumTotalMedicaoPeso()) {
        oprot.writeI64(struct.numTotalMedicaoPeso);
      }
      if (struct.isSetNumTotalColetaMaterialParaExameLaboratorial()) {
        oprot.writeI64(struct.numTotalColetaMaterialParaExameLaboratorial);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaProcedimentoMasterThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.uuidFicha = iprot.readString();
      struct.setUuidFichaIsSet(true);
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.tpCdsOrigem = iprot.readI32();
        struct.setTpCdsOrigemIsSet(true);
      }
      if (incoming.get(1)) {
        struct.headerTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift();
        struct.headerTransport.read(iprot);
        struct.setHeaderTransportIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.atendProcedimentos = new ArrayList<FichaProcedimentoChildThrift>(_list13.size);
          FichaProcedimentoChildThrift _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new FichaProcedimentoChildThrift();
            _elem14.read(iprot);
            struct.atendProcedimentos.add(_elem14);
          }
        }
        struct.setAtendProcedimentosIsSet(true);
      }
      if (incoming.get(3)) {
        struct.numTotalAfericaoPa = iprot.readI64();
        struct.setNumTotalAfericaoPaIsSet(true);
      }
      if (incoming.get(4)) {
        struct.numTotalGlicemiaCapilar = iprot.readI64();
        struct.setNumTotalGlicemiaCapilarIsSet(true);
      }
      if (incoming.get(5)) {
        struct.numTotalAfericaoTemperatura = iprot.readI64();
        struct.setNumTotalAfericaoTemperaturaIsSet(true);
      }
      if (incoming.get(6)) {
        struct.numTotalMedicaoAltura = iprot.readI64();
        struct.setNumTotalMedicaoAlturaIsSet(true);
      }
      if (incoming.get(7)) {
        struct.numTotalCurativoSimples = iprot.readI64();
        struct.setNumTotalCurativoSimplesIsSet(true);
      }
      if (incoming.get(8)) {
        struct.numTotalMedicaoPeso = iprot.readI64();
        struct.setNumTotalMedicaoPesoIsSet(true);
      }
      if (incoming.get(9)) {
        struct.numTotalColetaMaterialParaExameLaboratorial = iprot.readI64();
        struct.setNumTotalColetaMaterialParaExameLaboratorialIsSet(true);
      }
    }
  }

}

