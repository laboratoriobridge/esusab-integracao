(**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esusab.ras.atendprocedimentos;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esusab.ras.common;

const
  cbr_gov_saude_esusab_ras_atendprocedimentos_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esusab_ras_atendprocedimentos_Option_Register_Types = False;
  cbr_gov_saude_esusab_ras_atendprocedimentos_Option_ConstPrefix    = False;
  cbr_gov_saude_esusab_ras_atendprocedimentos_Option_Events         = False;
  cbr_gov_saude_esusab_ras_atendprocedimentos_Option_XmlDoc         = False;

type
  IFichaProcedimentoChildThrift = interface;
  IFichaProcedimentoMasterThrift = interface;

  IFichaProcedimentoChildThrift = interface(IBase)
    function GetNumProntuario: string;
    procedure SetNumProntuario( const Value: string);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetDtNascimento: Int64;
    procedure SetDtNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetLocalAtendimento: Int64;
    procedure SetLocalAtendimento( const Value: Int64);
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetStatusEscutaInicialOrientacao: Boolean;
    procedure SetStatusEscutaInicialOrientacao( const Value: Boolean);
    function GetProcedimentos: IThriftList<string>;
    procedure SetProcedimentos( const Value: IThriftList<string>);
    function GetDataHoraInicialAtendimento: Int64;
    procedure SetDataHoraInicialAtendimento( const Value: Int64);
    function GetDataHoraFinalAtendimento: Int64;
    procedure SetDataHoraFinalAtendimento( const Value: Int64);
    function GetCpfCidadao: string;
    procedure SetCpfCidadao( const Value: string);
    function GetPesoAcompanhamentoNutricional: Double;
    procedure SetPesoAcompanhamentoNutricional( const Value: Double);
    function GetAlturaAcompanhamentoNutricional: Double;
    procedure SetAlturaAcompanhamentoNutricional( const Value: Double);
    function GetMedicoes: IMedicoesThrift;
    procedure SetMedicoes( const Value: IMedicoesThrift);

    property NumProntuario: string read GetNumProntuario write SetNumProntuario;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property DtNascimento: Int64 read GetDtNascimento write SetDtNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property LocalAtendimento: Int64 read GetLocalAtendimento write SetLocalAtendimento;
    property Turno: Int64 read GetTurno write SetTurno;
    property StatusEscutaInicialOrientacao: Boolean read GetStatusEscutaInicialOrientacao write SetStatusEscutaInicialOrientacao;
    property Procedimentos: IThriftList<string> read GetProcedimentos write SetProcedimentos;
    property DataHoraInicialAtendimento: Int64 read GetDataHoraInicialAtendimento write SetDataHoraInicialAtendimento;
    property DataHoraFinalAtendimento: Int64 read GetDataHoraFinalAtendimento write SetDataHoraFinalAtendimento;
    property CpfCidadao: string read GetCpfCidadao write SetCpfCidadao;
    property PesoAcompanhamentoNutricional: Double read GetPesoAcompanhamentoNutricional write SetPesoAcompanhamentoNutricional;
    property AlturaAcompanhamentoNutricional: Double read GetAlturaAcompanhamentoNutricional write SetAlturaAcompanhamentoNutricional;
    property Medicoes: IMedicoesThrift read GetMedicoes write SetMedicoes;

    function Get__isset_NumProntuario: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_DtNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_LocalAtendimento: Boolean;
    function Get__isset_Turno: Boolean;
    function Get__isset_StatusEscutaInicialOrientacao: Boolean;
    function Get__isset_Procedimentos: Boolean;
    function Get__isset_DataHoraInicialAtendimento: Boolean;
    function Get__isset_DataHoraFinalAtendimento: Boolean;
    function Get__isset_CpfCidadao: Boolean;
    function Get__isset_PesoAcompanhamentoNutricional: Boolean;
    function Get__isset_AlturaAcompanhamentoNutricional: Boolean;
    function Get__isset_Medicoes: Boolean;

    property __isset_NumProntuario: Boolean read Get__isset_NumProntuario;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_DtNascimento: Boolean read Get__isset_DtNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_LocalAtendimento: Boolean read Get__isset_LocalAtendimento;
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_StatusEscutaInicialOrientacao: Boolean read Get__isset_StatusEscutaInicialOrientacao;
    property __isset_Procedimentos: Boolean read Get__isset_Procedimentos;
    property __isset_DataHoraInicialAtendimento: Boolean read Get__isset_DataHoraInicialAtendimento;
    property __isset_DataHoraFinalAtendimento: Boolean read Get__isset_DataHoraFinalAtendimento;
    property __isset_CpfCidadao: Boolean read Get__isset_CpfCidadao;
    property __isset_PesoAcompanhamentoNutricional: Boolean read Get__isset_PesoAcompanhamentoNutricional;
    property __isset_AlturaAcompanhamentoNutricional: Boolean read Get__isset_AlturaAcompanhamentoNutricional;
    property __isset_Medicoes: Boolean read Get__isset_Medicoes;
  end;

  TFichaProcedimentoChildThriftImpl = class(TInterfacedObject, IBase, IFichaProcedimentoChildThrift)
  private
    FNumProntuario: string;
    FCnsCidadao: string;
    FDtNascimento: Int64;
    FSexo: Int64;
    FLocalAtendimento: Int64;
    FTurno: Int64;
    FStatusEscutaInicialOrientacao: Boolean;
    FProcedimentos: IThriftList<string>;
    FDataHoraInicialAtendimento: Int64;
    FDataHoraFinalAtendimento: Int64;
    FCpfCidadao: string;
    FPesoAcompanhamentoNutricional: Double;
    FAlturaAcompanhamentoNutricional: Double;
    FMedicoes: IMedicoesThrift;
    
    F__isset_NumProntuario: Boolean;
    F__isset_CnsCidadao: Boolean;
    F__isset_DtNascimento: Boolean;
    F__isset_Sexo: Boolean;
    F__isset_LocalAtendimento: Boolean;
    F__isset_Turno: Boolean;
    F__isset_StatusEscutaInicialOrientacao: Boolean;
    F__isset_Procedimentos: Boolean;
    F__isset_DataHoraInicialAtendimento: Boolean;
    F__isset_DataHoraFinalAtendimento: Boolean;
    F__isset_CpfCidadao: Boolean;
    F__isset_PesoAcompanhamentoNutricional: Boolean;
    F__isset_AlturaAcompanhamentoNutricional: Boolean;
    F__isset_Medicoes: Boolean;
    
    function GetNumProntuario: string;
    procedure SetNumProntuario( const Value: string);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetDtNascimento: Int64;
    procedure SetDtNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetLocalAtendimento: Int64;
    procedure SetLocalAtendimento( const Value: Int64);
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetStatusEscutaInicialOrientacao: Boolean;
    procedure SetStatusEscutaInicialOrientacao( const Value: Boolean);
    function GetProcedimentos: IThriftList<string>;
    procedure SetProcedimentos( const Value: IThriftList<string>);
    function GetDataHoraInicialAtendimento: Int64;
    procedure SetDataHoraInicialAtendimento( const Value: Int64);
    function GetDataHoraFinalAtendimento: Int64;
    procedure SetDataHoraFinalAtendimento( const Value: Int64);
    function GetCpfCidadao: string;
    procedure SetCpfCidadao( const Value: string);
    function GetPesoAcompanhamentoNutricional: Double;
    procedure SetPesoAcompanhamentoNutricional( const Value: Double);
    function GetAlturaAcompanhamentoNutricional: Double;
    procedure SetAlturaAcompanhamentoNutricional( const Value: Double);
    function GetMedicoes: IMedicoesThrift;
    procedure SetMedicoes( const Value: IMedicoesThrift);

    function Get__isset_NumProntuario: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_DtNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_LocalAtendimento: Boolean;
    function Get__isset_Turno: Boolean;
    function Get__isset_StatusEscutaInicialOrientacao: Boolean;
    function Get__isset_Procedimentos: Boolean;
    function Get__isset_DataHoraInicialAtendimento: Boolean;
    function Get__isset_DataHoraFinalAtendimento: Boolean;
    function Get__isset_CpfCidadao: Boolean;
    function Get__isset_PesoAcompanhamentoNutricional: Boolean;
    function Get__isset_AlturaAcompanhamentoNutricional: Boolean;
    function Get__isset_Medicoes: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property NumProntuario: string read GetNumProntuario write SetNumProntuario;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property DtNascimento: Int64 read GetDtNascimento write SetDtNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property LocalAtendimento: Int64 read GetLocalAtendimento write SetLocalAtendimento;
    property Turno: Int64 read GetTurno write SetTurno;
    property StatusEscutaInicialOrientacao: Boolean read GetStatusEscutaInicialOrientacao write SetStatusEscutaInicialOrientacao;
    property Procedimentos: IThriftList<string> read GetProcedimentos write SetProcedimentos;
    property DataHoraInicialAtendimento: Int64 read GetDataHoraInicialAtendimento write SetDataHoraInicialAtendimento;
    property DataHoraFinalAtendimento: Int64 read GetDataHoraFinalAtendimento write SetDataHoraFinalAtendimento;
    property CpfCidadao: string read GetCpfCidadao write SetCpfCidadao;
    property PesoAcompanhamentoNutricional: Double read GetPesoAcompanhamentoNutricional write SetPesoAcompanhamentoNutricional;
    property AlturaAcompanhamentoNutricional: Double read GetAlturaAcompanhamentoNutricional write SetAlturaAcompanhamentoNutricional;
    property Medicoes: IMedicoesThrift read GetMedicoes write SetMedicoes;

    // isset
    property __isset_NumProntuario: Boolean read Get__isset_NumProntuario;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_DtNascimento: Boolean read Get__isset_DtNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_LocalAtendimento: Boolean read Get__isset_LocalAtendimento;
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_StatusEscutaInicialOrientacao: Boolean read Get__isset_StatusEscutaInicialOrientacao;
    property __isset_Procedimentos: Boolean read Get__isset_Procedimentos;
    property __isset_DataHoraInicialAtendimento: Boolean read Get__isset_DataHoraInicialAtendimento;
    property __isset_DataHoraFinalAtendimento: Boolean read Get__isset_DataHoraFinalAtendimento;
    property __isset_CpfCidadao: Boolean read Get__isset_CpfCidadao;
    property __isset_PesoAcompanhamentoNutricional: Boolean read Get__isset_PesoAcompanhamentoNutricional;
    property __isset_AlturaAcompanhamentoNutricional: Boolean read Get__isset_AlturaAcompanhamentoNutricional;
    property __isset_Medicoes: Boolean read Get__isset_Medicoes;
  end;

  IFichaProcedimentoMasterThrift = interface(IBase)
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetAtendProcedimentos: IThriftList<IFichaProcedimentoChildThrift>;
    procedure SetAtendProcedimentos( const Value: IThriftList<IFichaProcedimentoChildThrift>);
    function GetNumTotalAfericaoPa: Int64;
    procedure SetNumTotalAfericaoPa( const Value: Int64);
    function GetNumTotalGlicemiaCapilar: Int64;
    procedure SetNumTotalGlicemiaCapilar( const Value: Int64);
    function GetNumTotalAfericaoTemperatura: Int64;
    procedure SetNumTotalAfericaoTemperatura( const Value: Int64);
    function GetNumTotalMedicaoAltura: Int64;
    procedure SetNumTotalMedicaoAltura( const Value: Int64);
    function GetNumTotalCurativoSimples: Int64;
    procedure SetNumTotalCurativoSimples( const Value: Int64);
    function GetNumTotalMedicaoPeso: Int64;
    procedure SetNumTotalMedicaoPeso( const Value: Int64);
    function GetNumTotalColetaMaterialParaExameLaboratorial: Int64;
    procedure SetNumTotalColetaMaterialParaExameLaboratorial( const Value: Int64);

    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property AtendProcedimentos: IThriftList<IFichaProcedimentoChildThrift> read GetAtendProcedimentos write SetAtendProcedimentos;
    property NumTotalAfericaoPa: Int64 read GetNumTotalAfericaoPa write SetNumTotalAfericaoPa;
    property NumTotalGlicemiaCapilar: Int64 read GetNumTotalGlicemiaCapilar write SetNumTotalGlicemiaCapilar;
    property NumTotalAfericaoTemperatura: Int64 read GetNumTotalAfericaoTemperatura write SetNumTotalAfericaoTemperatura;
    property NumTotalMedicaoAltura: Int64 read GetNumTotalMedicaoAltura write SetNumTotalMedicaoAltura;
    property NumTotalCurativoSimples: Int64 read GetNumTotalCurativoSimples write SetNumTotalCurativoSimples;
    property NumTotalMedicaoPeso: Int64 read GetNumTotalMedicaoPeso write SetNumTotalMedicaoPeso;
    property NumTotalColetaMaterialParaExameLaboratorial: Int64 read GetNumTotalColetaMaterialParaExameLaboratorial write SetNumTotalColetaMaterialParaExameLaboratorial;

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_AtendProcedimentos: Boolean;
    function Get__isset_NumTotalAfericaoPa: Boolean;
    function Get__isset_NumTotalGlicemiaCapilar: Boolean;
    function Get__isset_NumTotalAfericaoTemperatura: Boolean;
    function Get__isset_NumTotalMedicaoAltura: Boolean;
    function Get__isset_NumTotalCurativoSimples: Boolean;
    function Get__isset_NumTotalMedicaoPeso: Boolean;
    function Get__isset_NumTotalColetaMaterialParaExameLaboratorial: Boolean;

    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_AtendProcedimentos: Boolean read Get__isset_AtendProcedimentos;
    property __isset_NumTotalAfericaoPa: Boolean read Get__isset_NumTotalAfericaoPa;
    property __isset_NumTotalGlicemiaCapilar: Boolean read Get__isset_NumTotalGlicemiaCapilar;
    property __isset_NumTotalAfericaoTemperatura: Boolean read Get__isset_NumTotalAfericaoTemperatura;
    property __isset_NumTotalMedicaoAltura: Boolean read Get__isset_NumTotalMedicaoAltura;
    property __isset_NumTotalCurativoSimples: Boolean read Get__isset_NumTotalCurativoSimples;
    property __isset_NumTotalMedicaoPeso: Boolean read Get__isset_NumTotalMedicaoPeso;
    property __isset_NumTotalColetaMaterialParaExameLaboratorial: Boolean read Get__isset_NumTotalColetaMaterialParaExameLaboratorial;
  end;

  TFichaProcedimentoMasterThriftImpl = class(TInterfacedObject, IBase, IFichaProcedimentoMasterThrift)
  private
    FUuidFicha: string;
    FTpCdsOrigem: Integer;
    FHeaderTransport: IUnicaLotacaoHeaderThrift;
    FAtendProcedimentos: IThriftList<IFichaProcedimentoChildThrift>;
    FNumTotalAfericaoPa: Int64;
    FNumTotalGlicemiaCapilar: Int64;
    FNumTotalAfericaoTemperatura: Int64;
    FNumTotalMedicaoAltura: Int64;
    FNumTotalCurativoSimples: Int64;
    FNumTotalMedicaoPeso: Int64;
    FNumTotalColetaMaterialParaExameLaboratorial: Int64;
    
    F__isset_TpCdsOrigem: Boolean;
    F__isset_HeaderTransport: Boolean;
    F__isset_AtendProcedimentos: Boolean;
    F__isset_NumTotalAfericaoPa: Boolean;
    F__isset_NumTotalGlicemiaCapilar: Boolean;
    F__isset_NumTotalAfericaoTemperatura: Boolean;
    F__isset_NumTotalMedicaoAltura: Boolean;
    F__isset_NumTotalCurativoSimples: Boolean;
    F__isset_NumTotalMedicaoPeso: Boolean;
    F__isset_NumTotalColetaMaterialParaExameLaboratorial: Boolean;
    
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetAtendProcedimentos: IThriftList<IFichaProcedimentoChildThrift>;
    procedure SetAtendProcedimentos( const Value: IThriftList<IFichaProcedimentoChildThrift>);
    function GetNumTotalAfericaoPa: Int64;
    procedure SetNumTotalAfericaoPa( const Value: Int64);
    function GetNumTotalGlicemiaCapilar: Int64;
    procedure SetNumTotalGlicemiaCapilar( const Value: Int64);
    function GetNumTotalAfericaoTemperatura: Int64;
    procedure SetNumTotalAfericaoTemperatura( const Value: Int64);
    function GetNumTotalMedicaoAltura: Int64;
    procedure SetNumTotalMedicaoAltura( const Value: Int64);
    function GetNumTotalCurativoSimples: Int64;
    procedure SetNumTotalCurativoSimples( const Value: Int64);
    function GetNumTotalMedicaoPeso: Int64;
    procedure SetNumTotalMedicaoPeso( const Value: Int64);
    function GetNumTotalColetaMaterialParaExameLaboratorial: Int64;
    procedure SetNumTotalColetaMaterialParaExameLaboratorial( const Value: Int64);

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_AtendProcedimentos: Boolean;
    function Get__isset_NumTotalAfericaoPa: Boolean;
    function Get__isset_NumTotalGlicemiaCapilar: Boolean;
    function Get__isset_NumTotalAfericaoTemperatura: Boolean;
    function Get__isset_NumTotalMedicaoAltura: Boolean;
    function Get__isset_NumTotalCurativoSimples: Boolean;
    function Get__isset_NumTotalMedicaoPeso: Boolean;
    function Get__isset_NumTotalColetaMaterialParaExameLaboratorial: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property AtendProcedimentos: IThriftList<IFichaProcedimentoChildThrift> read GetAtendProcedimentos write SetAtendProcedimentos;
    property NumTotalAfericaoPa: Int64 read GetNumTotalAfericaoPa write SetNumTotalAfericaoPa;
    property NumTotalGlicemiaCapilar: Int64 read GetNumTotalGlicemiaCapilar write SetNumTotalGlicemiaCapilar;
    property NumTotalAfericaoTemperatura: Int64 read GetNumTotalAfericaoTemperatura write SetNumTotalAfericaoTemperatura;
    property NumTotalMedicaoAltura: Int64 read GetNumTotalMedicaoAltura write SetNumTotalMedicaoAltura;
    property NumTotalCurativoSimples: Int64 read GetNumTotalCurativoSimples write SetNumTotalCurativoSimples;
    property NumTotalMedicaoPeso: Int64 read GetNumTotalMedicaoPeso write SetNumTotalMedicaoPeso;
    property NumTotalColetaMaterialParaExameLaboratorial: Int64 read GetNumTotalColetaMaterialParaExameLaboratorial write SetNumTotalColetaMaterialParaExameLaboratorial;

    // isset
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_AtendProcedimentos: Boolean read Get__isset_AtendProcedimentos;
    property __isset_NumTotalAfericaoPa: Boolean read Get__isset_NumTotalAfericaoPa;
    property __isset_NumTotalGlicemiaCapilar: Boolean read Get__isset_NumTotalGlicemiaCapilar;
    property __isset_NumTotalAfericaoTemperatura: Boolean read Get__isset_NumTotalAfericaoTemperatura;
    property __isset_NumTotalMedicaoAltura: Boolean read Get__isset_NumTotalMedicaoAltura;
    property __isset_NumTotalCurativoSimples: Boolean read Get__isset_NumTotalCurativoSimples;
    property __isset_NumTotalMedicaoPeso: Boolean read Get__isset_NumTotalMedicaoPeso;
    property __isset_NumTotalColetaMaterialParaExameLaboratorial: Boolean read Get__isset_NumTotalColetaMaterialParaExameLaboratorial;
  end;

implementation

constructor TFichaProcedimentoChildThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaProcedimentoChildThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaProcedimentoChildThriftImpl.GetNumProntuario: string;
begin
  Result := FNumProntuario;
end;

procedure TFichaProcedimentoChildThriftImpl.SetNumProntuario( const Value: string);
begin
  F__isset_NumProntuario := True;
  FNumProntuario := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_NumProntuario: Boolean;
begin
  Result := F__isset_NumProntuario;
end;

function TFichaProcedimentoChildThriftImpl.GetCnsCidadao: string;
begin
  Result := FCnsCidadao;
end;

procedure TFichaProcedimentoChildThriftImpl.SetCnsCidadao( const Value: string);
begin
  F__isset_CnsCidadao := True;
  FCnsCidadao := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_CnsCidadao: Boolean;
begin
  Result := F__isset_CnsCidadao;
end;

function TFichaProcedimentoChildThriftImpl.GetDtNascimento: Int64;
begin
  Result := FDtNascimento;
end;

procedure TFichaProcedimentoChildThriftImpl.SetDtNascimento( const Value: Int64);
begin
  F__isset_DtNascimento := True;
  FDtNascimento := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_DtNascimento: Boolean;
begin
  Result := F__isset_DtNascimento;
end;

function TFichaProcedimentoChildThriftImpl.GetSexo: Int64;
begin
  Result := FSexo;
end;

procedure TFichaProcedimentoChildThriftImpl.SetSexo( const Value: Int64);
begin
  F__isset_Sexo := True;
  FSexo := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_Sexo: Boolean;
begin
  Result := F__isset_Sexo;
end;

function TFichaProcedimentoChildThriftImpl.GetLocalAtendimento: Int64;
begin
  Result := FLocalAtendimento;
end;

procedure TFichaProcedimentoChildThriftImpl.SetLocalAtendimento( const Value: Int64);
begin
  F__isset_LocalAtendimento := True;
  FLocalAtendimento := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_LocalAtendimento: Boolean;
begin
  Result := F__isset_LocalAtendimento;
end;

function TFichaProcedimentoChildThriftImpl.GetTurno: Int64;
begin
  Result := FTurno;
end;

procedure TFichaProcedimentoChildThriftImpl.SetTurno( const Value: Int64);
begin
  F__isset_Turno := True;
  FTurno := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_Turno: Boolean;
begin
  Result := F__isset_Turno;
end;

function TFichaProcedimentoChildThriftImpl.GetStatusEscutaInicialOrientacao: Boolean;
begin
  Result := FStatusEscutaInicialOrientacao;
end;

procedure TFichaProcedimentoChildThriftImpl.SetStatusEscutaInicialOrientacao( const Value: Boolean);
begin
  F__isset_StatusEscutaInicialOrientacao := True;
  FStatusEscutaInicialOrientacao := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_StatusEscutaInicialOrientacao: Boolean;
begin
  Result := F__isset_StatusEscutaInicialOrientacao;
end;

function TFichaProcedimentoChildThriftImpl.GetProcedimentos: IThriftList<string>;
begin
  Result := FProcedimentos;
end;

procedure TFichaProcedimentoChildThriftImpl.SetProcedimentos( const Value: IThriftList<string>);
begin
  F__isset_Procedimentos := True;
  FProcedimentos := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_Procedimentos: Boolean;
begin
  Result := F__isset_Procedimentos;
end;

function TFichaProcedimentoChildThriftImpl.GetDataHoraInicialAtendimento: Int64;
begin
  Result := FDataHoraInicialAtendimento;
end;

procedure TFichaProcedimentoChildThriftImpl.SetDataHoraInicialAtendimento( const Value: Int64);
begin
  F__isset_DataHoraInicialAtendimento := True;
  FDataHoraInicialAtendimento := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_DataHoraInicialAtendimento: Boolean;
begin
  Result := F__isset_DataHoraInicialAtendimento;
end;

function TFichaProcedimentoChildThriftImpl.GetDataHoraFinalAtendimento: Int64;
begin
  Result := FDataHoraFinalAtendimento;
end;

procedure TFichaProcedimentoChildThriftImpl.SetDataHoraFinalAtendimento( const Value: Int64);
begin
  F__isset_DataHoraFinalAtendimento := True;
  FDataHoraFinalAtendimento := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_DataHoraFinalAtendimento: Boolean;
begin
  Result := F__isset_DataHoraFinalAtendimento;
end;

function TFichaProcedimentoChildThriftImpl.GetCpfCidadao: string;
begin
  Result := FCpfCidadao;
end;

procedure TFichaProcedimentoChildThriftImpl.SetCpfCidadao( const Value: string);
begin
  F__isset_CpfCidadao := True;
  FCpfCidadao := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_CpfCidadao: Boolean;
begin
  Result := F__isset_CpfCidadao;
end;

function TFichaProcedimentoChildThriftImpl.GetPesoAcompanhamentoNutricional: Double;
begin
  Result := FPesoAcompanhamentoNutricional;
end;

procedure TFichaProcedimentoChildThriftImpl.SetPesoAcompanhamentoNutricional( const Value: Double);
begin
  F__isset_PesoAcompanhamentoNutricional := True;
  FPesoAcompanhamentoNutricional := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_PesoAcompanhamentoNutricional: Boolean;
begin
  Result := F__isset_PesoAcompanhamentoNutricional;
end;

function TFichaProcedimentoChildThriftImpl.GetAlturaAcompanhamentoNutricional: Double;
begin
  Result := FAlturaAcompanhamentoNutricional;
end;

procedure TFichaProcedimentoChildThriftImpl.SetAlturaAcompanhamentoNutricional( const Value: Double);
begin
  F__isset_AlturaAcompanhamentoNutricional := True;
  FAlturaAcompanhamentoNutricional := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_AlturaAcompanhamentoNutricional: Boolean;
begin
  Result := F__isset_AlturaAcompanhamentoNutricional;
end;

function TFichaProcedimentoChildThriftImpl.GetMedicoes: IMedicoesThrift;
begin
  Result := FMedicoes;
end;

procedure TFichaProcedimentoChildThriftImpl.SetMedicoes( const Value: IMedicoesThrift);
begin
  F__isset_Medicoes := True;
  FMedicoes := Value;
end;

function TFichaProcedimentoChildThriftImpl.Get__isset_Medicoes: Boolean;
begin
  Result := F__isset_Medicoes;
end;

procedure TFichaProcedimentoChildThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _list0: IList;
  _i1: Integer;
  _elem2: string;

begin
  tracker := iprot.NextRecursionLevel;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumProntuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I64) then
          begin
            DtNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            Sexo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            LocalAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            Turno := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StatusEscutaInicialOrientacao := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.List) then
          begin
            Procedimentos := TThriftListImpl<string>.Create;
            _list0 := iprot.ReadListBegin();
            for _i1 := 0 to _list0.Count - 1 do
            begin
              _elem2 := iprot.ReadString();
              Procedimentos.Add(_elem2);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataHoraInicialAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataHoraFinalAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.String_) then
          begin
            CpfCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.Double_) then
          begin
            PesoAcompanhamentoNutricional := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.Double_) then
          begin
            AlturaAcompanhamentoNutricional := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        16: begin
          if (field_.Type_ = TType.Struct) then
          begin
            Medicoes := TMedicoesThriftImpl.Create;
            Medicoes.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TFichaProcedimentoChildThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_3 : IList;
  _iter4: string;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('FichaProcedimentoChildThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_NumProntuario) then
  begin
    field_.Name := 'numProntuario';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumProntuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CnsCidadao) then
  begin
    field_.Name := 'cnsCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DtNascimento) then
  begin
    field_.Name := 'dtNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DtNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Sexo) then
  begin
    field_.Name := 'sexo';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Sexo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalAtendimento) then
  begin
    field_.Name := 'localAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(LocalAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Turno) then
  begin
    field_.Name := 'turno';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Turno);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StatusEscutaInicialOrientacao) then
  begin
    field_.Name := 'statusEscutaInicialOrientacao';
    field_.Type_  := TType.Bool_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StatusEscutaInicialOrientacao);
    oprot.WriteFieldEnd();
  end;
  if (Procedimentos <> nil) and __isset_Procedimentos then
  begin
    field_.Name := 'procedimentos';
    field_.Type_  := TType.List;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    list_3 := TListImpl.Create(TType.String_, Procedimentos.Count);
    oprot.WriteListBegin( list_3);
    for _iter4 in Procedimentos do
    begin
      oprot.WriteString(_iter4);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataHoraInicialAtendimento) then
  begin
    field_.Name := 'dataHoraInicialAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataHoraInicialAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataHoraFinalAtendimento) then
  begin
    field_.Name := 'dataHoraFinalAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataHoraFinalAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CpfCidadao) then
  begin
    field_.Name := 'cpfCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CpfCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_PesoAcompanhamentoNutricional) then
  begin
    field_.Name := 'pesoAcompanhamentoNutricional';
    field_.Type_  := TType.Double_;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(PesoAcompanhamentoNutricional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AlturaAcompanhamentoNutricional) then
  begin
    field_.Name := 'alturaAcompanhamentoNutricional';
    field_.Type_  := TType.Double_;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(AlturaAcompanhamentoNutricional);
    oprot.WriteFieldEnd();
  end;
  if (Medicoes <> nil) and __isset_Medicoes then
  begin
    field_.Name := 'medicoes';
    field_.Type_  := TType.Struct;
    field_.ID := 16;
    oprot.WriteFieldBegin(field_);
    Medicoes.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaProcedimentoChildThriftImpl.ToString: string;
var
  _sb5 : TThriftStringBuilder;
  _first6 : Boolean;
begin
  _sb5 := TThriftStringBuilder.Create('(');
  try
    _first6 := TRUE;
    if (__isset_NumProntuario) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('NumProntuario: ');
      _sb5.Append(NumProntuario);
    end;
    if (__isset_CnsCidadao) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('CnsCidadao: ');
      _sb5.Append(CnsCidadao);
    end;
    if (__isset_DtNascimento) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('DtNascimento: ');
      _sb5.Append(DtNascimento);
    end;
    if (__isset_Sexo) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Sexo: ');
      _sb5.Append(Sexo);
    end;
    if (__isset_LocalAtendimento) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('LocalAtendimento: ');
      _sb5.Append(LocalAtendimento);
    end;
    if (__isset_Turno) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Turno: ');
      _sb5.Append(Turno);
    end;
    if (__isset_StatusEscutaInicialOrientacao) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('StatusEscutaInicialOrientacao: ');
      _sb5.Append(StatusEscutaInicialOrientacao);
    end;
    if (Procedimentos <> nil) and __isset_Procedimentos then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Procedimentos: ');
      _sb5.Append(Procedimentos);
    end;
    if (__isset_DataHoraInicialAtendimento) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('DataHoraInicialAtendimento: ');
      _sb5.Append(DataHoraInicialAtendimento);
    end;
    if (__isset_DataHoraFinalAtendimento) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('DataHoraFinalAtendimento: ');
      _sb5.Append(DataHoraFinalAtendimento);
    end;
    if (__isset_CpfCidadao) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('CpfCidadao: ');
      _sb5.Append(CpfCidadao);
    end;
    if (__isset_PesoAcompanhamentoNutricional) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('PesoAcompanhamentoNutricional: ');
      _sb5.Append(PesoAcompanhamentoNutricional);
    end;
    if (__isset_AlturaAcompanhamentoNutricional) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('AlturaAcompanhamentoNutricional: ');
      _sb5.Append(AlturaAcompanhamentoNutricional);
    end;
    if (Medicoes <> nil) and __isset_Medicoes then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Medicoes: ');
      if (Medicoes = nil) then _sb5.Append('<null>') else _sb5.Append(Medicoes.ToString());
    end;
    _sb5.Append(')');
    Result := _sb5.ToString;
    if _first6 then {prevent warning};
  finally
    _sb5.Free;
  end;
end;

constructor TFichaProcedimentoMasterThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaProcedimentoMasterThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaProcedimentoMasterThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaProcedimentoMasterThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

function TFichaProcedimentoMasterThriftImpl.GetHeaderTransport: IUnicaLotacaoHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
begin
  F__isset_HeaderTransport := True;
  FHeaderTransport := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_HeaderTransport: Boolean;
begin
  Result := F__isset_HeaderTransport;
end;

function TFichaProcedimentoMasterThriftImpl.GetAtendProcedimentos: IThriftList<IFichaProcedimentoChildThrift>;
begin
  Result := FAtendProcedimentos;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetAtendProcedimentos( const Value: IThriftList<IFichaProcedimentoChildThrift>);
begin
  F__isset_AtendProcedimentos := True;
  FAtendProcedimentos := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_AtendProcedimentos: Boolean;
begin
  Result := F__isset_AtendProcedimentos;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalAfericaoPa: Int64;
begin
  Result := FNumTotalAfericaoPa;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalAfericaoPa( const Value: Int64);
begin
  F__isset_NumTotalAfericaoPa := True;
  FNumTotalAfericaoPa := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalAfericaoPa: Boolean;
begin
  Result := F__isset_NumTotalAfericaoPa;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalGlicemiaCapilar: Int64;
begin
  Result := FNumTotalGlicemiaCapilar;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalGlicemiaCapilar( const Value: Int64);
begin
  F__isset_NumTotalGlicemiaCapilar := True;
  FNumTotalGlicemiaCapilar := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalGlicemiaCapilar: Boolean;
begin
  Result := F__isset_NumTotalGlicemiaCapilar;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalAfericaoTemperatura: Int64;
begin
  Result := FNumTotalAfericaoTemperatura;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalAfericaoTemperatura( const Value: Int64);
begin
  F__isset_NumTotalAfericaoTemperatura := True;
  FNumTotalAfericaoTemperatura := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalAfericaoTemperatura: Boolean;
begin
  Result := F__isset_NumTotalAfericaoTemperatura;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalMedicaoAltura: Int64;
begin
  Result := FNumTotalMedicaoAltura;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalMedicaoAltura( const Value: Int64);
begin
  F__isset_NumTotalMedicaoAltura := True;
  FNumTotalMedicaoAltura := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalMedicaoAltura: Boolean;
begin
  Result := F__isset_NumTotalMedicaoAltura;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalCurativoSimples: Int64;
begin
  Result := FNumTotalCurativoSimples;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalCurativoSimples( const Value: Int64);
begin
  F__isset_NumTotalCurativoSimples := True;
  FNumTotalCurativoSimples := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalCurativoSimples: Boolean;
begin
  Result := F__isset_NumTotalCurativoSimples;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalMedicaoPeso: Int64;
begin
  Result := FNumTotalMedicaoPeso;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalMedicaoPeso( const Value: Int64);
begin
  F__isset_NumTotalMedicaoPeso := True;
  FNumTotalMedicaoPeso := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalMedicaoPeso: Boolean;
begin
  Result := F__isset_NumTotalMedicaoPeso;
end;

function TFichaProcedimentoMasterThriftImpl.GetNumTotalColetaMaterialParaExameLaboratorial: Int64;
begin
  Result := FNumTotalColetaMaterialParaExameLaboratorial;
end;

procedure TFichaProcedimentoMasterThriftImpl.SetNumTotalColetaMaterialParaExameLaboratorial( const Value: Int64);
begin
  F__isset_NumTotalColetaMaterialParaExameLaboratorial := True;
  FNumTotalColetaMaterialParaExameLaboratorial := Value;
end;

function TFichaProcedimentoMasterThriftImpl.Get__isset_NumTotalColetaMaterialParaExameLaboratorial: Boolean;
begin
  Result := F__isset_NumTotalColetaMaterialParaExameLaboratorial;
end;

procedure TFichaProcedimentoMasterThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  tracker : IProtocolRecursionTracker;
  _req_isset_UuidFicha : Boolean;
  _list7: IList;
  _i8: Integer;
  _elem9: IFichaProcedimentoChildThrift;

begin
  tracker := iprot.NextRecursionLevel;
  _req_isset_UuidFicha := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TUnicaLotacaoHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.List) then
          begin
            AtendProcedimentos := TThriftListImpl<IFichaProcedimentoChildThrift>.Create;
            _list7 := iprot.ReadListBegin();
            for _i8 := 0 to _list7.Count - 1 do
            begin
              _elem9 := TFichaProcedimentoChildThriftImpl.Create;
              _elem9.Read(iprot);
              AtendProcedimentos.Add(_elem9);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalAfericaoPa := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalGlicemiaCapilar := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalAfericaoTemperatura := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalMedicaoAltura := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalCurativoSimples := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalMedicaoPeso := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I64) then
          begin
            NumTotalColetaMaterialParaExameLaboratorial := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
end;

procedure TFichaProcedimentoMasterThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  tracker : IProtocolRecursionTracker;
  list_10 : IList;
  _iter11: IFichaProcedimentoChildThrift;
begin
  tracker := oprot.NextRecursionLevel;
  struc := TStructImpl.Create('FichaProcedimentoMasterThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  if (HeaderTransport <> nil) and __isset_HeaderTransport then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (AtendProcedimentos <> nil) and __isset_AtendProcedimentos then
  begin
    field_.Name := 'atendProcedimentos';
    field_.Type_  := TType.List;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    list_10 := TListImpl.Create(TType.Struct, AtendProcedimentos.Count);
    oprot.WriteListBegin( list_10);
    for _iter11 in AtendProcedimentos do
    begin
      _iter11.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalAfericaoPa) then
  begin
    field_.Name := 'numTotalAfericaoPa';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalAfericaoPa);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalGlicemiaCapilar) then
  begin
    field_.Name := 'numTotalGlicemiaCapilar';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalGlicemiaCapilar);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalAfericaoTemperatura) then
  begin
    field_.Name := 'numTotalAfericaoTemperatura';
    field_.Type_  := TType.I64;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalAfericaoTemperatura);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalMedicaoAltura) then
  begin
    field_.Name := 'numTotalMedicaoAltura';
    field_.Type_  := TType.I64;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalMedicaoAltura);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalCurativoSimples) then
  begin
    field_.Name := 'numTotalCurativoSimples';
    field_.Type_  := TType.I64;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalCurativoSimples);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalMedicaoPeso) then
  begin
    field_.Name := 'numTotalMedicaoPeso';
    field_.Type_  := TType.I64;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalMedicaoPeso);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumTotalColetaMaterialParaExameLaboratorial) then
  begin
    field_.Name := 'numTotalColetaMaterialParaExameLaboratorial';
    field_.Type_  := TType.I64;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(NumTotalColetaMaterialParaExameLaboratorial);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaProcedimentoMasterThriftImpl.ToString: string;
var
  _sb12 : TThriftStringBuilder;
begin
  _sb12 := TThriftStringBuilder.Create('(');
  try
    _sb12.Append(', UuidFicha: ');
    _sb12.Append(UuidFicha);
    if (__isset_TpCdsOrigem) then begin
      _sb12.Append(', TpCdsOrigem: ');
      _sb12.Append(TpCdsOrigem);
    end;
    if (HeaderTransport <> nil) and __isset_HeaderTransport then begin
      _sb12.Append(', HeaderTransport: ');
      if (HeaderTransport = nil) then _sb12.Append('<null>') else _sb12.Append(HeaderTransport.ToString());
    end;
    if (AtendProcedimentos <> nil) and __isset_AtendProcedimentos then begin
      _sb12.Append(', AtendProcedimentos: ');
      _sb12.Append(AtendProcedimentos);
    end;
    if (__isset_NumTotalAfericaoPa) then begin
      _sb12.Append(', NumTotalAfericaoPa: ');
      _sb12.Append(NumTotalAfericaoPa);
    end;
    if (__isset_NumTotalGlicemiaCapilar) then begin
      _sb12.Append(', NumTotalGlicemiaCapilar: ');
      _sb12.Append(NumTotalGlicemiaCapilar);
    end;
    if (__isset_NumTotalAfericaoTemperatura) then begin
      _sb12.Append(', NumTotalAfericaoTemperatura: ');
      _sb12.Append(NumTotalAfericaoTemperatura);
    end;
    if (__isset_NumTotalMedicaoAltura) then begin
      _sb12.Append(', NumTotalMedicaoAltura: ');
      _sb12.Append(NumTotalMedicaoAltura);
    end;
    if (__isset_NumTotalCurativoSimples) then begin
      _sb12.Append(', NumTotalCurativoSimples: ');
      _sb12.Append(NumTotalCurativoSimples);
    end;
    if (__isset_NumTotalMedicaoPeso) then begin
      _sb12.Append(', NumTotalMedicaoPeso: ');
      _sb12.Append(NumTotalMedicaoPeso);
    end;
    if (__isset_NumTotalColetaMaterialParaExameLaboratorial) then begin
      _sb12.Append(', NumTotalColetaMaterialParaExameLaboratorial: ');
      _sb12.Append(NumTotalColetaMaterialParaExameLaboratorial);
    end;
    _sb12.Append(')');
    Result := _sb12.ToString;
  finally
    _sb12.Free;
  end;
end;


initialization

finalization


end.
