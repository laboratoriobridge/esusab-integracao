/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.avaliacaoelegibilidade;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-07")
public class FichaAvaliacaoElegibilidadeThrift implements org.apache.thrift.TBase<FichaAvaliacaoElegibilidadeThrift, FichaAvaliacaoElegibilidadeThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaAvaliacaoElegibilidadeThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAvaliacaoElegibilidadeThrift");

  private static final org.apache.thrift.protocol.TField UUID_FICHA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFicha", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TP_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tpCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField CNS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCidadao", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NOME_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeCidadao", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NOME_SOCIAL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeSocialCidadao", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimentoCidadao", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField SEXO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexoCidadao", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField RACA_COR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("racaCorCidadao", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField NOME_MAE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeMaeCidadao", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_MAE_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomeMae", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipioNascimento", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField NACIONALIDADE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nacionalidadeCidadao", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField EMAIL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("emailCidadao", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField NUMERO_NIS_PIS_PASEP_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroNisPisPasep", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ENDERECO_FIELD_DESC = new org.apache.thrift.protocol.TField("endereco", org.apache.thrift.protocol.TType.STRUCT, (short)16);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_PROCEDENCIA_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarProcedencia", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarModalidade", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField CONDICOES_AVALIADAS_FIELD_DESC = new org.apache.thrift.protocol.TField("condicoesAvaliadas", org.apache.thrift.protocol.TType.LIST, (short)19);
  private static final org.apache.thrift.protocol.TField CID10_PRINCIPAL_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10Principal", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField CID10_SECUNDARIO_UM_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10SecundarioUm", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField CID10_SECUNDARIO_DOIS_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10SecundarioDois", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField CONCLUSAO_DESTINO_ELEGIVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("conclusaoDestinoElegivel", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField CONCLUSAO_DESTINO_INELEGIVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("conclusaoDestinoInelegivel", org.apache.thrift.protocol.TType.LIST, (short)24);
  private static final org.apache.thrift.protocol.TField CUIDADOR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cuidadorCidadao", org.apache.thrift.protocol.TType.I64, (short)25);
  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)26);
  private static final org.apache.thrift.protocol.TField HEADER_TRANSPORT_FIELD_DESC = new org.apache.thrift.protocol.TField("headerTransport", org.apache.thrift.protocol.TType.STRUCT, (short)27);
  private static final org.apache.thrift.protocol.TField NOME_PAI_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomePaiCidadao", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_PAI_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomePai", org.apache.thrift.protocol.TType.BOOL, (short)29);
  private static final org.apache.thrift.protocol.TField DT_NATURALIZACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dtNaturalizacao", org.apache.thrift.protocol.TType.I64, (short)30);
  private static final org.apache.thrift.protocol.TField PORTARIA_NATURALIZACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("portariaNaturalizacao", org.apache.thrift.protocol.TType.STRING, (short)31);
  private static final org.apache.thrift.protocol.TField DT_ENTRADA_BRASIL_FIELD_DESC = new org.apache.thrift.protocol.TField("dtEntradaBrasil", org.apache.thrift.protocol.TType.I64, (short)32);
  private static final org.apache.thrift.protocol.TField PAIS_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("paisNascimento", org.apache.thrift.protocol.TType.I64, (short)33);
  private static final org.apache.thrift.protocol.TField ETNIA_FIELD_DESC = new org.apache.thrift.protocol.TField("etnia", org.apache.thrift.protocol.TType.I64, (short)34);
  private static final org.apache.thrift.protocol.TField CNS_CUIDADOR_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCuidador", org.apache.thrift.protocol.TType.STRING, (short)35);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)36);
  private static final org.apache.thrift.protocol.TField CPF_CUIDADOR_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCuidador", org.apache.thrift.protocol.TType.STRING, (short)37);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAvaliacaoElegibilidadeThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAvaliacaoElegibilidadeThriftTupleSchemeFactory());
  }

  private String uuidFicha; // required
  private int tpCdsOrigem; // optional
  private String cnsCidadao; // optional
  private String nomeCidadao; // optional
  private String nomeSocialCidadao; // optional
  private long dataNascimentoCidadao; // optional
  private long sexoCidadao; // optional
  private long racaCorCidadao; // optional
  private String nomeMaeCidadao; // optional
  private boolean desconheceNomeMae; // optional
  private String codigoIbgeMunicipioNascimento; // optional
  private long nacionalidadeCidadao; // optional
  private String emailCidadao; // optional
  private String numeroNisPisPasep; // optional
  private br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift endereco; // optional
  private long atencaoDomiciliarProcedencia; // optional
  private long atencaoDomiciliarModalidade; // optional
  private List<Long> condicoesAvaliadas; // optional
  private String cid10Principal; // optional
  private String cid10SecundarioUm; // optional
  private String cid10SecundarioDois; // optional
  private long conclusaoDestinoElegivel; // optional
  private List<Long> conclusaoDestinoInelegivel; // optional
  private long cuidadorCidadao; // optional
  private long turno; // optional
  private br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift headerTransport; // optional
  private String nomePaiCidadao; // optional
  private boolean desconheceNomePai; // optional
  private long dtNaturalizacao; // optional
  private String portariaNaturalizacao; // optional
  private long dtEntradaBrasil; // optional
  private long paisNascimento; // optional
  private long etnia; // optional
  private String cnsCuidador; // optional
  private String cpfCidadao; // optional
  private String cpfCuidador; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UUID_FICHA((short)1, "uuidFicha"),
    TP_CDS_ORIGEM((short)2, "tpCdsOrigem"),
    CNS_CIDADAO((short)4, "cnsCidadao"),
    NOME_CIDADAO((short)5, "nomeCidadao"),
    NOME_SOCIAL_CIDADAO((short)6, "nomeSocialCidadao"),
    DATA_NASCIMENTO_CIDADAO((short)7, "dataNascimentoCidadao"),
    SEXO_CIDADAO((short)8, "sexoCidadao"),
    RACA_COR_CIDADAO((short)9, "racaCorCidadao"),
    NOME_MAE_CIDADAO((short)10, "nomeMaeCidadao"),
    DESCONHECE_NOME_MAE((short)11, "desconheceNomeMae"),
    CODIGO_IBGE_MUNICIPIO_NASCIMENTO((short)12, "codigoIbgeMunicipioNascimento"),
    NACIONALIDADE_CIDADAO((short)13, "nacionalidadeCidadao"),
    EMAIL_CIDADAO((short)14, "emailCidadao"),
    NUMERO_NIS_PIS_PASEP((short)15, "numeroNisPisPasep"),
    ENDERECO((short)16, "endereco"),
    ATENCAO_DOMICILIAR_PROCEDENCIA((short)17, "atencaoDomiciliarProcedencia"),
    ATENCAO_DOMICILIAR_MODALIDADE((short)18, "atencaoDomiciliarModalidade"),
    CONDICOES_AVALIADAS((short)19, "condicoesAvaliadas"),
    CID10_PRINCIPAL((short)20, "cid10Principal"),
    CID10_SECUNDARIO_UM((short)21, "cid10SecundarioUm"),
    CID10_SECUNDARIO_DOIS((short)22, "cid10SecundarioDois"),
    CONCLUSAO_DESTINO_ELEGIVEL((short)23, "conclusaoDestinoElegivel"),
    CONCLUSAO_DESTINO_INELEGIVEL((short)24, "conclusaoDestinoInelegivel"),
    CUIDADOR_CIDADAO((short)25, "cuidadorCidadao"),
    TURNO((short)26, "turno"),
    HEADER_TRANSPORT((short)27, "headerTransport"),
    NOME_PAI_CIDADAO((short)28, "nomePaiCidadao"),
    DESCONHECE_NOME_PAI((short)29, "desconheceNomePai"),
    DT_NATURALIZACAO((short)30, "dtNaturalizacao"),
    PORTARIA_NATURALIZACAO((short)31, "portariaNaturalizacao"),
    DT_ENTRADA_BRASIL((short)32, "dtEntradaBrasil"),
    PAIS_NASCIMENTO((short)33, "paisNascimento"),
    ETNIA((short)34, "etnia"),
    CNS_CUIDADOR((short)35, "cnsCuidador"),
    CPF_CIDADAO((short)36, "cpfCidadao"),
    CPF_CUIDADOR((short)37, "cpfCuidador");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UUID_FICHA
          return UUID_FICHA;
        case 2: // TP_CDS_ORIGEM
          return TP_CDS_ORIGEM;
        case 4: // CNS_CIDADAO
          return CNS_CIDADAO;
        case 5: // NOME_CIDADAO
          return NOME_CIDADAO;
        case 6: // NOME_SOCIAL_CIDADAO
          return NOME_SOCIAL_CIDADAO;
        case 7: // DATA_NASCIMENTO_CIDADAO
          return DATA_NASCIMENTO_CIDADAO;
        case 8: // SEXO_CIDADAO
          return SEXO_CIDADAO;
        case 9: // RACA_COR_CIDADAO
          return RACA_COR_CIDADAO;
        case 10: // NOME_MAE_CIDADAO
          return NOME_MAE_CIDADAO;
        case 11: // DESCONHECE_NOME_MAE
          return DESCONHECE_NOME_MAE;
        case 12: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
          return CODIGO_IBGE_MUNICIPIO_NASCIMENTO;
        case 13: // NACIONALIDADE_CIDADAO
          return NACIONALIDADE_CIDADAO;
        case 14: // EMAIL_CIDADAO
          return EMAIL_CIDADAO;
        case 15: // NUMERO_NIS_PIS_PASEP
          return NUMERO_NIS_PIS_PASEP;
        case 16: // ENDERECO
          return ENDERECO;
        case 17: // ATENCAO_DOMICILIAR_PROCEDENCIA
          return ATENCAO_DOMICILIAR_PROCEDENCIA;
        case 18: // ATENCAO_DOMICILIAR_MODALIDADE
          return ATENCAO_DOMICILIAR_MODALIDADE;
        case 19: // CONDICOES_AVALIADAS
          return CONDICOES_AVALIADAS;
        case 20: // CID10_PRINCIPAL
          return CID10_PRINCIPAL;
        case 21: // CID10_SECUNDARIO_UM
          return CID10_SECUNDARIO_UM;
        case 22: // CID10_SECUNDARIO_DOIS
          return CID10_SECUNDARIO_DOIS;
        case 23: // CONCLUSAO_DESTINO_ELEGIVEL
          return CONCLUSAO_DESTINO_ELEGIVEL;
        case 24: // CONCLUSAO_DESTINO_INELEGIVEL
          return CONCLUSAO_DESTINO_INELEGIVEL;
        case 25: // CUIDADOR_CIDADAO
          return CUIDADOR_CIDADAO;
        case 26: // TURNO
          return TURNO;
        case 27: // HEADER_TRANSPORT
          return HEADER_TRANSPORT;
        case 28: // NOME_PAI_CIDADAO
          return NOME_PAI_CIDADAO;
        case 29: // DESCONHECE_NOME_PAI
          return DESCONHECE_NOME_PAI;
        case 30: // DT_NATURALIZACAO
          return DT_NATURALIZACAO;
        case 31: // PORTARIA_NATURALIZACAO
          return PORTARIA_NATURALIZACAO;
        case 32: // DT_ENTRADA_BRASIL
          return DT_ENTRADA_BRASIL;
        case 33: // PAIS_NASCIMENTO
          return PAIS_NASCIMENTO;
        case 34: // ETNIA
          return ETNIA;
        case 35: // CNS_CUIDADOR
          return CNS_CUIDADOR;
        case 36: // CPF_CIDADAO
          return CPF_CIDADAO;
        case 37: // CPF_CUIDADOR
          return CPF_CUIDADOR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TPCDSORIGEM_ISSET_ID = 0;
  private static final int __DATANASCIMENTOCIDADAO_ISSET_ID = 1;
  private static final int __SEXOCIDADAO_ISSET_ID = 2;
  private static final int __RACACORCIDADAO_ISSET_ID = 3;
  private static final int __DESCONHECENOMEMAE_ISSET_ID = 4;
  private static final int __NACIONALIDADECIDADAO_ISSET_ID = 5;
  private static final int __ATENCAODOMICILIARPROCEDENCIA_ISSET_ID = 6;
  private static final int __ATENCAODOMICILIARMODALIDADE_ISSET_ID = 7;
  private static final int __CONCLUSAODESTINOELEGIVEL_ISSET_ID = 8;
  private static final int __CUIDADORCIDADAO_ISSET_ID = 9;
  private static final int __TURNO_ISSET_ID = 10;
  private static final int __DESCONHECENOMEPAI_ISSET_ID = 11;
  private static final int __DTNATURALIZACAO_ISSET_ID = 12;
  private static final int __DTENTRADABRASIL_ISSET_ID = 13;
  private static final int __PAISNASCIMENTO_ISSET_ID = 14;
  private static final int __ETNIA_ISSET_ID = 15;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TP_CDS_ORIGEM,_Fields.CNS_CIDADAO,_Fields.NOME_CIDADAO,_Fields.NOME_SOCIAL_CIDADAO,_Fields.DATA_NASCIMENTO_CIDADAO,_Fields.SEXO_CIDADAO,_Fields.RACA_COR_CIDADAO,_Fields.NOME_MAE_CIDADAO,_Fields.DESCONHECE_NOME_MAE,_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO,_Fields.NACIONALIDADE_CIDADAO,_Fields.EMAIL_CIDADAO,_Fields.NUMERO_NIS_PIS_PASEP,_Fields.ENDERECO,_Fields.ATENCAO_DOMICILIAR_PROCEDENCIA,_Fields.ATENCAO_DOMICILIAR_MODALIDADE,_Fields.CONDICOES_AVALIADAS,_Fields.CID10_PRINCIPAL,_Fields.CID10_SECUNDARIO_UM,_Fields.CID10_SECUNDARIO_DOIS,_Fields.CONCLUSAO_DESTINO_ELEGIVEL,_Fields.CONCLUSAO_DESTINO_INELEGIVEL,_Fields.CUIDADOR_CIDADAO,_Fields.TURNO,_Fields.HEADER_TRANSPORT,_Fields.NOME_PAI_CIDADAO,_Fields.DESCONHECE_NOME_PAI,_Fields.DT_NATURALIZACAO,_Fields.PORTARIA_NATURALIZACAO,_Fields.DT_ENTRADA_BRASIL,_Fields.PAIS_NASCIMENTO,_Fields.ETNIA,_Fields.CNS_CUIDADOR,_Fields.CPF_CIDADAO,_Fields.CPF_CUIDADOR};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UUID_FICHA, new org.apache.thrift.meta_data.FieldMetaData("uuidFicha", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TP_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tpCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CNS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cnsCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_SOCIAL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeSocialCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimentoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("sexoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RACA_COR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("racaCorCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NOME_MAE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeMaeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCONHECE_NOME_MAE, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomeMae", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipioNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NACIONALIDADE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nacionalidadeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EMAIL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("emailCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_NIS_PIS_PASEP, new org.apache.thrift.meta_data.FieldMetaData("numeroNisPisPasep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENDERECO, new org.apache.thrift.meta_data.FieldMetaData("endereco", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift.class)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_PROCEDENCIA, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarProcedencia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_MODALIDADE, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarModalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONDICOES_AVALIADAS, new org.apache.thrift.meta_data.FieldMetaData("condicoesAvaliadas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CID10_PRINCIPAL, new org.apache.thrift.meta_data.FieldMetaData("cid10Principal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CID10_SECUNDARIO_UM, new org.apache.thrift.meta_data.FieldMetaData("cid10SecundarioUm", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CID10_SECUNDARIO_DOIS, new org.apache.thrift.meta_data.FieldMetaData("cid10SecundarioDois", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONCLUSAO_DESTINO_ELEGIVEL, new org.apache.thrift.meta_data.FieldMetaData("conclusaoDestinoElegivel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONCLUSAO_DESTINO_INELEGIVEL, new org.apache.thrift.meta_data.FieldMetaData("conclusaoDestinoInelegivel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CUIDADOR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cuidadorCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.HEADER_TRANSPORT, new org.apache.thrift.meta_data.FieldMetaData("headerTransport", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift.class)));
    tmpMap.put(_Fields.NOME_PAI_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomePaiCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCONHECE_NOME_PAI, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomePai", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DT_NATURALIZACAO, new org.apache.thrift.meta_data.FieldMetaData("dtNaturalizacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PORTARIA_NATURALIZACAO, new org.apache.thrift.meta_data.FieldMetaData("portariaNaturalizacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_ENTRADA_BRASIL, new org.apache.thrift.meta_data.FieldMetaData("dtEntradaBrasil", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PAIS_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("paisNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ETNIA, new org.apache.thrift.meta_data.FieldMetaData("etnia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CNS_CUIDADOR, new org.apache.thrift.meta_data.FieldMetaData("cnsCuidador", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPF_CUIDADOR, new org.apache.thrift.meta_data.FieldMetaData("cpfCuidador", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAvaliacaoElegibilidadeThrift.class, metaDataMap);
  }

  public FichaAvaliacaoElegibilidadeThrift() {
  }

  public FichaAvaliacaoElegibilidadeThrift(
    String uuidFicha)
  {
    this();
    this.uuidFicha = uuidFicha;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAvaliacaoElegibilidadeThrift(FichaAvaliacaoElegibilidadeThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUuidFicha()) {
      this.uuidFicha = other.uuidFicha;
    }
    this.tpCdsOrigem = other.tpCdsOrigem;
    if (other.isSetCnsCidadao()) {
      this.cnsCidadao = other.cnsCidadao;
    }
    if (other.isSetNomeCidadao()) {
      this.nomeCidadao = other.nomeCidadao;
    }
    if (other.isSetNomeSocialCidadao()) {
      this.nomeSocialCidadao = other.nomeSocialCidadao;
    }
    this.dataNascimentoCidadao = other.dataNascimentoCidadao;
    this.sexoCidadao = other.sexoCidadao;
    this.racaCorCidadao = other.racaCorCidadao;
    if (other.isSetNomeMaeCidadao()) {
      this.nomeMaeCidadao = other.nomeMaeCidadao;
    }
    this.desconheceNomeMae = other.desconheceNomeMae;
    if (other.isSetCodigoIbgeMunicipioNascimento()) {
      this.codigoIbgeMunicipioNascimento = other.codigoIbgeMunicipioNascimento;
    }
    this.nacionalidadeCidadao = other.nacionalidadeCidadao;
    if (other.isSetEmailCidadao()) {
      this.emailCidadao = other.emailCidadao;
    }
    if (other.isSetNumeroNisPisPasep()) {
      this.numeroNisPisPasep = other.numeroNisPisPasep;
    }
    if (other.isSetEndereco()) {
      this.endereco = new br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift(other.endereco);
    }
    this.atencaoDomiciliarProcedencia = other.atencaoDomiciliarProcedencia;
    this.atencaoDomiciliarModalidade = other.atencaoDomiciliarModalidade;
    if (other.isSetCondicoesAvaliadas()) {
      List<Long> __this__condicoesAvaliadas = new ArrayList<Long>(other.condicoesAvaliadas);
      this.condicoesAvaliadas = __this__condicoesAvaliadas;
    }
    if (other.isSetCid10Principal()) {
      this.cid10Principal = other.cid10Principal;
    }
    if (other.isSetCid10SecundarioUm()) {
      this.cid10SecundarioUm = other.cid10SecundarioUm;
    }
    if (other.isSetCid10SecundarioDois()) {
      this.cid10SecundarioDois = other.cid10SecundarioDois;
    }
    this.conclusaoDestinoElegivel = other.conclusaoDestinoElegivel;
    if (other.isSetConclusaoDestinoInelegivel()) {
      List<Long> __this__conclusaoDestinoInelegivel = new ArrayList<Long>(other.conclusaoDestinoInelegivel);
      this.conclusaoDestinoInelegivel = __this__conclusaoDestinoInelegivel;
    }
    this.cuidadorCidadao = other.cuidadorCidadao;
    this.turno = other.turno;
    if (other.isSetHeaderTransport()) {
      this.headerTransport = new br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift(other.headerTransport);
    }
    if (other.isSetNomePaiCidadao()) {
      this.nomePaiCidadao = other.nomePaiCidadao;
    }
    this.desconheceNomePai = other.desconheceNomePai;
    this.dtNaturalizacao = other.dtNaturalizacao;
    if (other.isSetPortariaNaturalizacao()) {
      this.portariaNaturalizacao = other.portariaNaturalizacao;
    }
    this.dtEntradaBrasil = other.dtEntradaBrasil;
    this.paisNascimento = other.paisNascimento;
    this.etnia = other.etnia;
    if (other.isSetCnsCuidador()) {
      this.cnsCuidador = other.cnsCuidador;
    }
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
    if (other.isSetCpfCuidador()) {
      this.cpfCuidador = other.cpfCuidador;
    }
  }

  public FichaAvaliacaoElegibilidadeThrift deepCopy() {
    return new FichaAvaliacaoElegibilidadeThrift(this);
  }

  @Override
  public void clear() {
    this.uuidFicha = null;
    setTpCdsOrigemIsSet(false);
    this.tpCdsOrigem = 0;
    this.cnsCidadao = null;
    this.nomeCidadao = null;
    this.nomeSocialCidadao = null;
    setDataNascimentoCidadaoIsSet(false);
    this.dataNascimentoCidadao = 0;
    setSexoCidadaoIsSet(false);
    this.sexoCidadao = 0;
    setRacaCorCidadaoIsSet(false);
    this.racaCorCidadao = 0;
    this.nomeMaeCidadao = null;
    setDesconheceNomeMaeIsSet(false);
    this.desconheceNomeMae = false;
    this.codigoIbgeMunicipioNascimento = null;
    setNacionalidadeCidadaoIsSet(false);
    this.nacionalidadeCidadao = 0;
    this.emailCidadao = null;
    this.numeroNisPisPasep = null;
    this.endereco = null;
    setAtencaoDomiciliarProcedenciaIsSet(false);
    this.atencaoDomiciliarProcedencia = 0;
    setAtencaoDomiciliarModalidadeIsSet(false);
    this.atencaoDomiciliarModalidade = 0;
    this.condicoesAvaliadas = null;
    this.cid10Principal = null;
    this.cid10SecundarioUm = null;
    this.cid10SecundarioDois = null;
    setConclusaoDestinoElegivelIsSet(false);
    this.conclusaoDestinoElegivel = 0;
    this.conclusaoDestinoInelegivel = null;
    setCuidadorCidadaoIsSet(false);
    this.cuidadorCidadao = 0;
    setTurnoIsSet(false);
    this.turno = 0;
    this.headerTransport = null;
    this.nomePaiCidadao = null;
    setDesconheceNomePaiIsSet(false);
    this.desconheceNomePai = false;
    setDtNaturalizacaoIsSet(false);
    this.dtNaturalizacao = 0;
    this.portariaNaturalizacao = null;
    setDtEntradaBrasilIsSet(false);
    this.dtEntradaBrasil = 0;
    setPaisNascimentoIsSet(false);
    this.paisNascimento = 0;
    setEtniaIsSet(false);
    this.etnia = 0;
    this.cnsCuidador = null;
    this.cpfCidadao = null;
    this.cpfCuidador = null;
  }

  public String getUuidFicha() {
    return this.uuidFicha;
  }

  public void setUuidFicha(String uuidFicha) {
    this.uuidFicha = uuidFicha;
  }

  public void unsetUuidFicha() {
    this.uuidFicha = null;
  }

  /** Returns true if field uuidFicha is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFicha() {
    return this.uuidFicha != null;
  }

  public void setUuidFichaIsSet(boolean value) {
    if (!value) {
      this.uuidFicha = null;
    }
  }

  public int getTpCdsOrigem() {
    return this.tpCdsOrigem;
  }

  public void setTpCdsOrigem(int tpCdsOrigem) {
    this.tpCdsOrigem = tpCdsOrigem;
    setTpCdsOrigemIsSet(true);
  }

  public void unsetTpCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tpCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTpCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  public void setTpCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID, value);
  }

  public String getCnsCidadao() {
    return this.cnsCidadao;
  }

  public void setCnsCidadao(String cnsCidadao) {
    this.cnsCidadao = cnsCidadao;
  }

  public void unsetCnsCidadao() {
    this.cnsCidadao = null;
  }

  /** Returns true if field cnsCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCidadao() {
    return this.cnsCidadao != null;
  }

  public void setCnsCidadaoIsSet(boolean value) {
    if (!value) {
      this.cnsCidadao = null;
    }
  }

  public String getNomeCidadao() {
    return this.nomeCidadao;
  }

  public void setNomeCidadao(String nomeCidadao) {
    this.nomeCidadao = nomeCidadao;
  }

  public void unsetNomeCidadao() {
    this.nomeCidadao = null;
  }

  /** Returns true if field nomeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeCidadao() {
    return this.nomeCidadao != null;
  }

  public void setNomeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeCidadao = null;
    }
  }

  public String getNomeSocialCidadao() {
    return this.nomeSocialCidadao;
  }

  public void setNomeSocialCidadao(String nomeSocialCidadao) {
    this.nomeSocialCidadao = nomeSocialCidadao;
  }

  public void unsetNomeSocialCidadao() {
    this.nomeSocialCidadao = null;
  }

  /** Returns true if field nomeSocialCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeSocialCidadao() {
    return this.nomeSocialCidadao != null;
  }

  public void setNomeSocialCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeSocialCidadao = null;
    }
  }

  public long getDataNascimentoCidadao() {
    return this.dataNascimentoCidadao;
  }

  public void setDataNascimentoCidadao(long dataNascimentoCidadao) {
    this.dataNascimentoCidadao = dataNascimentoCidadao;
    setDataNascimentoCidadaoIsSet(true);
  }

  public void unsetDataNascimentoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  /** Returns true if field dataNascimentoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimentoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  public void setDataNascimentoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID, value);
  }

  public long getSexoCidadao() {
    return this.sexoCidadao;
  }

  public void setSexoCidadao(long sexoCidadao) {
    this.sexoCidadao = sexoCidadao;
    setSexoCidadaoIsSet(true);
  }

  public void unsetSexoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  /** Returns true if field sexoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetSexoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  public void setSexoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID, value);
  }

  public long getRacaCorCidadao() {
    return this.racaCorCidadao;
  }

  public void setRacaCorCidadao(long racaCorCidadao) {
    this.racaCorCidadao = racaCorCidadao;
    setRacaCorCidadaoIsSet(true);
  }

  public void unsetRacaCorCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  /** Returns true if field racaCorCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetRacaCorCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  public void setRacaCorCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID, value);
  }

  public String getNomeMaeCidadao() {
    return this.nomeMaeCidadao;
  }

  public void setNomeMaeCidadao(String nomeMaeCidadao) {
    this.nomeMaeCidadao = nomeMaeCidadao;
  }

  public void unsetNomeMaeCidadao() {
    this.nomeMaeCidadao = null;
  }

  /** Returns true if field nomeMaeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeMaeCidadao() {
    return this.nomeMaeCidadao != null;
  }

  public void setNomeMaeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeMaeCidadao = null;
    }
  }

  public boolean isDesconheceNomeMae() {
    return this.desconheceNomeMae;
  }

  public void setDesconheceNomeMae(boolean desconheceNomeMae) {
    this.desconheceNomeMae = desconheceNomeMae;
    setDesconheceNomeMaeIsSet(true);
  }

  public void unsetDesconheceNomeMae() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  /** Returns true if field desconheceNomeMae is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomeMae() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  public void setDesconheceNomeMaeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID, value);
  }

  public String getCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento;
  }

  public void setCodigoIbgeMunicipioNascimento(String codigoIbgeMunicipioNascimento) {
    this.codigoIbgeMunicipioNascimento = codigoIbgeMunicipioNascimento;
  }

  public void unsetCodigoIbgeMunicipioNascimento() {
    this.codigoIbgeMunicipioNascimento = null;
  }

  /** Returns true if field codigoIbgeMunicipioNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento != null;
  }

  public void setCodigoIbgeMunicipioNascimentoIsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipioNascimento = null;
    }
  }

  public long getNacionalidadeCidadao() {
    return this.nacionalidadeCidadao;
  }

  public void setNacionalidadeCidadao(long nacionalidadeCidadao) {
    this.nacionalidadeCidadao = nacionalidadeCidadao;
    setNacionalidadeCidadaoIsSet(true);
  }

  public void unsetNacionalidadeCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID);
  }

  /** Returns true if field nacionalidadeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNacionalidadeCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID);
  }

  public void setNacionalidadeCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID, value);
  }

  public String getEmailCidadao() {
    return this.emailCidadao;
  }

  public void setEmailCidadao(String emailCidadao) {
    this.emailCidadao = emailCidadao;
  }

  public void unsetEmailCidadao() {
    this.emailCidadao = null;
  }

  /** Returns true if field emailCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailCidadao() {
    return this.emailCidadao != null;
  }

  public void setEmailCidadaoIsSet(boolean value) {
    if (!value) {
      this.emailCidadao = null;
    }
  }

  public String getNumeroNisPisPasep() {
    return this.numeroNisPisPasep;
  }

  public void setNumeroNisPisPasep(String numeroNisPisPasep) {
    this.numeroNisPisPasep = numeroNisPisPasep;
  }

  public void unsetNumeroNisPisPasep() {
    this.numeroNisPisPasep = null;
  }

  /** Returns true if field numeroNisPisPasep is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroNisPisPasep() {
    return this.numeroNisPisPasep != null;
  }

  public void setNumeroNisPisPasepIsSet(boolean value) {
    if (!value) {
      this.numeroNisPisPasep = null;
    }
  }

  public br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift getEndereco() {
    return this.endereco;
  }

  public void setEndereco(br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift endereco) {
    this.endereco = endereco;
  }

  public void unsetEndereco() {
    this.endereco = null;
  }

  /** Returns true if field endereco is set (has been assigned a value) and false otherwise */
  public boolean isSetEndereco() {
    return this.endereco != null;
  }

  public void setEnderecoIsSet(boolean value) {
    if (!value) {
      this.endereco = null;
    }
  }

  public long getAtencaoDomiciliarProcedencia() {
    return this.atencaoDomiciliarProcedencia;
  }

  public void setAtencaoDomiciliarProcedencia(long atencaoDomiciliarProcedencia) {
    this.atencaoDomiciliarProcedencia = atencaoDomiciliarProcedencia;
    setAtencaoDomiciliarProcedenciaIsSet(true);
  }

  public void unsetAtencaoDomiciliarProcedencia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARPROCEDENCIA_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarProcedencia is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarProcedencia() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARPROCEDENCIA_ISSET_ID);
  }

  public void setAtencaoDomiciliarProcedenciaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARPROCEDENCIA_ISSET_ID, value);
  }

  public long getAtencaoDomiciliarModalidade() {
    return this.atencaoDomiciliarModalidade;
  }

  public void setAtencaoDomiciliarModalidade(long atencaoDomiciliarModalidade) {
    this.atencaoDomiciliarModalidade = atencaoDomiciliarModalidade;
    setAtencaoDomiciliarModalidadeIsSet(true);
  }

  public void unsetAtencaoDomiciliarModalidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarModalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarModalidade() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  public void setAtencaoDomiciliarModalidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID, value);
  }

  public int getCondicoesAvaliadasSize() {
    return (this.condicoesAvaliadas == null) ? 0 : this.condicoesAvaliadas.size();
  }

  public java.util.Iterator<Long> getCondicoesAvaliadasIterator() {
    return (this.condicoesAvaliadas == null) ? null : this.condicoesAvaliadas.iterator();
  }

  public void addToCondicoesAvaliadas(long elem) {
    if (this.condicoesAvaliadas == null) {
      this.condicoesAvaliadas = new ArrayList<Long>();
    }
    this.condicoesAvaliadas.add(elem);
  }

  public List<Long> getCondicoesAvaliadas() {
    return this.condicoesAvaliadas;
  }

  public void setCondicoesAvaliadas(List<Long> condicoesAvaliadas) {
    this.condicoesAvaliadas = condicoesAvaliadas;
  }

  public void unsetCondicoesAvaliadas() {
    this.condicoesAvaliadas = null;
  }

  /** Returns true if field condicoesAvaliadas is set (has been assigned a value) and false otherwise */
  public boolean isSetCondicoesAvaliadas() {
    return this.condicoesAvaliadas != null;
  }

  public void setCondicoesAvaliadasIsSet(boolean value) {
    if (!value) {
      this.condicoesAvaliadas = null;
    }
  }

  public String getCid10Principal() {
    return this.cid10Principal;
  }

  public void setCid10Principal(String cid10Principal) {
    this.cid10Principal = cid10Principal;
  }

  public void unsetCid10Principal() {
    this.cid10Principal = null;
  }

  /** Returns true if field cid10Principal is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10Principal() {
    return this.cid10Principal != null;
  }

  public void setCid10PrincipalIsSet(boolean value) {
    if (!value) {
      this.cid10Principal = null;
    }
  }

  public String getCid10SecundarioUm() {
    return this.cid10SecundarioUm;
  }

  public void setCid10SecundarioUm(String cid10SecundarioUm) {
    this.cid10SecundarioUm = cid10SecundarioUm;
  }

  public void unsetCid10SecundarioUm() {
    this.cid10SecundarioUm = null;
  }

  /** Returns true if field cid10SecundarioUm is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10SecundarioUm() {
    return this.cid10SecundarioUm != null;
  }

  public void setCid10SecundarioUmIsSet(boolean value) {
    if (!value) {
      this.cid10SecundarioUm = null;
    }
  }

  public String getCid10SecundarioDois() {
    return this.cid10SecundarioDois;
  }

  public void setCid10SecundarioDois(String cid10SecundarioDois) {
    this.cid10SecundarioDois = cid10SecundarioDois;
  }

  public void unsetCid10SecundarioDois() {
    this.cid10SecundarioDois = null;
  }

  /** Returns true if field cid10SecundarioDois is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10SecundarioDois() {
    return this.cid10SecundarioDois != null;
  }

  public void setCid10SecundarioDoisIsSet(boolean value) {
    if (!value) {
      this.cid10SecundarioDois = null;
    }
  }

  public long getConclusaoDestinoElegivel() {
    return this.conclusaoDestinoElegivel;
  }

  public void setConclusaoDestinoElegivel(long conclusaoDestinoElegivel) {
    this.conclusaoDestinoElegivel = conclusaoDestinoElegivel;
    setConclusaoDestinoElegivelIsSet(true);
  }

  public void unsetConclusaoDestinoElegivel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONCLUSAODESTINOELEGIVEL_ISSET_ID);
  }

  /** Returns true if field conclusaoDestinoElegivel is set (has been assigned a value) and false otherwise */
  public boolean isSetConclusaoDestinoElegivel() {
    return EncodingUtils.testBit(__isset_bitfield, __CONCLUSAODESTINOELEGIVEL_ISSET_ID);
  }

  public void setConclusaoDestinoElegivelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONCLUSAODESTINOELEGIVEL_ISSET_ID, value);
  }

  public int getConclusaoDestinoInelegivelSize() {
    return (this.conclusaoDestinoInelegivel == null) ? 0 : this.conclusaoDestinoInelegivel.size();
  }

  public java.util.Iterator<Long> getConclusaoDestinoInelegivelIterator() {
    return (this.conclusaoDestinoInelegivel == null) ? null : this.conclusaoDestinoInelegivel.iterator();
  }

  public void addToConclusaoDestinoInelegivel(long elem) {
    if (this.conclusaoDestinoInelegivel == null) {
      this.conclusaoDestinoInelegivel = new ArrayList<Long>();
    }
    this.conclusaoDestinoInelegivel.add(elem);
  }

  public List<Long> getConclusaoDestinoInelegivel() {
    return this.conclusaoDestinoInelegivel;
  }

  public void setConclusaoDestinoInelegivel(List<Long> conclusaoDestinoInelegivel) {
    this.conclusaoDestinoInelegivel = conclusaoDestinoInelegivel;
  }

  public void unsetConclusaoDestinoInelegivel() {
    this.conclusaoDestinoInelegivel = null;
  }

  /** Returns true if field conclusaoDestinoInelegivel is set (has been assigned a value) and false otherwise */
  public boolean isSetConclusaoDestinoInelegivel() {
    return this.conclusaoDestinoInelegivel != null;
  }

  public void setConclusaoDestinoInelegivelIsSet(boolean value) {
    if (!value) {
      this.conclusaoDestinoInelegivel = null;
    }
  }

  public long getCuidadorCidadao() {
    return this.cuidadorCidadao;
  }

  public void setCuidadorCidadao(long cuidadorCidadao) {
    this.cuidadorCidadao = cuidadorCidadao;
    setCuidadorCidadaoIsSet(true);
  }

  public void unsetCuidadorCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUIDADORCIDADAO_ISSET_ID);
  }

  /** Returns true if field cuidadorCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCuidadorCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __CUIDADORCIDADAO_ISSET_ID);
  }

  public void setCuidadorCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUIDADORCIDADAO_ISSET_ID, value);
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift getHeaderTransport() {
    return this.headerTransport;
  }

  public void setHeaderTransport(br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift headerTransport) {
    this.headerTransport = headerTransport;
  }

  public void unsetHeaderTransport() {
    this.headerTransport = null;
  }

  /** Returns true if field headerTransport is set (has been assigned a value) and false otherwise */
  public boolean isSetHeaderTransport() {
    return this.headerTransport != null;
  }

  public void setHeaderTransportIsSet(boolean value) {
    if (!value) {
      this.headerTransport = null;
    }
  }

  public String getNomePaiCidadao() {
    return this.nomePaiCidadao;
  }

  public void setNomePaiCidadao(String nomePaiCidadao) {
    this.nomePaiCidadao = nomePaiCidadao;
  }

  public void unsetNomePaiCidadao() {
    this.nomePaiCidadao = null;
  }

  /** Returns true if field nomePaiCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomePaiCidadao() {
    return this.nomePaiCidadao != null;
  }

  public void setNomePaiCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomePaiCidadao = null;
    }
  }

  public boolean isDesconheceNomePai() {
    return this.desconheceNomePai;
  }

  public void setDesconheceNomePai(boolean desconheceNomePai) {
    this.desconheceNomePai = desconheceNomePai;
    setDesconheceNomePaiIsSet(true);
  }

  public void unsetDesconheceNomePai() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEPAI_ISSET_ID);
  }

  /** Returns true if field desconheceNomePai is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomePai() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEPAI_ISSET_ID);
  }

  public void setDesconheceNomePaiIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEPAI_ISSET_ID, value);
  }

  public long getDtNaturalizacao() {
    return this.dtNaturalizacao;
  }

  public void setDtNaturalizacao(long dtNaturalizacao) {
    this.dtNaturalizacao = dtNaturalizacao;
    setDtNaturalizacaoIsSet(true);
  }

  public void unsetDtNaturalizacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTNATURALIZACAO_ISSET_ID);
  }

  /** Returns true if field dtNaturalizacao is set (has been assigned a value) and false otherwise */
  public boolean isSetDtNaturalizacao() {
    return EncodingUtils.testBit(__isset_bitfield, __DTNATURALIZACAO_ISSET_ID);
  }

  public void setDtNaturalizacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTNATURALIZACAO_ISSET_ID, value);
  }

  public String getPortariaNaturalizacao() {
    return this.portariaNaturalizacao;
  }

  public void setPortariaNaturalizacao(String portariaNaturalizacao) {
    this.portariaNaturalizacao = portariaNaturalizacao;
  }

  public void unsetPortariaNaturalizacao() {
    this.portariaNaturalizacao = null;
  }

  /** Returns true if field portariaNaturalizacao is set (has been assigned a value) and false otherwise */
  public boolean isSetPortariaNaturalizacao() {
    return this.portariaNaturalizacao != null;
  }

  public void setPortariaNaturalizacaoIsSet(boolean value) {
    if (!value) {
      this.portariaNaturalizacao = null;
    }
  }

  public long getDtEntradaBrasil() {
    return this.dtEntradaBrasil;
  }

  public void setDtEntradaBrasil(long dtEntradaBrasil) {
    this.dtEntradaBrasil = dtEntradaBrasil;
    setDtEntradaBrasilIsSet(true);
  }

  public void unsetDtEntradaBrasil() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTENTRADABRASIL_ISSET_ID);
  }

  /** Returns true if field dtEntradaBrasil is set (has been assigned a value) and false otherwise */
  public boolean isSetDtEntradaBrasil() {
    return EncodingUtils.testBit(__isset_bitfield, __DTENTRADABRASIL_ISSET_ID);
  }

  public void setDtEntradaBrasilIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTENTRADABRASIL_ISSET_ID, value);
  }

  public long getPaisNascimento() {
    return this.paisNascimento;
  }

  public void setPaisNascimento(long paisNascimento) {
    this.paisNascimento = paisNascimento;
    setPaisNascimentoIsSet(true);
  }

  public void unsetPaisNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID);
  }

  /** Returns true if field paisNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetPaisNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID);
  }

  public void setPaisNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID, value);
  }

  public long getEtnia() {
    return this.etnia;
  }

  public void setEtnia(long etnia) {
    this.etnia = etnia;
    setEtniaIsSet(true);
  }

  public void unsetEtnia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ETNIA_ISSET_ID);
  }

  /** Returns true if field etnia is set (has been assigned a value) and false otherwise */
  public boolean isSetEtnia() {
    return EncodingUtils.testBit(__isset_bitfield, __ETNIA_ISSET_ID);
  }

  public void setEtniaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ETNIA_ISSET_ID, value);
  }

  public String getCnsCuidador() {
    return this.cnsCuidador;
  }

  public void setCnsCuidador(String cnsCuidador) {
    this.cnsCuidador = cnsCuidador;
  }

  public void unsetCnsCuidador() {
    this.cnsCuidador = null;
  }

  /** Returns true if field cnsCuidador is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCuidador() {
    return this.cnsCuidador != null;
  }

  public void setCnsCuidadorIsSet(boolean value) {
    if (!value) {
      this.cnsCuidador = null;
    }
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public String getCpfCuidador() {
    return this.cpfCuidador;
  }

  public void setCpfCuidador(String cpfCuidador) {
    this.cpfCuidador = cpfCuidador;
  }

  public void unsetCpfCuidador() {
    this.cpfCuidador = null;
  }

  /** Returns true if field cpfCuidador is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCuidador() {
    return this.cpfCuidador != null;
  }

  public void setCpfCuidadorIsSet(boolean value) {
    if (!value) {
      this.cpfCuidador = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UUID_FICHA:
      if (value == null) {
        unsetUuidFicha();
      } else {
        setUuidFicha((String)value);
      }
      break;

    case TP_CDS_ORIGEM:
      if (value == null) {
        unsetTpCdsOrigem();
      } else {
        setTpCdsOrigem((Integer)value);
      }
      break;

    case CNS_CIDADAO:
      if (value == null) {
        unsetCnsCidadao();
      } else {
        setCnsCidadao((String)value);
      }
      break;

    case NOME_CIDADAO:
      if (value == null) {
        unsetNomeCidadao();
      } else {
        setNomeCidadao((String)value);
      }
      break;

    case NOME_SOCIAL_CIDADAO:
      if (value == null) {
        unsetNomeSocialCidadao();
      } else {
        setNomeSocialCidadao((String)value);
      }
      break;

    case DATA_NASCIMENTO_CIDADAO:
      if (value == null) {
        unsetDataNascimentoCidadao();
      } else {
        setDataNascimentoCidadao((Long)value);
      }
      break;

    case SEXO_CIDADAO:
      if (value == null) {
        unsetSexoCidadao();
      } else {
        setSexoCidadao((Long)value);
      }
      break;

    case RACA_COR_CIDADAO:
      if (value == null) {
        unsetRacaCorCidadao();
      } else {
        setRacaCorCidadao((Long)value);
      }
      break;

    case NOME_MAE_CIDADAO:
      if (value == null) {
        unsetNomeMaeCidadao();
      } else {
        setNomeMaeCidadao((String)value);
      }
      break;

    case DESCONHECE_NOME_MAE:
      if (value == null) {
        unsetDesconheceNomeMae();
      } else {
        setDesconheceNomeMae((Boolean)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      if (value == null) {
        unsetCodigoIbgeMunicipioNascimento();
      } else {
        setCodigoIbgeMunicipioNascimento((String)value);
      }
      break;

    case NACIONALIDADE_CIDADAO:
      if (value == null) {
        unsetNacionalidadeCidadao();
      } else {
        setNacionalidadeCidadao((Long)value);
      }
      break;

    case EMAIL_CIDADAO:
      if (value == null) {
        unsetEmailCidadao();
      } else {
        setEmailCidadao((String)value);
      }
      break;

    case NUMERO_NIS_PIS_PASEP:
      if (value == null) {
        unsetNumeroNisPisPasep();
      } else {
        setNumeroNisPisPasep((String)value);
      }
      break;

    case ENDERECO:
      if (value == null) {
        unsetEndereco();
      } else {
        setEndereco((br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift)value);
      }
      break;

    case ATENCAO_DOMICILIAR_PROCEDENCIA:
      if (value == null) {
        unsetAtencaoDomiciliarProcedencia();
      } else {
        setAtencaoDomiciliarProcedencia((Long)value);
      }
      break;

    case ATENCAO_DOMICILIAR_MODALIDADE:
      if (value == null) {
        unsetAtencaoDomiciliarModalidade();
      } else {
        setAtencaoDomiciliarModalidade((Long)value);
      }
      break;

    case CONDICOES_AVALIADAS:
      if (value == null) {
        unsetCondicoesAvaliadas();
      } else {
        setCondicoesAvaliadas((List<Long>)value);
      }
      break;

    case CID10_PRINCIPAL:
      if (value == null) {
        unsetCid10Principal();
      } else {
        setCid10Principal((String)value);
      }
      break;

    case CID10_SECUNDARIO_UM:
      if (value == null) {
        unsetCid10SecundarioUm();
      } else {
        setCid10SecundarioUm((String)value);
      }
      break;

    case CID10_SECUNDARIO_DOIS:
      if (value == null) {
        unsetCid10SecundarioDois();
      } else {
        setCid10SecundarioDois((String)value);
      }
      break;

    case CONCLUSAO_DESTINO_ELEGIVEL:
      if (value == null) {
        unsetConclusaoDestinoElegivel();
      } else {
        setConclusaoDestinoElegivel((Long)value);
      }
      break;

    case CONCLUSAO_DESTINO_INELEGIVEL:
      if (value == null) {
        unsetConclusaoDestinoInelegivel();
      } else {
        setConclusaoDestinoInelegivel((List<Long>)value);
      }
      break;

    case CUIDADOR_CIDADAO:
      if (value == null) {
        unsetCuidadorCidadao();
      } else {
        setCuidadorCidadao((Long)value);
      }
      break;

    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case HEADER_TRANSPORT:
      if (value == null) {
        unsetHeaderTransport();
      } else {
        setHeaderTransport((br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift)value);
      }
      break;

    case NOME_PAI_CIDADAO:
      if (value == null) {
        unsetNomePaiCidadao();
      } else {
        setNomePaiCidadao((String)value);
      }
      break;

    case DESCONHECE_NOME_PAI:
      if (value == null) {
        unsetDesconheceNomePai();
      } else {
        setDesconheceNomePai((Boolean)value);
      }
      break;

    case DT_NATURALIZACAO:
      if (value == null) {
        unsetDtNaturalizacao();
      } else {
        setDtNaturalizacao((Long)value);
      }
      break;

    case PORTARIA_NATURALIZACAO:
      if (value == null) {
        unsetPortariaNaturalizacao();
      } else {
        setPortariaNaturalizacao((String)value);
      }
      break;

    case DT_ENTRADA_BRASIL:
      if (value == null) {
        unsetDtEntradaBrasil();
      } else {
        setDtEntradaBrasil((Long)value);
      }
      break;

    case PAIS_NASCIMENTO:
      if (value == null) {
        unsetPaisNascimento();
      } else {
        setPaisNascimento((Long)value);
      }
      break;

    case ETNIA:
      if (value == null) {
        unsetEtnia();
      } else {
        setEtnia((Long)value);
      }
      break;

    case CNS_CUIDADOR:
      if (value == null) {
        unsetCnsCuidador();
      } else {
        setCnsCuidador((String)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    case CPF_CUIDADOR:
      if (value == null) {
        unsetCpfCuidador();
      } else {
        setCpfCuidador((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UUID_FICHA:
      return getUuidFicha();

    case TP_CDS_ORIGEM:
      return getTpCdsOrigem();

    case CNS_CIDADAO:
      return getCnsCidadao();

    case NOME_CIDADAO:
      return getNomeCidadao();

    case NOME_SOCIAL_CIDADAO:
      return getNomeSocialCidadao();

    case DATA_NASCIMENTO_CIDADAO:
      return getDataNascimentoCidadao();

    case SEXO_CIDADAO:
      return getSexoCidadao();

    case RACA_COR_CIDADAO:
      return getRacaCorCidadao();

    case NOME_MAE_CIDADAO:
      return getNomeMaeCidadao();

    case DESCONHECE_NOME_MAE:
      return isDesconheceNomeMae();

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return getCodigoIbgeMunicipioNascimento();

    case NACIONALIDADE_CIDADAO:
      return getNacionalidadeCidadao();

    case EMAIL_CIDADAO:
      return getEmailCidadao();

    case NUMERO_NIS_PIS_PASEP:
      return getNumeroNisPisPasep();

    case ENDERECO:
      return getEndereco();

    case ATENCAO_DOMICILIAR_PROCEDENCIA:
      return getAtencaoDomiciliarProcedencia();

    case ATENCAO_DOMICILIAR_MODALIDADE:
      return getAtencaoDomiciliarModalidade();

    case CONDICOES_AVALIADAS:
      return getCondicoesAvaliadas();

    case CID10_PRINCIPAL:
      return getCid10Principal();

    case CID10_SECUNDARIO_UM:
      return getCid10SecundarioUm();

    case CID10_SECUNDARIO_DOIS:
      return getCid10SecundarioDois();

    case CONCLUSAO_DESTINO_ELEGIVEL:
      return getConclusaoDestinoElegivel();

    case CONCLUSAO_DESTINO_INELEGIVEL:
      return getConclusaoDestinoInelegivel();

    case CUIDADOR_CIDADAO:
      return getCuidadorCidadao();

    case TURNO:
      return getTurno();

    case HEADER_TRANSPORT:
      return getHeaderTransport();

    case NOME_PAI_CIDADAO:
      return getNomePaiCidadao();

    case DESCONHECE_NOME_PAI:
      return isDesconheceNomePai();

    case DT_NATURALIZACAO:
      return getDtNaturalizacao();

    case PORTARIA_NATURALIZACAO:
      return getPortariaNaturalizacao();

    case DT_ENTRADA_BRASIL:
      return getDtEntradaBrasil();

    case PAIS_NASCIMENTO:
      return getPaisNascimento();

    case ETNIA:
      return getEtnia();

    case CNS_CUIDADOR:
      return getCnsCuidador();

    case CPF_CIDADAO:
      return getCpfCidadao();

    case CPF_CUIDADOR:
      return getCpfCuidador();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UUID_FICHA:
      return isSetUuidFicha();
    case TP_CDS_ORIGEM:
      return isSetTpCdsOrigem();
    case CNS_CIDADAO:
      return isSetCnsCidadao();
    case NOME_CIDADAO:
      return isSetNomeCidadao();
    case NOME_SOCIAL_CIDADAO:
      return isSetNomeSocialCidadao();
    case DATA_NASCIMENTO_CIDADAO:
      return isSetDataNascimentoCidadao();
    case SEXO_CIDADAO:
      return isSetSexoCidadao();
    case RACA_COR_CIDADAO:
      return isSetRacaCorCidadao();
    case NOME_MAE_CIDADAO:
      return isSetNomeMaeCidadao();
    case DESCONHECE_NOME_MAE:
      return isSetDesconheceNomeMae();
    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return isSetCodigoIbgeMunicipioNascimento();
    case NACIONALIDADE_CIDADAO:
      return isSetNacionalidadeCidadao();
    case EMAIL_CIDADAO:
      return isSetEmailCidadao();
    case NUMERO_NIS_PIS_PASEP:
      return isSetNumeroNisPisPasep();
    case ENDERECO:
      return isSetEndereco();
    case ATENCAO_DOMICILIAR_PROCEDENCIA:
      return isSetAtencaoDomiciliarProcedencia();
    case ATENCAO_DOMICILIAR_MODALIDADE:
      return isSetAtencaoDomiciliarModalidade();
    case CONDICOES_AVALIADAS:
      return isSetCondicoesAvaliadas();
    case CID10_PRINCIPAL:
      return isSetCid10Principal();
    case CID10_SECUNDARIO_UM:
      return isSetCid10SecundarioUm();
    case CID10_SECUNDARIO_DOIS:
      return isSetCid10SecundarioDois();
    case CONCLUSAO_DESTINO_ELEGIVEL:
      return isSetConclusaoDestinoElegivel();
    case CONCLUSAO_DESTINO_INELEGIVEL:
      return isSetConclusaoDestinoInelegivel();
    case CUIDADOR_CIDADAO:
      return isSetCuidadorCidadao();
    case TURNO:
      return isSetTurno();
    case HEADER_TRANSPORT:
      return isSetHeaderTransport();
    case NOME_PAI_CIDADAO:
      return isSetNomePaiCidadao();
    case DESCONHECE_NOME_PAI:
      return isSetDesconheceNomePai();
    case DT_NATURALIZACAO:
      return isSetDtNaturalizacao();
    case PORTARIA_NATURALIZACAO:
      return isSetPortariaNaturalizacao();
    case DT_ENTRADA_BRASIL:
      return isSetDtEntradaBrasil();
    case PAIS_NASCIMENTO:
      return isSetPaisNascimento();
    case ETNIA:
      return isSetEtnia();
    case CNS_CUIDADOR:
      return isSetCnsCuidador();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    case CPF_CUIDADOR:
      return isSetCpfCuidador();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAvaliacaoElegibilidadeThrift)
      return this.equals((FichaAvaliacaoElegibilidadeThrift)that);
    return false;
  }

  public boolean equals(FichaAvaliacaoElegibilidadeThrift that) {
    if (that == null)
      return false;

    boolean this_present_uuidFicha = true && this.isSetUuidFicha();
    boolean that_present_uuidFicha = true && that.isSetUuidFicha();
    if (this_present_uuidFicha || that_present_uuidFicha) {
      if (!(this_present_uuidFicha && that_present_uuidFicha))
        return false;
      if (!this.uuidFicha.equals(that.uuidFicha))
        return false;
    }

    boolean this_present_tpCdsOrigem = true && this.isSetTpCdsOrigem();
    boolean that_present_tpCdsOrigem = true && that.isSetTpCdsOrigem();
    if (this_present_tpCdsOrigem || that_present_tpCdsOrigem) {
      if (!(this_present_tpCdsOrigem && that_present_tpCdsOrigem))
        return false;
      if (this.tpCdsOrigem != that.tpCdsOrigem)
        return false;
    }

    boolean this_present_cnsCidadao = true && this.isSetCnsCidadao();
    boolean that_present_cnsCidadao = true && that.isSetCnsCidadao();
    if (this_present_cnsCidadao || that_present_cnsCidadao) {
      if (!(this_present_cnsCidadao && that_present_cnsCidadao))
        return false;
      if (!this.cnsCidadao.equals(that.cnsCidadao))
        return false;
    }

    boolean this_present_nomeCidadao = true && this.isSetNomeCidadao();
    boolean that_present_nomeCidadao = true && that.isSetNomeCidadao();
    if (this_present_nomeCidadao || that_present_nomeCidadao) {
      if (!(this_present_nomeCidadao && that_present_nomeCidadao))
        return false;
      if (!this.nomeCidadao.equals(that.nomeCidadao))
        return false;
    }

    boolean this_present_nomeSocialCidadao = true && this.isSetNomeSocialCidadao();
    boolean that_present_nomeSocialCidadao = true && that.isSetNomeSocialCidadao();
    if (this_present_nomeSocialCidadao || that_present_nomeSocialCidadao) {
      if (!(this_present_nomeSocialCidadao && that_present_nomeSocialCidadao))
        return false;
      if (!this.nomeSocialCidadao.equals(that.nomeSocialCidadao))
        return false;
    }

    boolean this_present_dataNascimentoCidadao = true && this.isSetDataNascimentoCidadao();
    boolean that_present_dataNascimentoCidadao = true && that.isSetDataNascimentoCidadao();
    if (this_present_dataNascimentoCidadao || that_present_dataNascimentoCidadao) {
      if (!(this_present_dataNascimentoCidadao && that_present_dataNascimentoCidadao))
        return false;
      if (this.dataNascimentoCidadao != that.dataNascimentoCidadao)
        return false;
    }

    boolean this_present_sexoCidadao = true && this.isSetSexoCidadao();
    boolean that_present_sexoCidadao = true && that.isSetSexoCidadao();
    if (this_present_sexoCidadao || that_present_sexoCidadao) {
      if (!(this_present_sexoCidadao && that_present_sexoCidadao))
        return false;
      if (this.sexoCidadao != that.sexoCidadao)
        return false;
    }

    boolean this_present_racaCorCidadao = true && this.isSetRacaCorCidadao();
    boolean that_present_racaCorCidadao = true && that.isSetRacaCorCidadao();
    if (this_present_racaCorCidadao || that_present_racaCorCidadao) {
      if (!(this_present_racaCorCidadao && that_present_racaCorCidadao))
        return false;
      if (this.racaCorCidadao != that.racaCorCidadao)
        return false;
    }

    boolean this_present_nomeMaeCidadao = true && this.isSetNomeMaeCidadao();
    boolean that_present_nomeMaeCidadao = true && that.isSetNomeMaeCidadao();
    if (this_present_nomeMaeCidadao || that_present_nomeMaeCidadao) {
      if (!(this_present_nomeMaeCidadao && that_present_nomeMaeCidadao))
        return false;
      if (!this.nomeMaeCidadao.equals(that.nomeMaeCidadao))
        return false;
    }

    boolean this_present_desconheceNomeMae = true && this.isSetDesconheceNomeMae();
    boolean that_present_desconheceNomeMae = true && that.isSetDesconheceNomeMae();
    if (this_present_desconheceNomeMae || that_present_desconheceNomeMae) {
      if (!(this_present_desconheceNomeMae && that_present_desconheceNomeMae))
        return false;
      if (this.desconheceNomeMae != that.desconheceNomeMae)
        return false;
    }

    boolean this_present_codigoIbgeMunicipioNascimento = true && this.isSetCodigoIbgeMunicipioNascimento();
    boolean that_present_codigoIbgeMunicipioNascimento = true && that.isSetCodigoIbgeMunicipioNascimento();
    if (this_present_codigoIbgeMunicipioNascimento || that_present_codigoIbgeMunicipioNascimento) {
      if (!(this_present_codigoIbgeMunicipioNascimento && that_present_codigoIbgeMunicipioNascimento))
        return false;
      if (!this.codigoIbgeMunicipioNascimento.equals(that.codigoIbgeMunicipioNascimento))
        return false;
    }

    boolean this_present_nacionalidadeCidadao = true && this.isSetNacionalidadeCidadao();
    boolean that_present_nacionalidadeCidadao = true && that.isSetNacionalidadeCidadao();
    if (this_present_nacionalidadeCidadao || that_present_nacionalidadeCidadao) {
      if (!(this_present_nacionalidadeCidadao && that_present_nacionalidadeCidadao))
        return false;
      if (this.nacionalidadeCidadao != that.nacionalidadeCidadao)
        return false;
    }

    boolean this_present_emailCidadao = true && this.isSetEmailCidadao();
    boolean that_present_emailCidadao = true && that.isSetEmailCidadao();
    if (this_present_emailCidadao || that_present_emailCidadao) {
      if (!(this_present_emailCidadao && that_present_emailCidadao))
        return false;
      if (!this.emailCidadao.equals(that.emailCidadao))
        return false;
    }

    boolean this_present_numeroNisPisPasep = true && this.isSetNumeroNisPisPasep();
    boolean that_present_numeroNisPisPasep = true && that.isSetNumeroNisPisPasep();
    if (this_present_numeroNisPisPasep || that_present_numeroNisPisPasep) {
      if (!(this_present_numeroNisPisPasep && that_present_numeroNisPisPasep))
        return false;
      if (!this.numeroNisPisPasep.equals(that.numeroNisPisPasep))
        return false;
    }

    boolean this_present_endereco = true && this.isSetEndereco();
    boolean that_present_endereco = true && that.isSetEndereco();
    if (this_present_endereco || that_present_endereco) {
      if (!(this_present_endereco && that_present_endereco))
        return false;
      if (!this.endereco.equals(that.endereco))
        return false;
    }

    boolean this_present_atencaoDomiciliarProcedencia = true && this.isSetAtencaoDomiciliarProcedencia();
    boolean that_present_atencaoDomiciliarProcedencia = true && that.isSetAtencaoDomiciliarProcedencia();
    if (this_present_atencaoDomiciliarProcedencia || that_present_atencaoDomiciliarProcedencia) {
      if (!(this_present_atencaoDomiciliarProcedencia && that_present_atencaoDomiciliarProcedencia))
        return false;
      if (this.atencaoDomiciliarProcedencia != that.atencaoDomiciliarProcedencia)
        return false;
    }

    boolean this_present_atencaoDomiciliarModalidade = true && this.isSetAtencaoDomiciliarModalidade();
    boolean that_present_atencaoDomiciliarModalidade = true && that.isSetAtencaoDomiciliarModalidade();
    if (this_present_atencaoDomiciliarModalidade || that_present_atencaoDomiciliarModalidade) {
      if (!(this_present_atencaoDomiciliarModalidade && that_present_atencaoDomiciliarModalidade))
        return false;
      if (this.atencaoDomiciliarModalidade != that.atencaoDomiciliarModalidade)
        return false;
    }

    boolean this_present_condicoesAvaliadas = true && this.isSetCondicoesAvaliadas();
    boolean that_present_condicoesAvaliadas = true && that.isSetCondicoesAvaliadas();
    if (this_present_condicoesAvaliadas || that_present_condicoesAvaliadas) {
      if (!(this_present_condicoesAvaliadas && that_present_condicoesAvaliadas))
        return false;
      if (!this.condicoesAvaliadas.equals(that.condicoesAvaliadas))
        return false;
    }

    boolean this_present_cid10Principal = true && this.isSetCid10Principal();
    boolean that_present_cid10Principal = true && that.isSetCid10Principal();
    if (this_present_cid10Principal || that_present_cid10Principal) {
      if (!(this_present_cid10Principal && that_present_cid10Principal))
        return false;
      if (!this.cid10Principal.equals(that.cid10Principal))
        return false;
    }

    boolean this_present_cid10SecundarioUm = true && this.isSetCid10SecundarioUm();
    boolean that_present_cid10SecundarioUm = true && that.isSetCid10SecundarioUm();
    if (this_present_cid10SecundarioUm || that_present_cid10SecundarioUm) {
      if (!(this_present_cid10SecundarioUm && that_present_cid10SecundarioUm))
        return false;
      if (!this.cid10SecundarioUm.equals(that.cid10SecundarioUm))
        return false;
    }

    boolean this_present_cid10SecundarioDois = true && this.isSetCid10SecundarioDois();
    boolean that_present_cid10SecundarioDois = true && that.isSetCid10SecundarioDois();
    if (this_present_cid10SecundarioDois || that_present_cid10SecundarioDois) {
      if (!(this_present_cid10SecundarioDois && that_present_cid10SecundarioDois))
        return false;
      if (!this.cid10SecundarioDois.equals(that.cid10SecundarioDois))
        return false;
    }

    boolean this_present_conclusaoDestinoElegivel = true && this.isSetConclusaoDestinoElegivel();
    boolean that_present_conclusaoDestinoElegivel = true && that.isSetConclusaoDestinoElegivel();
    if (this_present_conclusaoDestinoElegivel || that_present_conclusaoDestinoElegivel) {
      if (!(this_present_conclusaoDestinoElegivel && that_present_conclusaoDestinoElegivel))
        return false;
      if (this.conclusaoDestinoElegivel != that.conclusaoDestinoElegivel)
        return false;
    }

    boolean this_present_conclusaoDestinoInelegivel = true && this.isSetConclusaoDestinoInelegivel();
    boolean that_present_conclusaoDestinoInelegivel = true && that.isSetConclusaoDestinoInelegivel();
    if (this_present_conclusaoDestinoInelegivel || that_present_conclusaoDestinoInelegivel) {
      if (!(this_present_conclusaoDestinoInelegivel && that_present_conclusaoDestinoInelegivel))
        return false;
      if (!this.conclusaoDestinoInelegivel.equals(that.conclusaoDestinoInelegivel))
        return false;
    }

    boolean this_present_cuidadorCidadao = true && this.isSetCuidadorCidadao();
    boolean that_present_cuidadorCidadao = true && that.isSetCuidadorCidadao();
    if (this_present_cuidadorCidadao || that_present_cuidadorCidadao) {
      if (!(this_present_cuidadorCidadao && that_present_cuidadorCidadao))
        return false;
      if (this.cuidadorCidadao != that.cuidadorCidadao)
        return false;
    }

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_headerTransport = true && this.isSetHeaderTransport();
    boolean that_present_headerTransport = true && that.isSetHeaderTransport();
    if (this_present_headerTransport || that_present_headerTransport) {
      if (!(this_present_headerTransport && that_present_headerTransport))
        return false;
      if (!this.headerTransport.equals(that.headerTransport))
        return false;
    }

    boolean this_present_nomePaiCidadao = true && this.isSetNomePaiCidadao();
    boolean that_present_nomePaiCidadao = true && that.isSetNomePaiCidadao();
    if (this_present_nomePaiCidadao || that_present_nomePaiCidadao) {
      if (!(this_present_nomePaiCidadao && that_present_nomePaiCidadao))
        return false;
      if (!this.nomePaiCidadao.equals(that.nomePaiCidadao))
        return false;
    }

    boolean this_present_desconheceNomePai = true && this.isSetDesconheceNomePai();
    boolean that_present_desconheceNomePai = true && that.isSetDesconheceNomePai();
    if (this_present_desconheceNomePai || that_present_desconheceNomePai) {
      if (!(this_present_desconheceNomePai && that_present_desconheceNomePai))
        return false;
      if (this.desconheceNomePai != that.desconheceNomePai)
        return false;
    }

    boolean this_present_dtNaturalizacao = true && this.isSetDtNaturalizacao();
    boolean that_present_dtNaturalizacao = true && that.isSetDtNaturalizacao();
    if (this_present_dtNaturalizacao || that_present_dtNaturalizacao) {
      if (!(this_present_dtNaturalizacao && that_present_dtNaturalizacao))
        return false;
      if (this.dtNaturalizacao != that.dtNaturalizacao)
        return false;
    }

    boolean this_present_portariaNaturalizacao = true && this.isSetPortariaNaturalizacao();
    boolean that_present_portariaNaturalizacao = true && that.isSetPortariaNaturalizacao();
    if (this_present_portariaNaturalizacao || that_present_portariaNaturalizacao) {
      if (!(this_present_portariaNaturalizacao && that_present_portariaNaturalizacao))
        return false;
      if (!this.portariaNaturalizacao.equals(that.portariaNaturalizacao))
        return false;
    }

    boolean this_present_dtEntradaBrasil = true && this.isSetDtEntradaBrasil();
    boolean that_present_dtEntradaBrasil = true && that.isSetDtEntradaBrasil();
    if (this_present_dtEntradaBrasil || that_present_dtEntradaBrasil) {
      if (!(this_present_dtEntradaBrasil && that_present_dtEntradaBrasil))
        return false;
      if (this.dtEntradaBrasil != that.dtEntradaBrasil)
        return false;
    }

    boolean this_present_paisNascimento = true && this.isSetPaisNascimento();
    boolean that_present_paisNascimento = true && that.isSetPaisNascimento();
    if (this_present_paisNascimento || that_present_paisNascimento) {
      if (!(this_present_paisNascimento && that_present_paisNascimento))
        return false;
      if (this.paisNascimento != that.paisNascimento)
        return false;
    }

    boolean this_present_etnia = true && this.isSetEtnia();
    boolean that_present_etnia = true && that.isSetEtnia();
    if (this_present_etnia || that_present_etnia) {
      if (!(this_present_etnia && that_present_etnia))
        return false;
      if (this.etnia != that.etnia)
        return false;
    }

    boolean this_present_cnsCuidador = true && this.isSetCnsCuidador();
    boolean that_present_cnsCuidador = true && that.isSetCnsCuidador();
    if (this_present_cnsCuidador || that_present_cnsCuidador) {
      if (!(this_present_cnsCuidador && that_present_cnsCuidador))
        return false;
      if (!this.cnsCuidador.equals(that.cnsCuidador))
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    boolean this_present_cpfCuidador = true && this.isSetCpfCuidador();
    boolean that_present_cpfCuidador = true && that.isSetCpfCuidador();
    if (this_present_cpfCuidador || that_present_cpfCuidador) {
      if (!(this_present_cpfCuidador && that_present_cpfCuidador))
        return false;
      if (!this.cpfCuidador.equals(that.cpfCuidador))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_uuidFicha = true && (isSetUuidFicha());
    list.add(present_uuidFicha);
    if (present_uuidFicha)
      list.add(uuidFicha);

    boolean present_tpCdsOrigem = true && (isSetTpCdsOrigem());
    list.add(present_tpCdsOrigem);
    if (present_tpCdsOrigem)
      list.add(tpCdsOrigem);

    boolean present_cnsCidadao = true && (isSetCnsCidadao());
    list.add(present_cnsCidadao);
    if (present_cnsCidadao)
      list.add(cnsCidadao);

    boolean present_nomeCidadao = true && (isSetNomeCidadao());
    list.add(present_nomeCidadao);
    if (present_nomeCidadao)
      list.add(nomeCidadao);

    boolean present_nomeSocialCidadao = true && (isSetNomeSocialCidadao());
    list.add(present_nomeSocialCidadao);
    if (present_nomeSocialCidadao)
      list.add(nomeSocialCidadao);

    boolean present_dataNascimentoCidadao = true && (isSetDataNascimentoCidadao());
    list.add(present_dataNascimentoCidadao);
    if (present_dataNascimentoCidadao)
      list.add(dataNascimentoCidadao);

    boolean present_sexoCidadao = true && (isSetSexoCidadao());
    list.add(present_sexoCidadao);
    if (present_sexoCidadao)
      list.add(sexoCidadao);

    boolean present_racaCorCidadao = true && (isSetRacaCorCidadao());
    list.add(present_racaCorCidadao);
    if (present_racaCorCidadao)
      list.add(racaCorCidadao);

    boolean present_nomeMaeCidadao = true && (isSetNomeMaeCidadao());
    list.add(present_nomeMaeCidadao);
    if (present_nomeMaeCidadao)
      list.add(nomeMaeCidadao);

    boolean present_desconheceNomeMae = true && (isSetDesconheceNomeMae());
    list.add(present_desconheceNomeMae);
    if (present_desconheceNomeMae)
      list.add(desconheceNomeMae);

    boolean present_codigoIbgeMunicipioNascimento = true && (isSetCodigoIbgeMunicipioNascimento());
    list.add(present_codigoIbgeMunicipioNascimento);
    if (present_codigoIbgeMunicipioNascimento)
      list.add(codigoIbgeMunicipioNascimento);

    boolean present_nacionalidadeCidadao = true && (isSetNacionalidadeCidadao());
    list.add(present_nacionalidadeCidadao);
    if (present_nacionalidadeCidadao)
      list.add(nacionalidadeCidadao);

    boolean present_emailCidadao = true && (isSetEmailCidadao());
    list.add(present_emailCidadao);
    if (present_emailCidadao)
      list.add(emailCidadao);

    boolean present_numeroNisPisPasep = true && (isSetNumeroNisPisPasep());
    list.add(present_numeroNisPisPasep);
    if (present_numeroNisPisPasep)
      list.add(numeroNisPisPasep);

    boolean present_endereco = true && (isSetEndereco());
    list.add(present_endereco);
    if (present_endereco)
      list.add(endereco);

    boolean present_atencaoDomiciliarProcedencia = true && (isSetAtencaoDomiciliarProcedencia());
    list.add(present_atencaoDomiciliarProcedencia);
    if (present_atencaoDomiciliarProcedencia)
      list.add(atencaoDomiciliarProcedencia);

    boolean present_atencaoDomiciliarModalidade = true && (isSetAtencaoDomiciliarModalidade());
    list.add(present_atencaoDomiciliarModalidade);
    if (present_atencaoDomiciliarModalidade)
      list.add(atencaoDomiciliarModalidade);

    boolean present_condicoesAvaliadas = true && (isSetCondicoesAvaliadas());
    list.add(present_condicoesAvaliadas);
    if (present_condicoesAvaliadas)
      list.add(condicoesAvaliadas);

    boolean present_cid10Principal = true && (isSetCid10Principal());
    list.add(present_cid10Principal);
    if (present_cid10Principal)
      list.add(cid10Principal);

    boolean present_cid10SecundarioUm = true && (isSetCid10SecundarioUm());
    list.add(present_cid10SecundarioUm);
    if (present_cid10SecundarioUm)
      list.add(cid10SecundarioUm);

    boolean present_cid10SecundarioDois = true && (isSetCid10SecundarioDois());
    list.add(present_cid10SecundarioDois);
    if (present_cid10SecundarioDois)
      list.add(cid10SecundarioDois);

    boolean present_conclusaoDestinoElegivel = true && (isSetConclusaoDestinoElegivel());
    list.add(present_conclusaoDestinoElegivel);
    if (present_conclusaoDestinoElegivel)
      list.add(conclusaoDestinoElegivel);

    boolean present_conclusaoDestinoInelegivel = true && (isSetConclusaoDestinoInelegivel());
    list.add(present_conclusaoDestinoInelegivel);
    if (present_conclusaoDestinoInelegivel)
      list.add(conclusaoDestinoInelegivel);

    boolean present_cuidadorCidadao = true && (isSetCuidadorCidadao());
    list.add(present_cuidadorCidadao);
    if (present_cuidadorCidadao)
      list.add(cuidadorCidadao);

    boolean present_turno = true && (isSetTurno());
    list.add(present_turno);
    if (present_turno)
      list.add(turno);

    boolean present_headerTransport = true && (isSetHeaderTransport());
    list.add(present_headerTransport);
    if (present_headerTransport)
      list.add(headerTransport);

    boolean present_nomePaiCidadao = true && (isSetNomePaiCidadao());
    list.add(present_nomePaiCidadao);
    if (present_nomePaiCidadao)
      list.add(nomePaiCidadao);

    boolean present_desconheceNomePai = true && (isSetDesconheceNomePai());
    list.add(present_desconheceNomePai);
    if (present_desconheceNomePai)
      list.add(desconheceNomePai);

    boolean present_dtNaturalizacao = true && (isSetDtNaturalizacao());
    list.add(present_dtNaturalizacao);
    if (present_dtNaturalizacao)
      list.add(dtNaturalizacao);

    boolean present_portariaNaturalizacao = true && (isSetPortariaNaturalizacao());
    list.add(present_portariaNaturalizacao);
    if (present_portariaNaturalizacao)
      list.add(portariaNaturalizacao);

    boolean present_dtEntradaBrasil = true && (isSetDtEntradaBrasil());
    list.add(present_dtEntradaBrasil);
    if (present_dtEntradaBrasil)
      list.add(dtEntradaBrasil);

    boolean present_paisNascimento = true && (isSetPaisNascimento());
    list.add(present_paisNascimento);
    if (present_paisNascimento)
      list.add(paisNascimento);

    boolean present_etnia = true && (isSetEtnia());
    list.add(present_etnia);
    if (present_etnia)
      list.add(etnia);

    boolean present_cnsCuidador = true && (isSetCnsCuidador());
    list.add(present_cnsCuidador);
    if (present_cnsCuidador)
      list.add(cnsCuidador);

    boolean present_cpfCidadao = true && (isSetCpfCidadao());
    list.add(present_cpfCidadao);
    if (present_cpfCidadao)
      list.add(cpfCidadao);

    boolean present_cpfCuidador = true && (isSetCpfCuidador());
    list.add(present_cpfCuidador);
    if (present_cpfCuidador)
      list.add(cpfCuidador);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaAvaliacaoElegibilidadeThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUuidFicha()).compareTo(other.isSetUuidFicha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFicha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFicha, other.uuidFicha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTpCdsOrigem()).compareTo(other.isSetTpCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTpCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tpCdsOrigem, other.tpCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsCidadao()).compareTo(other.isSetCnsCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCidadao, other.cnsCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeCidadao()).compareTo(other.isSetNomeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeCidadao, other.nomeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeSocialCidadao()).compareTo(other.isSetNomeSocialCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeSocialCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeSocialCidadao, other.nomeSocialCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimentoCidadao()).compareTo(other.isSetDataNascimentoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimentoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimentoCidadao, other.dataNascimentoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexoCidadao()).compareTo(other.isSetSexoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexoCidadao, other.sexoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRacaCorCidadao()).compareTo(other.isSetRacaCorCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRacaCorCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.racaCorCidadao, other.racaCorCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeMaeCidadao()).compareTo(other.isSetNomeMaeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeMaeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeMaeCidadao, other.nomeMaeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomeMae()).compareTo(other.isSetDesconheceNomeMae());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomeMae()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomeMae, other.desconheceNomeMae);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipioNascimento()).compareTo(other.isSetCodigoIbgeMunicipioNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipioNascimento, other.codigoIbgeMunicipioNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNacionalidadeCidadao()).compareTo(other.isSetNacionalidadeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNacionalidadeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nacionalidadeCidadao, other.nacionalidadeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailCidadao()).compareTo(other.isSetEmailCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailCidadao, other.emailCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroNisPisPasep()).compareTo(other.isSetNumeroNisPisPasep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroNisPisPasep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroNisPisPasep, other.numeroNisPisPasep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndereco()).compareTo(other.isSetEndereco());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndereco()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endereco, other.endereco);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarProcedencia()).compareTo(other.isSetAtencaoDomiciliarProcedencia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarProcedencia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarProcedencia, other.atencaoDomiciliarProcedencia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarModalidade()).compareTo(other.isSetAtencaoDomiciliarModalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarModalidade, other.atencaoDomiciliarModalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondicoesAvaliadas()).compareTo(other.isSetCondicoesAvaliadas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondicoesAvaliadas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condicoesAvaliadas, other.condicoesAvaliadas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10Principal()).compareTo(other.isSetCid10Principal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10Principal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10Principal, other.cid10Principal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10SecundarioUm()).compareTo(other.isSetCid10SecundarioUm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10SecundarioUm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10SecundarioUm, other.cid10SecundarioUm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10SecundarioDois()).compareTo(other.isSetCid10SecundarioDois());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10SecundarioDois()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10SecundarioDois, other.cid10SecundarioDois);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConclusaoDestinoElegivel()).compareTo(other.isSetConclusaoDestinoElegivel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConclusaoDestinoElegivel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conclusaoDestinoElegivel, other.conclusaoDestinoElegivel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConclusaoDestinoInelegivel()).compareTo(other.isSetConclusaoDestinoInelegivel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConclusaoDestinoInelegivel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conclusaoDestinoInelegivel, other.conclusaoDestinoInelegivel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCuidadorCidadao()).compareTo(other.isSetCuidadorCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCuidadorCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cuidadorCidadao, other.cuidadorCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(other.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, other.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeaderTransport()).compareTo(other.isSetHeaderTransport());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeaderTransport()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headerTransport, other.headerTransport);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomePaiCidadao()).compareTo(other.isSetNomePaiCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomePaiCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomePaiCidadao, other.nomePaiCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomePai()).compareTo(other.isSetDesconheceNomePai());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomePai()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomePai, other.desconheceNomePai);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtNaturalizacao()).compareTo(other.isSetDtNaturalizacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtNaturalizacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtNaturalizacao, other.dtNaturalizacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPortariaNaturalizacao()).compareTo(other.isSetPortariaNaturalizacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPortariaNaturalizacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.portariaNaturalizacao, other.portariaNaturalizacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtEntradaBrasil()).compareTo(other.isSetDtEntradaBrasil());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtEntradaBrasil()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtEntradaBrasil, other.dtEntradaBrasil);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaisNascimento()).compareTo(other.isSetPaisNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaisNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paisNascimento, other.paisNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEtnia()).compareTo(other.isSetEtnia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEtnia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.etnia, other.etnia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsCuidador()).compareTo(other.isSetCnsCuidador());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCuidador()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCuidador, other.cnsCuidador);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(other.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, other.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCuidador()).compareTo(other.isSetCpfCuidador());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCuidador()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCuidador, other.cpfCuidador);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAvaliacaoElegibilidadeThrift(");
    boolean first = true;

    sb.append("uuidFicha:");
    if (this.uuidFicha == null) {
      sb.append("null");
    } else {
      sb.append(this.uuidFicha);
    }
    first = false;
    if (isSetTpCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tpCdsOrigem:");
      sb.append(this.tpCdsOrigem);
      first = false;
    }
    if (isSetCnsCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cnsCidadao:");
      if (this.cnsCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCidadao);
      }
      first = false;
    }
    if (isSetNomeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeCidadao:");
      if (this.nomeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeCidadao);
      }
      first = false;
    }
    if (isSetNomeSocialCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeSocialCidadao:");
      if (this.nomeSocialCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeSocialCidadao);
      }
      first = false;
    }
    if (isSetDataNascimentoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimentoCidadao:");
      sb.append(this.dataNascimentoCidadao);
      first = false;
    }
    if (isSetSexoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("sexoCidadao:");
      sb.append(this.sexoCidadao);
      first = false;
    }
    if (isSetRacaCorCidadao()) {
      if (!first) sb.append(", ");
      sb.append("racaCorCidadao:");
      sb.append(this.racaCorCidadao);
      first = false;
    }
    if (isSetNomeMaeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeMaeCidadao:");
      if (this.nomeMaeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeMaeCidadao);
      }
      first = false;
    }
    if (isSetDesconheceNomeMae()) {
      if (!first) sb.append(", ");
      sb.append("desconheceNomeMae:");
      sb.append(this.desconheceNomeMae);
      first = false;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipioNascimento:");
      if (this.codigoIbgeMunicipioNascimento == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipioNascimento);
      }
      first = false;
    }
    if (isSetNacionalidadeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nacionalidadeCidadao:");
      sb.append(this.nacionalidadeCidadao);
      first = false;
    }
    if (isSetEmailCidadao()) {
      if (!first) sb.append(", ");
      sb.append("emailCidadao:");
      if (this.emailCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.emailCidadao);
      }
      first = false;
    }
    if (isSetNumeroNisPisPasep()) {
      if (!first) sb.append(", ");
      sb.append("numeroNisPisPasep:");
      if (this.numeroNisPisPasep == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroNisPisPasep);
      }
      first = false;
    }
    if (isSetEndereco()) {
      if (!first) sb.append(", ");
      sb.append("endereco:");
      if (this.endereco == null) {
        sb.append("null");
      } else {
        sb.append(this.endereco);
      }
      first = false;
    }
    if (isSetAtencaoDomiciliarProcedencia()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarProcedencia:");
      sb.append(this.atencaoDomiciliarProcedencia);
      first = false;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarModalidade:");
      sb.append(this.atencaoDomiciliarModalidade);
      first = false;
    }
    if (isSetCondicoesAvaliadas()) {
      if (!first) sb.append(", ");
      sb.append("condicoesAvaliadas:");
      if (this.condicoesAvaliadas == null) {
        sb.append("null");
      } else {
        sb.append(this.condicoesAvaliadas);
      }
      first = false;
    }
    if (isSetCid10Principal()) {
      if (!first) sb.append(", ");
      sb.append("cid10Principal:");
      if (this.cid10Principal == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10Principal);
      }
      first = false;
    }
    if (isSetCid10SecundarioUm()) {
      if (!first) sb.append(", ");
      sb.append("cid10SecundarioUm:");
      if (this.cid10SecundarioUm == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10SecundarioUm);
      }
      first = false;
    }
    if (isSetCid10SecundarioDois()) {
      if (!first) sb.append(", ");
      sb.append("cid10SecundarioDois:");
      if (this.cid10SecundarioDois == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10SecundarioDois);
      }
      first = false;
    }
    if (isSetConclusaoDestinoElegivel()) {
      if (!first) sb.append(", ");
      sb.append("conclusaoDestinoElegivel:");
      sb.append(this.conclusaoDestinoElegivel);
      first = false;
    }
    if (isSetConclusaoDestinoInelegivel()) {
      if (!first) sb.append(", ");
      sb.append("conclusaoDestinoInelegivel:");
      if (this.conclusaoDestinoInelegivel == null) {
        sb.append("null");
      } else {
        sb.append(this.conclusaoDestinoInelegivel);
      }
      first = false;
    }
    if (isSetCuidadorCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cuidadorCidadao:");
      sb.append(this.cuidadorCidadao);
      first = false;
    }
    if (isSetTurno()) {
      if (!first) sb.append(", ");
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetHeaderTransport()) {
      if (!first) sb.append(", ");
      sb.append("headerTransport:");
      if (this.headerTransport == null) {
        sb.append("null");
      } else {
        sb.append(this.headerTransport);
      }
      first = false;
    }
    if (isSetNomePaiCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomePaiCidadao:");
      if (this.nomePaiCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomePaiCidadao);
      }
      first = false;
    }
    if (isSetDesconheceNomePai()) {
      if (!first) sb.append(", ");
      sb.append("desconheceNomePai:");
      sb.append(this.desconheceNomePai);
      first = false;
    }
    if (isSetDtNaturalizacao()) {
      if (!first) sb.append(", ");
      sb.append("dtNaturalizacao:");
      sb.append(this.dtNaturalizacao);
      first = false;
    }
    if (isSetPortariaNaturalizacao()) {
      if (!first) sb.append(", ");
      sb.append("portariaNaturalizacao:");
      if (this.portariaNaturalizacao == null) {
        sb.append("null");
      } else {
        sb.append(this.portariaNaturalizacao);
      }
      first = false;
    }
    if (isSetDtEntradaBrasil()) {
      if (!first) sb.append(", ");
      sb.append("dtEntradaBrasil:");
      sb.append(this.dtEntradaBrasil);
      first = false;
    }
    if (isSetPaisNascimento()) {
      if (!first) sb.append(", ");
      sb.append("paisNascimento:");
      sb.append(this.paisNascimento);
      first = false;
    }
    if (isSetEtnia()) {
      if (!first) sb.append(", ");
      sb.append("etnia:");
      sb.append(this.etnia);
      first = false;
    }
    if (isSetCnsCuidador()) {
      if (!first) sb.append(", ");
      sb.append("cnsCuidador:");
      if (this.cnsCuidador == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCuidador);
      }
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    if (isSetCpfCuidador()) {
      if (!first) sb.append(", ");
      sb.append("cpfCuidador:");
      if (this.cpfCuidador == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCuidador);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetUuidFicha()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuidFicha' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (endereco != null) {
      endereco.validate();
    }
    if (headerTransport != null) {
      headerTransport.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAvaliacaoElegibilidadeThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAvaliacaoElegibilidadeThriftStandardScheme getScheme() {
      return new FichaAvaliacaoElegibilidadeThriftStandardScheme();
    }
  }

  private static class FichaAvaliacaoElegibilidadeThriftStandardScheme extends StandardScheme<FichaAvaliacaoElegibilidadeThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UUID_FICHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFicha = iprot.readString();
              struct.setUuidFichaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TP_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tpCdsOrigem = iprot.readI32();
              struct.setTpCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CNS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCidadao = iprot.readString();
              struct.setCnsCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOME_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeCidadao = iprot.readString();
              struct.setNomeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NOME_SOCIAL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeSocialCidadao = iprot.readString();
              struct.setNomeSocialCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DATA_NASCIMENTO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimentoCidadao = iprot.readI64();
              struct.setDataNascimentoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SEXO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexoCidadao = iprot.readI64();
              struct.setSexoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RACA_COR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.racaCorCidadao = iprot.readI64();
              struct.setRacaCorCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NOME_MAE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeMaeCidadao = iprot.readString();
              struct.setNomeMaeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DESCONHECE_NOME_MAE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomeMae = iprot.readBool();
              struct.setDesconheceNomeMaeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipioNascimento = iprot.readString();
              struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // NACIONALIDADE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nacionalidadeCidadao = iprot.readI64();
              struct.setNacionalidadeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // EMAIL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailCidadao = iprot.readString();
              struct.setEmailCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // NUMERO_NIS_PIS_PASEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroNisPisPasep = iprot.readString();
              struct.setNumeroNisPisPasepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ENDERECO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.endereco = new br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift();
              struct.endereco.read(iprot);
              struct.setEnderecoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ATENCAO_DOMICILIAR_PROCEDENCIA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarProcedencia = iprot.readI64();
              struct.setAtencaoDomiciliarProcedenciaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ATENCAO_DOMICILIAR_MODALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarModalidade = iprot.readI64();
              struct.setAtencaoDomiciliarModalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // CONDICOES_AVALIADAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.condicoesAvaliadas = new ArrayList<Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.condicoesAvaliadas.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setCondicoesAvaliadasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CID10_PRINCIPAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10Principal = iprot.readString();
              struct.setCid10PrincipalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CID10_SECUNDARIO_UM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10SecundarioUm = iprot.readString();
              struct.setCid10SecundarioUmIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CID10_SECUNDARIO_DOIS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10SecundarioDois = iprot.readString();
              struct.setCid10SecundarioDoisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CONCLUSAO_DESTINO_ELEGIVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.conclusaoDestinoElegivel = iprot.readI64();
              struct.setConclusaoDestinoElegivelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // CONCLUSAO_DESTINO_INELEGIVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.conclusaoDestinoInelegivel = new ArrayList<Long>(_list3.size);
                long _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readI64();
                  struct.conclusaoDestinoInelegivel.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setConclusaoDestinoInelegivelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // CUIDADOR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.cuidadorCidadao = iprot.readI64();
              struct.setCuidadorCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // HEADER_TRANSPORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.headerTransport = new br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift();
              struct.headerTransport.read(iprot);
              struct.setHeaderTransportIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // NOME_PAI_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomePaiCidadao = iprot.readString();
              struct.setNomePaiCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // DESCONHECE_NOME_PAI
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomePai = iprot.readBool();
              struct.setDesconheceNomePaiIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // DT_NATURALIZACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtNaturalizacao = iprot.readI64();
              struct.setDtNaturalizacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // PORTARIA_NATURALIZACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.portariaNaturalizacao = iprot.readString();
              struct.setPortariaNaturalizacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // DT_ENTRADA_BRASIL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtEntradaBrasil = iprot.readI64();
              struct.setDtEntradaBrasilIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // PAIS_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paisNascimento = iprot.readI64();
              struct.setPaisNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // ETNIA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.etnia = iprot.readI64();
              struct.setEtniaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // CNS_CUIDADOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCuidador = iprot.readString();
              struct.setCnsCuidadorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // CPF_CUIDADOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCuidador = iprot.readString();
              struct.setCpfCuidadorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.uuidFicha != null) {
        oprot.writeFieldBegin(UUID_FICHA_FIELD_DESC);
        oprot.writeString(struct.uuidFicha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeFieldBegin(TP_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tpCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.cnsCidadao != null) {
        if (struct.isSetCnsCidadao()) {
          oprot.writeFieldBegin(CNS_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cnsCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeCidadao != null) {
        if (struct.isSetNomeCidadao()) {
          oprot.writeFieldBegin(NOME_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeSocialCidadao != null) {
        if (struct.isSetNomeSocialCidadao()) {
          oprot.writeFieldBegin(NOME_SOCIAL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeSocialCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimentoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeFieldBegin(SEXO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.sexoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeFieldBegin(RACA_COR_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.racaCorCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.nomeMaeCidadao != null) {
        if (struct.isSetNomeMaeCidadao()) {
          oprot.writeFieldBegin(NOME_MAE_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeMaeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeFieldBegin(DESCONHECE_NOME_MAE_FIELD_DESC);
        oprot.writeBool(struct.desconheceNomeMae);
        oprot.writeFieldEnd();
      }
      if (struct.codigoIbgeMunicipioNascimento != null) {
        if (struct.isSetCodigoIbgeMunicipioNascimento()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipioNascimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNacionalidadeCidadao()) {
        oprot.writeFieldBegin(NACIONALIDADE_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.nacionalidadeCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.emailCidadao != null) {
        if (struct.isSetEmailCidadao()) {
          oprot.writeFieldBegin(EMAIL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.emailCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroNisPisPasep != null) {
        if (struct.isSetNumeroNisPisPasep()) {
          oprot.writeFieldBegin(NUMERO_NIS_PIS_PASEP_FIELD_DESC);
          oprot.writeString(struct.numeroNisPisPasep);
          oprot.writeFieldEnd();
        }
      }
      if (struct.endereco != null) {
        if (struct.isSetEndereco()) {
          oprot.writeFieldBegin(ENDERECO_FIELD_DESC);
          struct.endereco.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAtencaoDomiciliarProcedencia()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_PROCEDENCIA_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarProcedencia);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
        oprot.writeFieldEnd();
      }
      if (struct.condicoesAvaliadas != null) {
        if (struct.isSetCondicoesAvaliadas()) {
          oprot.writeFieldBegin(CONDICOES_AVALIADAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.condicoesAvaliadas.size()));
            for (long _iter6 : struct.condicoesAvaliadas)
            {
              oprot.writeI64(_iter6);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10Principal != null) {
        if (struct.isSetCid10Principal()) {
          oprot.writeFieldBegin(CID10_PRINCIPAL_FIELD_DESC);
          oprot.writeString(struct.cid10Principal);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10SecundarioUm != null) {
        if (struct.isSetCid10SecundarioUm()) {
          oprot.writeFieldBegin(CID10_SECUNDARIO_UM_FIELD_DESC);
          oprot.writeString(struct.cid10SecundarioUm);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10SecundarioDois != null) {
        if (struct.isSetCid10SecundarioDois()) {
          oprot.writeFieldBegin(CID10_SECUNDARIO_DOIS_FIELD_DESC);
          oprot.writeString(struct.cid10SecundarioDois);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetConclusaoDestinoElegivel()) {
        oprot.writeFieldBegin(CONCLUSAO_DESTINO_ELEGIVEL_FIELD_DESC);
        oprot.writeI64(struct.conclusaoDestinoElegivel);
        oprot.writeFieldEnd();
      }
      if (struct.conclusaoDestinoInelegivel != null) {
        if (struct.isSetConclusaoDestinoInelegivel()) {
          oprot.writeFieldBegin(CONCLUSAO_DESTINO_INELEGIVEL_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.conclusaoDestinoInelegivel.size()));
            for (long _iter7 : struct.conclusaoDestinoInelegivel)
            {
              oprot.writeI64(_iter7);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCuidadorCidadao()) {
        oprot.writeFieldBegin(CUIDADOR_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.cuidadorCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.headerTransport != null) {
        if (struct.isSetHeaderTransport()) {
          oprot.writeFieldBegin(HEADER_TRANSPORT_FIELD_DESC);
          struct.headerTransport.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomePaiCidadao != null) {
        if (struct.isSetNomePaiCidadao()) {
          oprot.writeFieldBegin(NOME_PAI_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomePaiCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDesconheceNomePai()) {
        oprot.writeFieldBegin(DESCONHECE_NOME_PAI_FIELD_DESC);
        oprot.writeBool(struct.desconheceNomePai);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDtNaturalizacao()) {
        oprot.writeFieldBegin(DT_NATURALIZACAO_FIELD_DESC);
        oprot.writeI64(struct.dtNaturalizacao);
        oprot.writeFieldEnd();
      }
      if (struct.portariaNaturalizacao != null) {
        if (struct.isSetPortariaNaturalizacao()) {
          oprot.writeFieldBegin(PORTARIA_NATURALIZACAO_FIELD_DESC);
          oprot.writeString(struct.portariaNaturalizacao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDtEntradaBrasil()) {
        oprot.writeFieldBegin(DT_ENTRADA_BRASIL_FIELD_DESC);
        oprot.writeI64(struct.dtEntradaBrasil);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPaisNascimento()) {
        oprot.writeFieldBegin(PAIS_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.paisNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEtnia()) {
        oprot.writeFieldBegin(ETNIA_FIELD_DESC);
        oprot.writeI64(struct.etnia);
        oprot.writeFieldEnd();
      }
      if (struct.cnsCuidador != null) {
        if (struct.isSetCnsCuidador()) {
          oprot.writeFieldBegin(CNS_CUIDADOR_FIELD_DESC);
          oprot.writeString(struct.cnsCuidador);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cpfCuidador != null) {
        if (struct.isSetCpfCuidador()) {
          oprot.writeFieldBegin(CPF_CUIDADOR_FIELD_DESC);
          oprot.writeString(struct.cpfCuidador);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAvaliacaoElegibilidadeThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAvaliacaoElegibilidadeThriftTupleScheme getScheme() {
      return new FichaAvaliacaoElegibilidadeThriftTupleScheme();
    }
  }

  private static class FichaAvaliacaoElegibilidadeThriftTupleScheme extends TupleScheme<FichaAvaliacaoElegibilidadeThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.uuidFicha);
      BitSet optionals = new BitSet();
      if (struct.isSetTpCdsOrigem()) {
        optionals.set(0);
      }
      if (struct.isSetCnsCidadao()) {
        optionals.set(1);
      }
      if (struct.isSetNomeCidadao()) {
        optionals.set(2);
      }
      if (struct.isSetNomeSocialCidadao()) {
        optionals.set(3);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        optionals.set(4);
      }
      if (struct.isSetSexoCidadao()) {
        optionals.set(5);
      }
      if (struct.isSetRacaCorCidadao()) {
        optionals.set(6);
      }
      if (struct.isSetNomeMaeCidadao()) {
        optionals.set(7);
      }
      if (struct.isSetDesconheceNomeMae()) {
        optionals.set(8);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        optionals.set(9);
      }
      if (struct.isSetNacionalidadeCidadao()) {
        optionals.set(10);
      }
      if (struct.isSetEmailCidadao()) {
        optionals.set(11);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        optionals.set(12);
      }
      if (struct.isSetEndereco()) {
        optionals.set(13);
      }
      if (struct.isSetAtencaoDomiciliarProcedencia()) {
        optionals.set(14);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        optionals.set(15);
      }
      if (struct.isSetCondicoesAvaliadas()) {
        optionals.set(16);
      }
      if (struct.isSetCid10Principal()) {
        optionals.set(17);
      }
      if (struct.isSetCid10SecundarioUm()) {
        optionals.set(18);
      }
      if (struct.isSetCid10SecundarioDois()) {
        optionals.set(19);
      }
      if (struct.isSetConclusaoDestinoElegivel()) {
        optionals.set(20);
      }
      if (struct.isSetConclusaoDestinoInelegivel()) {
        optionals.set(21);
      }
      if (struct.isSetCuidadorCidadao()) {
        optionals.set(22);
      }
      if (struct.isSetTurno()) {
        optionals.set(23);
      }
      if (struct.isSetHeaderTransport()) {
        optionals.set(24);
      }
      if (struct.isSetNomePaiCidadao()) {
        optionals.set(25);
      }
      if (struct.isSetDesconheceNomePai()) {
        optionals.set(26);
      }
      if (struct.isSetDtNaturalizacao()) {
        optionals.set(27);
      }
      if (struct.isSetPortariaNaturalizacao()) {
        optionals.set(28);
      }
      if (struct.isSetDtEntradaBrasil()) {
        optionals.set(29);
      }
      if (struct.isSetPaisNascimento()) {
        optionals.set(30);
      }
      if (struct.isSetEtnia()) {
        optionals.set(31);
      }
      if (struct.isSetCnsCuidador()) {
        optionals.set(32);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(33);
      }
      if (struct.isSetCpfCuidador()) {
        optionals.set(34);
      }
      oprot.writeBitSet(optionals, 35);
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeI32(struct.tpCdsOrigem);
      }
      if (struct.isSetCnsCidadao()) {
        oprot.writeString(struct.cnsCidadao);
      }
      if (struct.isSetNomeCidadao()) {
        oprot.writeString(struct.nomeCidadao);
      }
      if (struct.isSetNomeSocialCidadao()) {
        oprot.writeString(struct.nomeSocialCidadao);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeI64(struct.dataNascimentoCidadao);
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeI64(struct.sexoCidadao);
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeI64(struct.racaCorCidadao);
      }
      if (struct.isSetNomeMaeCidadao()) {
        oprot.writeString(struct.nomeMaeCidadao);
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeBool(struct.desconheceNomeMae);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        oprot.writeString(struct.codigoIbgeMunicipioNascimento);
      }
      if (struct.isSetNacionalidadeCidadao()) {
        oprot.writeI64(struct.nacionalidadeCidadao);
      }
      if (struct.isSetEmailCidadao()) {
        oprot.writeString(struct.emailCidadao);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        oprot.writeString(struct.numeroNisPisPasep);
      }
      if (struct.isSetEndereco()) {
        struct.endereco.write(oprot);
      }
      if (struct.isSetAtencaoDomiciliarProcedencia()) {
        oprot.writeI64(struct.atencaoDomiciliarProcedencia);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
      }
      if (struct.isSetCondicoesAvaliadas()) {
        {
          oprot.writeI32(struct.condicoesAvaliadas.size());
          for (long _iter8 : struct.condicoesAvaliadas)
          {
            oprot.writeI64(_iter8);
          }
        }
      }
      if (struct.isSetCid10Principal()) {
        oprot.writeString(struct.cid10Principal);
      }
      if (struct.isSetCid10SecundarioUm()) {
        oprot.writeString(struct.cid10SecundarioUm);
      }
      if (struct.isSetCid10SecundarioDois()) {
        oprot.writeString(struct.cid10SecundarioDois);
      }
      if (struct.isSetConclusaoDestinoElegivel()) {
        oprot.writeI64(struct.conclusaoDestinoElegivel);
      }
      if (struct.isSetConclusaoDestinoInelegivel()) {
        {
          oprot.writeI32(struct.conclusaoDestinoInelegivel.size());
          for (long _iter9 : struct.conclusaoDestinoInelegivel)
          {
            oprot.writeI64(_iter9);
          }
        }
      }
      if (struct.isSetCuidadorCidadao()) {
        oprot.writeI64(struct.cuidadorCidadao);
      }
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetHeaderTransport()) {
        struct.headerTransport.write(oprot);
      }
      if (struct.isSetNomePaiCidadao()) {
        oprot.writeString(struct.nomePaiCidadao);
      }
      if (struct.isSetDesconheceNomePai()) {
        oprot.writeBool(struct.desconheceNomePai);
      }
      if (struct.isSetDtNaturalizacao()) {
        oprot.writeI64(struct.dtNaturalizacao);
      }
      if (struct.isSetPortariaNaturalizacao()) {
        oprot.writeString(struct.portariaNaturalizacao);
      }
      if (struct.isSetDtEntradaBrasil()) {
        oprot.writeI64(struct.dtEntradaBrasil);
      }
      if (struct.isSetPaisNascimento()) {
        oprot.writeI64(struct.paisNascimento);
      }
      if (struct.isSetEtnia()) {
        oprot.writeI64(struct.etnia);
      }
      if (struct.isSetCnsCuidador()) {
        oprot.writeString(struct.cnsCuidador);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
      if (struct.isSetCpfCuidador()) {
        oprot.writeString(struct.cpfCuidador);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.uuidFicha = iprot.readString();
      struct.setUuidFichaIsSet(true);
      BitSet incoming = iprot.readBitSet(35);
      if (incoming.get(0)) {
        struct.tpCdsOrigem = iprot.readI32();
        struct.setTpCdsOrigemIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cnsCidadao = iprot.readString();
        struct.setCnsCidadaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.nomeCidadao = iprot.readString();
        struct.setNomeCidadaoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nomeSocialCidadao = iprot.readString();
        struct.setNomeSocialCidadaoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.dataNascimentoCidadao = iprot.readI64();
        struct.setDataNascimentoCidadaoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sexoCidadao = iprot.readI64();
        struct.setSexoCidadaoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.racaCorCidadao = iprot.readI64();
        struct.setRacaCorCidadaoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nomeMaeCidadao = iprot.readString();
        struct.setNomeMaeCidadaoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.desconheceNomeMae = iprot.readBool();
        struct.setDesconheceNomeMaeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.codigoIbgeMunicipioNascimento = iprot.readString();
        struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.nacionalidadeCidadao = iprot.readI64();
        struct.setNacionalidadeCidadaoIsSet(true);
      }
      if (incoming.get(11)) {
        struct.emailCidadao = iprot.readString();
        struct.setEmailCidadaoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.numeroNisPisPasep = iprot.readString();
        struct.setNumeroNisPisPasepIsSet(true);
      }
      if (incoming.get(13)) {
        struct.endereco = new br.gov.saude.esusab.ras.common.EnderecoLocalPermanenciaThrift();
        struct.endereco.read(iprot);
        struct.setEnderecoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.atencaoDomiciliarProcedencia = iprot.readI64();
        struct.setAtencaoDomiciliarProcedenciaIsSet(true);
      }
      if (incoming.get(15)) {
        struct.atencaoDomiciliarModalidade = iprot.readI64();
        struct.setAtencaoDomiciliarModalidadeIsSet(true);
      }
      if (incoming.get(16)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.condicoesAvaliadas = new ArrayList<Long>(_list10.size);
          long _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = iprot.readI64();
            struct.condicoesAvaliadas.add(_elem11);
          }
        }
        struct.setCondicoesAvaliadasIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cid10Principal = iprot.readString();
        struct.setCid10PrincipalIsSet(true);
      }
      if (incoming.get(18)) {
        struct.cid10SecundarioUm = iprot.readString();
        struct.setCid10SecundarioUmIsSet(true);
      }
      if (incoming.get(19)) {
        struct.cid10SecundarioDois = iprot.readString();
        struct.setCid10SecundarioDoisIsSet(true);
      }
      if (incoming.get(20)) {
        struct.conclusaoDestinoElegivel = iprot.readI64();
        struct.setConclusaoDestinoElegivelIsSet(true);
      }
      if (incoming.get(21)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.conclusaoDestinoInelegivel = new ArrayList<Long>(_list13.size);
          long _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = iprot.readI64();
            struct.conclusaoDestinoInelegivel.add(_elem14);
          }
        }
        struct.setConclusaoDestinoInelegivelIsSet(true);
      }
      if (incoming.get(22)) {
        struct.cuidadorCidadao = iprot.readI64();
        struct.setCuidadorCidadaoIsSet(true);
      }
      if (incoming.get(23)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(24)) {
        struct.headerTransport = new br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift();
        struct.headerTransport.read(iprot);
        struct.setHeaderTransportIsSet(true);
      }
      if (incoming.get(25)) {
        struct.nomePaiCidadao = iprot.readString();
        struct.setNomePaiCidadaoIsSet(true);
      }
      if (incoming.get(26)) {
        struct.desconheceNomePai = iprot.readBool();
        struct.setDesconheceNomePaiIsSet(true);
      }
      if (incoming.get(27)) {
        struct.dtNaturalizacao = iprot.readI64();
        struct.setDtNaturalizacaoIsSet(true);
      }
      if (incoming.get(28)) {
        struct.portariaNaturalizacao = iprot.readString();
        struct.setPortariaNaturalizacaoIsSet(true);
      }
      if (incoming.get(29)) {
        struct.dtEntradaBrasil = iprot.readI64();
        struct.setDtEntradaBrasilIsSet(true);
      }
      if (incoming.get(30)) {
        struct.paisNascimento = iprot.readI64();
        struct.setPaisNascimentoIsSet(true);
      }
      if (incoming.get(31)) {
        struct.etnia = iprot.readI64();
        struct.setEtniaIsSet(true);
      }
      if (incoming.get(32)) {
        struct.cnsCuidador = iprot.readString();
        struct.setCnsCuidadorIsSet(true);
      }
      if (incoming.get(33)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
      if (incoming.get(34)) {
        struct.cpfCuidador = iprot.readString();
        struct.setCpfCuidadorIsSet(true);
      }
    }
  }

}

