/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.cadastroindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2024-05-23")
public class SaidaCidadaoCadastroThrift implements org.apache.thrift.TBase<SaidaCidadaoCadastroThrift, SaidaCidadaoCadastroThrift._Fields>, java.io.Serializable, Cloneable, Comparable<SaidaCidadaoCadastroThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SaidaCidadaoCadastroThrift");

  private static final org.apache.thrift.protocol.TField MOTIVO_SAIDA_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("motivoSaidaCidadao", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField DATA_OBITO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataObito", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField NUMERO_DO_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroDO", org.apache.thrift.protocol.TType.STRING, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SaidaCidadaoCadastroThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SaidaCidadaoCadastroThriftTupleSchemeFactory());
  }

  private long motivoSaidaCidadao; // optional
  private long dataObito; // optional
  private String numeroDO; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MOTIVO_SAIDA_CIDADAO((short)1, "motivoSaidaCidadao"),
    DATA_OBITO((short)2, "dataObito"),
    NUMERO_DO((short)3, "numeroDO");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MOTIVO_SAIDA_CIDADAO
          return MOTIVO_SAIDA_CIDADAO;
        case 2: // DATA_OBITO
          return DATA_OBITO;
        case 3: // NUMERO_DO
          return NUMERO_DO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __MOTIVOSAIDACIDADAO_ISSET_ID = 0;
  private static final int __DATAOBITO_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.MOTIVO_SAIDA_CIDADAO,_Fields.DATA_OBITO,_Fields.NUMERO_DO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MOTIVO_SAIDA_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("motivoSaidaCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DATA_OBITO, new org.apache.thrift.meta_data.FieldMetaData("dataObito", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUMERO_DO, new org.apache.thrift.meta_data.FieldMetaData("numeroDO", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SaidaCidadaoCadastroThrift.class, metaDataMap);
  }

  public SaidaCidadaoCadastroThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SaidaCidadaoCadastroThrift(SaidaCidadaoCadastroThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.motivoSaidaCidadao = other.motivoSaidaCidadao;
    this.dataObito = other.dataObito;
    if (other.isSetNumeroDO()) {
      this.numeroDO = other.numeroDO;
    }
  }

  public SaidaCidadaoCadastroThrift deepCopy() {
    return new SaidaCidadaoCadastroThrift(this);
  }

  @Override
  public void clear() {
    setMotivoSaidaCidadaoIsSet(false);
    this.motivoSaidaCidadao = 0;
    setDataObitoIsSet(false);
    this.dataObito = 0;
    this.numeroDO = null;
  }

  public long getMotivoSaidaCidadao() {
    return this.motivoSaidaCidadao;
  }

  public void setMotivoSaidaCidadao(long motivoSaidaCidadao) {
    this.motivoSaidaCidadao = motivoSaidaCidadao;
    setMotivoSaidaCidadaoIsSet(true);
  }

  public void unsetMotivoSaidaCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MOTIVOSAIDACIDADAO_ISSET_ID);
  }

  /** Returns true if field motivoSaidaCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetMotivoSaidaCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __MOTIVOSAIDACIDADAO_ISSET_ID);
  }

  public void setMotivoSaidaCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MOTIVOSAIDACIDADAO_ISSET_ID, value);
  }

  public long getDataObito() {
    return this.dataObito;
  }

  public void setDataObito(long dataObito) {
    this.dataObito = dataObito;
    setDataObitoIsSet(true);
  }

  public void unsetDataObito() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATAOBITO_ISSET_ID);
  }

  /** Returns true if field dataObito is set (has been assigned a value) and false otherwise */
  public boolean isSetDataObito() {
    return EncodingUtils.testBit(__isset_bitfield, __DATAOBITO_ISSET_ID);
  }

  public void setDataObitoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATAOBITO_ISSET_ID, value);
  }

  public String getNumeroDO() {
    return this.numeroDO;
  }

  public void setNumeroDO(String numeroDO) {
    this.numeroDO = numeroDO;
  }

  public void unsetNumeroDO() {
    this.numeroDO = null;
  }

  /** Returns true if field numeroDO is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroDO() {
    return this.numeroDO != null;
  }

  public void setNumeroDOIsSet(boolean value) {
    if (!value) {
      this.numeroDO = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MOTIVO_SAIDA_CIDADAO:
      if (value == null) {
        unsetMotivoSaidaCidadao();
      } else {
        setMotivoSaidaCidadao((Long)value);
      }
      break;

    case DATA_OBITO:
      if (value == null) {
        unsetDataObito();
      } else {
        setDataObito((Long)value);
      }
      break;

    case NUMERO_DO:
      if (value == null) {
        unsetNumeroDO();
      } else {
        setNumeroDO((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MOTIVO_SAIDA_CIDADAO:
      return getMotivoSaidaCidadao();

    case DATA_OBITO:
      return getDataObito();

    case NUMERO_DO:
      return getNumeroDO();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MOTIVO_SAIDA_CIDADAO:
      return isSetMotivoSaidaCidadao();
    case DATA_OBITO:
      return isSetDataObito();
    case NUMERO_DO:
      return isSetNumeroDO();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SaidaCidadaoCadastroThrift)
      return this.equals((SaidaCidadaoCadastroThrift)that);
    return false;
  }

  public boolean equals(SaidaCidadaoCadastroThrift that) {
    if (that == null)
      return false;

    boolean this_present_motivoSaidaCidadao = true && this.isSetMotivoSaidaCidadao();
    boolean that_present_motivoSaidaCidadao = true && that.isSetMotivoSaidaCidadao();
    if (this_present_motivoSaidaCidadao || that_present_motivoSaidaCidadao) {
      if (!(this_present_motivoSaidaCidadao && that_present_motivoSaidaCidadao))
        return false;
      if (this.motivoSaidaCidadao != that.motivoSaidaCidadao)
        return false;
    }

    boolean this_present_dataObito = true && this.isSetDataObito();
    boolean that_present_dataObito = true && that.isSetDataObito();
    if (this_present_dataObito || that_present_dataObito) {
      if (!(this_present_dataObito && that_present_dataObito))
        return false;
      if (this.dataObito != that.dataObito)
        return false;
    }

    boolean this_present_numeroDO = true && this.isSetNumeroDO();
    boolean that_present_numeroDO = true && that.isSetNumeroDO();
    if (this_present_numeroDO || that_present_numeroDO) {
      if (!(this_present_numeroDO && that_present_numeroDO))
        return false;
      if (!this.numeroDO.equals(that.numeroDO))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_motivoSaidaCidadao = true && (isSetMotivoSaidaCidadao());
    list.add(present_motivoSaidaCidadao);
    if (present_motivoSaidaCidadao)
      list.add(motivoSaidaCidadao);

    boolean present_dataObito = true && (isSetDataObito());
    list.add(present_dataObito);
    if (present_dataObito)
      list.add(dataObito);

    boolean present_numeroDO = true && (isSetNumeroDO());
    list.add(present_numeroDO);
    if (present_numeroDO)
      list.add(numeroDO);

    return list.hashCode();
  }

  @Override
  public int compareTo(SaidaCidadaoCadastroThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMotivoSaidaCidadao()).compareTo(other.isSetMotivoSaidaCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMotivoSaidaCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.motivoSaidaCidadao, other.motivoSaidaCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataObito()).compareTo(other.isSetDataObito());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataObito()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataObito, other.dataObito);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroDO()).compareTo(other.isSetNumeroDO());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroDO()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroDO, other.numeroDO);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SaidaCidadaoCadastroThrift(");
    boolean first = true;

    if (isSetMotivoSaidaCidadao()) {
      sb.append("motivoSaidaCidadao:");
      sb.append(this.motivoSaidaCidadao);
      first = false;
    }
    if (isSetDataObito()) {
      if (!first) sb.append(", ");
      sb.append("dataObito:");
      sb.append(this.dataObito);
      first = false;
    }
    if (isSetNumeroDO()) {
      if (!first) sb.append(", ");
      sb.append("numeroDO:");
      if (this.numeroDO == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroDO);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SaidaCidadaoCadastroThriftStandardSchemeFactory implements SchemeFactory {
    public SaidaCidadaoCadastroThriftStandardScheme getScheme() {
      return new SaidaCidadaoCadastroThriftStandardScheme();
    }
  }

  private static class SaidaCidadaoCadastroThriftStandardScheme extends StandardScheme<SaidaCidadaoCadastroThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SaidaCidadaoCadastroThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MOTIVO_SAIDA_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.motivoSaidaCidadao = iprot.readI64();
              struct.setMotivoSaidaCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DATA_OBITO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataObito = iprot.readI64();
              struct.setDataObitoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NUMERO_DO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroDO = iprot.readString();
              struct.setNumeroDOIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SaidaCidadaoCadastroThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetMotivoSaidaCidadao()) {
        oprot.writeFieldBegin(MOTIVO_SAIDA_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.motivoSaidaCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataObito()) {
        oprot.writeFieldBegin(DATA_OBITO_FIELD_DESC);
        oprot.writeI64(struct.dataObito);
        oprot.writeFieldEnd();
      }
      if (struct.numeroDO != null) {
        if (struct.isSetNumeroDO()) {
          oprot.writeFieldBegin(NUMERO_DO_FIELD_DESC);
          oprot.writeString(struct.numeroDO);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SaidaCidadaoCadastroThriftTupleSchemeFactory implements SchemeFactory {
    public SaidaCidadaoCadastroThriftTupleScheme getScheme() {
      return new SaidaCidadaoCadastroThriftTupleScheme();
    }
  }

  private static class SaidaCidadaoCadastroThriftTupleScheme extends TupleScheme<SaidaCidadaoCadastroThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SaidaCidadaoCadastroThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMotivoSaidaCidadao()) {
        optionals.set(0);
      }
      if (struct.isSetDataObito()) {
        optionals.set(1);
      }
      if (struct.isSetNumeroDO()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetMotivoSaidaCidadao()) {
        oprot.writeI64(struct.motivoSaidaCidadao);
      }
      if (struct.isSetDataObito()) {
        oprot.writeI64(struct.dataObito);
      }
      if (struct.isSetNumeroDO()) {
        oprot.writeString(struct.numeroDO);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SaidaCidadaoCadastroThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.motivoSaidaCidadao = iprot.readI64();
        struct.setMotivoSaidaCidadaoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.dataObito = iprot.readI64();
        struct.setDataObitoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.numeroDO = iprot.readString();
        struct.setNumeroDOIsSet(true);
      }
    }
  }

}

