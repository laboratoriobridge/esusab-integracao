/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.cadastroindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-11")
public class InformacoesSocioDemograficasThrift implements org.apache.thrift.TBase<InformacoesSocioDemograficasThrift, InformacoesSocioDemograficasThrift._Fields>, java.io.Serializable, Cloneable, Comparable<InformacoesSocioDemograficasThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("InformacoesSocioDemograficasThrift");

  private static final org.apache.thrift.protocol.TField DEFICIENCIAS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("deficienciasCidadao", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField GRAU_INSTRUCAO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("grauInstrucaoCidadao", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField OCUPACAO_CODIGO_CBO2002_FIELD_DESC = new org.apache.thrift.protocol.TField("ocupacaoCodigoCbo2002", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ORIENTACAO_SEXUAL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("orientacaoSexualCidadao", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField RELACAO_PARENTESCO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("relacaoParentescoCidadao", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField SITUACAO_MERCADO_TRABALHO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("situacaoMercadoTrabalhoCidadao", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL_FIELD_DESC = new org.apache.thrift.protocol.TField("statusDesejaInformarOrientacaoSexual", org.apache.thrift.protocol.TType.BOOL, (short)10);
  private static final org.apache.thrift.protocol.TField STATUS_FREQUENTA_BENZEDEIRA_FIELD_DESC = new org.apache.thrift.protocol.TField("statusFrequentaBenzedeira", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField STATUS_FREQUENTA_ESCOLA_FIELD_DESC = new org.apache.thrift.protocol.TField("statusFrequentaEscola", org.apache.thrift.protocol.TType.BOOL, (short)12);
  private static final org.apache.thrift.protocol.TField STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("statusMembroPovoComunidadeTradicional", org.apache.thrift.protocol.TType.BOOL, (short)13);
  private static final org.apache.thrift.protocol.TField STATUS_PARTICIPA_GRUPO_COMUNITARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("statusParticipaGrupoComunitario", org.apache.thrift.protocol.TType.BOOL, (short)14);
  private static final org.apache.thrift.protocol.TField STATUS_POSSUI_PLANO_SAUDE_PRIVADO_FIELD_DESC = new org.apache.thrift.protocol.TField("statusPossuiPlanoSaudePrivado", org.apache.thrift.protocol.TType.BOOL, (short)15);
  private static final org.apache.thrift.protocol.TField STATUS_TEM_ALGUMA_DEFICIENCIA_FIELD_DESC = new org.apache.thrift.protocol.TField("statusTemAlgumaDeficiencia", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField IDENTIDADE_GENERO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("identidadeGeneroCidadao", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO_FIELD_DESC = new org.apache.thrift.protocol.TField("statusDesejaInformarIdentidadeGenero", org.apache.thrift.protocol.TType.BOOL, (short)18);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_POR_CRIANCA_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelPorCrianca", org.apache.thrift.protocol.TType.LIST, (short)19);
  private static final org.apache.thrift.protocol.TField CO_POVO_COMUNIDADE_TRADICIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("coPovoComunidadeTradicional", org.apache.thrift.protocol.TType.I64, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new InformacoesSocioDemograficasThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new InformacoesSocioDemograficasThriftTupleSchemeFactory());
  }

  private List<Long> deficienciasCidadao; // optional
  private long grauInstrucaoCidadao; // optional
  private String ocupacaoCodigoCbo2002; // optional
  private long orientacaoSexualCidadao; // optional
  private long relacaoParentescoCidadao; // optional
  private long situacaoMercadoTrabalhoCidadao; // optional
  private boolean statusDesejaInformarOrientacaoSexual; // optional
  private boolean statusFrequentaBenzedeira; // optional
  private boolean statusFrequentaEscola; // optional
  private boolean statusMembroPovoComunidadeTradicional; // optional
  private boolean statusParticipaGrupoComunitario; // optional
  private boolean statusPossuiPlanoSaudePrivado; // optional
  private boolean statusTemAlgumaDeficiencia; // optional
  private long identidadeGeneroCidadao; // optional
  private boolean statusDesejaInformarIdentidadeGenero; // optional
  private List<Long> responsavelPorCrianca; // optional
  private long coPovoComunidadeTradicional; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DEFICIENCIAS_CIDADAO((short)1, "deficienciasCidadao"),
    GRAU_INSTRUCAO_CIDADAO((short)2, "grauInstrucaoCidadao"),
    OCUPACAO_CODIGO_CBO2002((short)4, "ocupacaoCodigoCbo2002"),
    ORIENTACAO_SEXUAL_CIDADAO((short)5, "orientacaoSexualCidadao"),
    RELACAO_PARENTESCO_CIDADAO((short)7, "relacaoParentescoCidadao"),
    SITUACAO_MERCADO_TRABALHO_CIDADAO((short)9, "situacaoMercadoTrabalhoCidadao"),
    STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL((short)10, "statusDesejaInformarOrientacaoSexual"),
    STATUS_FREQUENTA_BENZEDEIRA((short)11, "statusFrequentaBenzedeira"),
    STATUS_FREQUENTA_ESCOLA((short)12, "statusFrequentaEscola"),
    STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL((short)13, "statusMembroPovoComunidadeTradicional"),
    STATUS_PARTICIPA_GRUPO_COMUNITARIO((short)14, "statusParticipaGrupoComunitario"),
    STATUS_POSSUI_PLANO_SAUDE_PRIVADO((short)15, "statusPossuiPlanoSaudePrivado"),
    STATUS_TEM_ALGUMA_DEFICIENCIA((short)16, "statusTemAlgumaDeficiencia"),
    IDENTIDADE_GENERO_CIDADAO((short)17, "identidadeGeneroCidadao"),
    STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO((short)18, "statusDesejaInformarIdentidadeGenero"),
    RESPONSAVEL_POR_CRIANCA((short)19, "responsavelPorCrianca"),
    CO_POVO_COMUNIDADE_TRADICIONAL((short)20, "coPovoComunidadeTradicional");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DEFICIENCIAS_CIDADAO
          return DEFICIENCIAS_CIDADAO;
        case 2: // GRAU_INSTRUCAO_CIDADAO
          return GRAU_INSTRUCAO_CIDADAO;
        case 4: // OCUPACAO_CODIGO_CBO2002
          return OCUPACAO_CODIGO_CBO2002;
        case 5: // ORIENTACAO_SEXUAL_CIDADAO
          return ORIENTACAO_SEXUAL_CIDADAO;
        case 7: // RELACAO_PARENTESCO_CIDADAO
          return RELACAO_PARENTESCO_CIDADAO;
        case 9: // SITUACAO_MERCADO_TRABALHO_CIDADAO
          return SITUACAO_MERCADO_TRABALHO_CIDADAO;
        case 10: // STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL
          return STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL;
        case 11: // STATUS_FREQUENTA_BENZEDEIRA
          return STATUS_FREQUENTA_BENZEDEIRA;
        case 12: // STATUS_FREQUENTA_ESCOLA
          return STATUS_FREQUENTA_ESCOLA;
        case 13: // STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL
          return STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL;
        case 14: // STATUS_PARTICIPA_GRUPO_COMUNITARIO
          return STATUS_PARTICIPA_GRUPO_COMUNITARIO;
        case 15: // STATUS_POSSUI_PLANO_SAUDE_PRIVADO
          return STATUS_POSSUI_PLANO_SAUDE_PRIVADO;
        case 16: // STATUS_TEM_ALGUMA_DEFICIENCIA
          return STATUS_TEM_ALGUMA_DEFICIENCIA;
        case 17: // IDENTIDADE_GENERO_CIDADAO
          return IDENTIDADE_GENERO_CIDADAO;
        case 18: // STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO
          return STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO;
        case 19: // RESPONSAVEL_POR_CRIANCA
          return RESPONSAVEL_POR_CRIANCA;
        case 20: // CO_POVO_COMUNIDADE_TRADICIONAL
          return CO_POVO_COMUNIDADE_TRADICIONAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __GRAUINSTRUCAOCIDADAO_ISSET_ID = 0;
  private static final int __ORIENTACAOSEXUALCIDADAO_ISSET_ID = 1;
  private static final int __RELACAOPARENTESCOCIDADAO_ISSET_ID = 2;
  private static final int __SITUACAOMERCADOTRABALHOCIDADAO_ISSET_ID = 3;
  private static final int __STATUSDESEJAINFORMARORIENTACAOSEXUAL_ISSET_ID = 4;
  private static final int __STATUSFREQUENTABENZEDEIRA_ISSET_ID = 5;
  private static final int __STATUSFREQUENTAESCOLA_ISSET_ID = 6;
  private static final int __STATUSMEMBROPOVOCOMUNIDADETRADICIONAL_ISSET_ID = 7;
  private static final int __STATUSPARTICIPAGRUPOCOMUNITARIO_ISSET_ID = 8;
  private static final int __STATUSPOSSUIPLANOSAUDEPRIVADO_ISSET_ID = 9;
  private static final int __STATUSTEMALGUMADEFICIENCIA_ISSET_ID = 10;
  private static final int __IDENTIDADEGENEROCIDADAO_ISSET_ID = 11;
  private static final int __STATUSDESEJAINFORMARIDENTIDADEGENERO_ISSET_ID = 12;
  private static final int __COPOVOCOMUNIDADETRADICIONAL_ISSET_ID = 13;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DEFICIENCIAS_CIDADAO,_Fields.GRAU_INSTRUCAO_CIDADAO,_Fields.OCUPACAO_CODIGO_CBO2002,_Fields.ORIENTACAO_SEXUAL_CIDADAO,_Fields.RELACAO_PARENTESCO_CIDADAO,_Fields.SITUACAO_MERCADO_TRABALHO_CIDADAO,_Fields.STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL,_Fields.STATUS_FREQUENTA_BENZEDEIRA,_Fields.STATUS_FREQUENTA_ESCOLA,_Fields.STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL,_Fields.STATUS_PARTICIPA_GRUPO_COMUNITARIO,_Fields.STATUS_POSSUI_PLANO_SAUDE_PRIVADO,_Fields.STATUS_TEM_ALGUMA_DEFICIENCIA,_Fields.IDENTIDADE_GENERO_CIDADAO,_Fields.STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO,_Fields.RESPONSAVEL_POR_CRIANCA,_Fields.CO_POVO_COMUNIDADE_TRADICIONAL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DEFICIENCIAS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("deficienciasCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.GRAU_INSTRUCAO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("grauInstrucaoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OCUPACAO_CODIGO_CBO2002, new org.apache.thrift.meta_data.FieldMetaData("ocupacaoCodigoCbo2002", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORIENTACAO_SEXUAL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("orientacaoSexualCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RELACAO_PARENTESCO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("relacaoParentescoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SITUACAO_MERCADO_TRABALHO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("situacaoMercadoTrabalhoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL, new org.apache.thrift.meta_data.FieldMetaData("statusDesejaInformarOrientacaoSexual", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_FREQUENTA_BENZEDEIRA, new org.apache.thrift.meta_data.FieldMetaData("statusFrequentaBenzedeira", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_FREQUENTA_ESCOLA, new org.apache.thrift.meta_data.FieldMetaData("statusFrequentaEscola", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL, new org.apache.thrift.meta_data.FieldMetaData("statusMembroPovoComunidadeTradicional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_PARTICIPA_GRUPO_COMUNITARIO, new org.apache.thrift.meta_data.FieldMetaData("statusParticipaGrupoComunitario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_POSSUI_PLANO_SAUDE_PRIVADO, new org.apache.thrift.meta_data.FieldMetaData("statusPossuiPlanoSaudePrivado", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_TEM_ALGUMA_DEFICIENCIA, new org.apache.thrift.meta_data.FieldMetaData("statusTemAlgumaDeficiencia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IDENTIDADE_GENERO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("identidadeGeneroCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO, new org.apache.thrift.meta_data.FieldMetaData("statusDesejaInformarIdentidadeGenero", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.RESPONSAVEL_POR_CRIANCA, new org.apache.thrift.meta_data.FieldMetaData("responsavelPorCrianca", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CO_POVO_COMUNIDADE_TRADICIONAL, new org.apache.thrift.meta_data.FieldMetaData("coPovoComunidadeTradicional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(InformacoesSocioDemograficasThrift.class, metaDataMap);
  }

  public InformacoesSocioDemograficasThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public InformacoesSocioDemograficasThrift(InformacoesSocioDemograficasThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetDeficienciasCidadao()) {
      List<Long> __this__deficienciasCidadao = new ArrayList<Long>(other.deficienciasCidadao);
      this.deficienciasCidadao = __this__deficienciasCidadao;
    }
    this.grauInstrucaoCidadao = other.grauInstrucaoCidadao;
    if (other.isSetOcupacaoCodigoCbo2002()) {
      this.ocupacaoCodigoCbo2002 = other.ocupacaoCodigoCbo2002;
    }
    this.orientacaoSexualCidadao = other.orientacaoSexualCidadao;
    this.relacaoParentescoCidadao = other.relacaoParentescoCidadao;
    this.situacaoMercadoTrabalhoCidadao = other.situacaoMercadoTrabalhoCidadao;
    this.statusDesejaInformarOrientacaoSexual = other.statusDesejaInformarOrientacaoSexual;
    this.statusFrequentaBenzedeira = other.statusFrequentaBenzedeira;
    this.statusFrequentaEscola = other.statusFrequentaEscola;
    this.statusMembroPovoComunidadeTradicional = other.statusMembroPovoComunidadeTradicional;
    this.statusParticipaGrupoComunitario = other.statusParticipaGrupoComunitario;
    this.statusPossuiPlanoSaudePrivado = other.statusPossuiPlanoSaudePrivado;
    this.statusTemAlgumaDeficiencia = other.statusTemAlgumaDeficiencia;
    this.identidadeGeneroCidadao = other.identidadeGeneroCidadao;
    this.statusDesejaInformarIdentidadeGenero = other.statusDesejaInformarIdentidadeGenero;
    if (other.isSetResponsavelPorCrianca()) {
      List<Long> __this__responsavelPorCrianca = new ArrayList<Long>(other.responsavelPorCrianca);
      this.responsavelPorCrianca = __this__responsavelPorCrianca;
    }
    this.coPovoComunidadeTradicional = other.coPovoComunidadeTradicional;
  }

  public InformacoesSocioDemograficasThrift deepCopy() {
    return new InformacoesSocioDemograficasThrift(this);
  }

  @Override
  public void clear() {
    this.deficienciasCidadao = null;
    setGrauInstrucaoCidadaoIsSet(false);
    this.grauInstrucaoCidadao = 0;
    this.ocupacaoCodigoCbo2002 = null;
    setOrientacaoSexualCidadaoIsSet(false);
    this.orientacaoSexualCidadao = 0;
    setRelacaoParentescoCidadaoIsSet(false);
    this.relacaoParentescoCidadao = 0;
    setSituacaoMercadoTrabalhoCidadaoIsSet(false);
    this.situacaoMercadoTrabalhoCidadao = 0;
    setStatusDesejaInformarOrientacaoSexualIsSet(false);
    this.statusDesejaInformarOrientacaoSexual = false;
    setStatusFrequentaBenzedeiraIsSet(false);
    this.statusFrequentaBenzedeira = false;
    setStatusFrequentaEscolaIsSet(false);
    this.statusFrequentaEscola = false;
    setStatusMembroPovoComunidadeTradicionalIsSet(false);
    this.statusMembroPovoComunidadeTradicional = false;
    setStatusParticipaGrupoComunitarioIsSet(false);
    this.statusParticipaGrupoComunitario = false;
    setStatusPossuiPlanoSaudePrivadoIsSet(false);
    this.statusPossuiPlanoSaudePrivado = false;
    setStatusTemAlgumaDeficienciaIsSet(false);
    this.statusTemAlgumaDeficiencia = false;
    setIdentidadeGeneroCidadaoIsSet(false);
    this.identidadeGeneroCidadao = 0;
    setStatusDesejaInformarIdentidadeGeneroIsSet(false);
    this.statusDesejaInformarIdentidadeGenero = false;
    this.responsavelPorCrianca = null;
    setCoPovoComunidadeTradicionalIsSet(false);
    this.coPovoComunidadeTradicional = 0;
  }

  public int getDeficienciasCidadaoSize() {
    return (this.deficienciasCidadao == null) ? 0 : this.deficienciasCidadao.size();
  }

  public java.util.Iterator<Long> getDeficienciasCidadaoIterator() {
    return (this.deficienciasCidadao == null) ? null : this.deficienciasCidadao.iterator();
  }

  public void addToDeficienciasCidadao(long elem) {
    if (this.deficienciasCidadao == null) {
      this.deficienciasCidadao = new ArrayList<Long>();
    }
    this.deficienciasCidadao.add(elem);
  }

  public List<Long> getDeficienciasCidadao() {
    return this.deficienciasCidadao;
  }

  public void setDeficienciasCidadao(List<Long> deficienciasCidadao) {
    this.deficienciasCidadao = deficienciasCidadao;
  }

  public void unsetDeficienciasCidadao() {
    this.deficienciasCidadao = null;
  }

  /** Returns true if field deficienciasCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetDeficienciasCidadao() {
    return this.deficienciasCidadao != null;
  }

  public void setDeficienciasCidadaoIsSet(boolean value) {
    if (!value) {
      this.deficienciasCidadao = null;
    }
  }

  public long getGrauInstrucaoCidadao() {
    return this.grauInstrucaoCidadao;
  }

  public void setGrauInstrucaoCidadao(long grauInstrucaoCidadao) {
    this.grauInstrucaoCidadao = grauInstrucaoCidadao;
    setGrauInstrucaoCidadaoIsSet(true);
  }

  public void unsetGrauInstrucaoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GRAUINSTRUCAOCIDADAO_ISSET_ID);
  }

  /** Returns true if field grauInstrucaoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetGrauInstrucaoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __GRAUINSTRUCAOCIDADAO_ISSET_ID);
  }

  public void setGrauInstrucaoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GRAUINSTRUCAOCIDADAO_ISSET_ID, value);
  }

  public String getOcupacaoCodigoCbo2002() {
    return this.ocupacaoCodigoCbo2002;
  }

  public void setOcupacaoCodigoCbo2002(String ocupacaoCodigoCbo2002) {
    this.ocupacaoCodigoCbo2002 = ocupacaoCodigoCbo2002;
  }

  public void unsetOcupacaoCodigoCbo2002() {
    this.ocupacaoCodigoCbo2002 = null;
  }

  /** Returns true if field ocupacaoCodigoCbo2002 is set (has been assigned a value) and false otherwise */
  public boolean isSetOcupacaoCodigoCbo2002() {
    return this.ocupacaoCodigoCbo2002 != null;
  }

  public void setOcupacaoCodigoCbo2002IsSet(boolean value) {
    if (!value) {
      this.ocupacaoCodigoCbo2002 = null;
    }
  }

  public long getOrientacaoSexualCidadao() {
    return this.orientacaoSexualCidadao;
  }

  public void setOrientacaoSexualCidadao(long orientacaoSexualCidadao) {
    this.orientacaoSexualCidadao = orientacaoSexualCidadao;
    setOrientacaoSexualCidadaoIsSet(true);
  }

  public void unsetOrientacaoSexualCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORIENTACAOSEXUALCIDADAO_ISSET_ID);
  }

  /** Returns true if field orientacaoSexualCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetOrientacaoSexualCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __ORIENTACAOSEXUALCIDADAO_ISSET_ID);
  }

  public void setOrientacaoSexualCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORIENTACAOSEXUALCIDADAO_ISSET_ID, value);
  }

  public long getRelacaoParentescoCidadao() {
    return this.relacaoParentescoCidadao;
  }

  public void setRelacaoParentescoCidadao(long relacaoParentescoCidadao) {
    this.relacaoParentescoCidadao = relacaoParentescoCidadao;
    setRelacaoParentescoCidadaoIsSet(true);
  }

  public void unsetRelacaoParentescoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RELACAOPARENTESCOCIDADAO_ISSET_ID);
  }

  /** Returns true if field relacaoParentescoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetRelacaoParentescoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __RELACAOPARENTESCOCIDADAO_ISSET_ID);
  }

  public void setRelacaoParentescoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RELACAOPARENTESCOCIDADAO_ISSET_ID, value);
  }

  public long getSituacaoMercadoTrabalhoCidadao() {
    return this.situacaoMercadoTrabalhoCidadao;
  }

  public void setSituacaoMercadoTrabalhoCidadao(long situacaoMercadoTrabalhoCidadao) {
    this.situacaoMercadoTrabalhoCidadao = situacaoMercadoTrabalhoCidadao;
    setSituacaoMercadoTrabalhoCidadaoIsSet(true);
  }

  public void unsetSituacaoMercadoTrabalhoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SITUACAOMERCADOTRABALHOCIDADAO_ISSET_ID);
  }

  /** Returns true if field situacaoMercadoTrabalhoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetSituacaoMercadoTrabalhoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __SITUACAOMERCADOTRABALHOCIDADAO_ISSET_ID);
  }

  public void setSituacaoMercadoTrabalhoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SITUACAOMERCADOTRABALHOCIDADAO_ISSET_ID, value);
  }

  public boolean isStatusDesejaInformarOrientacaoSexual() {
    return this.statusDesejaInformarOrientacaoSexual;
  }

  public void setStatusDesejaInformarOrientacaoSexual(boolean statusDesejaInformarOrientacaoSexual) {
    this.statusDesejaInformarOrientacaoSexual = statusDesejaInformarOrientacaoSexual;
    setStatusDesejaInformarOrientacaoSexualIsSet(true);
  }

  public void unsetStatusDesejaInformarOrientacaoSexual() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSDESEJAINFORMARORIENTACAOSEXUAL_ISSET_ID);
  }

  /** Returns true if field statusDesejaInformarOrientacaoSexual is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusDesejaInformarOrientacaoSexual() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSDESEJAINFORMARORIENTACAOSEXUAL_ISSET_ID);
  }

  public void setStatusDesejaInformarOrientacaoSexualIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSDESEJAINFORMARORIENTACAOSEXUAL_ISSET_ID, value);
  }

  public boolean isStatusFrequentaBenzedeira() {
    return this.statusFrequentaBenzedeira;
  }

  public void setStatusFrequentaBenzedeira(boolean statusFrequentaBenzedeira) {
    this.statusFrequentaBenzedeira = statusFrequentaBenzedeira;
    setStatusFrequentaBenzedeiraIsSet(true);
  }

  public void unsetStatusFrequentaBenzedeira() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSFREQUENTABENZEDEIRA_ISSET_ID);
  }

  /** Returns true if field statusFrequentaBenzedeira is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusFrequentaBenzedeira() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSFREQUENTABENZEDEIRA_ISSET_ID);
  }

  public void setStatusFrequentaBenzedeiraIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSFREQUENTABENZEDEIRA_ISSET_ID, value);
  }

  public boolean isStatusFrequentaEscola() {
    return this.statusFrequentaEscola;
  }

  public void setStatusFrequentaEscola(boolean statusFrequentaEscola) {
    this.statusFrequentaEscola = statusFrequentaEscola;
    setStatusFrequentaEscolaIsSet(true);
  }

  public void unsetStatusFrequentaEscola() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSFREQUENTAESCOLA_ISSET_ID);
  }

  /** Returns true if field statusFrequentaEscola is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusFrequentaEscola() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSFREQUENTAESCOLA_ISSET_ID);
  }

  public void setStatusFrequentaEscolaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSFREQUENTAESCOLA_ISSET_ID, value);
  }

  public boolean isStatusMembroPovoComunidadeTradicional() {
    return this.statusMembroPovoComunidadeTradicional;
  }

  public void setStatusMembroPovoComunidadeTradicional(boolean statusMembroPovoComunidadeTradicional) {
    this.statusMembroPovoComunidadeTradicional = statusMembroPovoComunidadeTradicional;
    setStatusMembroPovoComunidadeTradicionalIsSet(true);
  }

  public void unsetStatusMembroPovoComunidadeTradicional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSMEMBROPOVOCOMUNIDADETRADICIONAL_ISSET_ID);
  }

  /** Returns true if field statusMembroPovoComunidadeTradicional is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusMembroPovoComunidadeTradicional() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSMEMBROPOVOCOMUNIDADETRADICIONAL_ISSET_ID);
  }

  public void setStatusMembroPovoComunidadeTradicionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSMEMBROPOVOCOMUNIDADETRADICIONAL_ISSET_ID, value);
  }

  public boolean isStatusParticipaGrupoComunitario() {
    return this.statusParticipaGrupoComunitario;
  }

  public void setStatusParticipaGrupoComunitario(boolean statusParticipaGrupoComunitario) {
    this.statusParticipaGrupoComunitario = statusParticipaGrupoComunitario;
    setStatusParticipaGrupoComunitarioIsSet(true);
  }

  public void unsetStatusParticipaGrupoComunitario() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSPARTICIPAGRUPOCOMUNITARIO_ISSET_ID);
  }

  /** Returns true if field statusParticipaGrupoComunitario is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusParticipaGrupoComunitario() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSPARTICIPAGRUPOCOMUNITARIO_ISSET_ID);
  }

  public void setStatusParticipaGrupoComunitarioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSPARTICIPAGRUPOCOMUNITARIO_ISSET_ID, value);
  }

  public boolean isStatusPossuiPlanoSaudePrivado() {
    return this.statusPossuiPlanoSaudePrivado;
  }

  public void setStatusPossuiPlanoSaudePrivado(boolean statusPossuiPlanoSaudePrivado) {
    this.statusPossuiPlanoSaudePrivado = statusPossuiPlanoSaudePrivado;
    setStatusPossuiPlanoSaudePrivadoIsSet(true);
  }

  public void unsetStatusPossuiPlanoSaudePrivado() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSPOSSUIPLANOSAUDEPRIVADO_ISSET_ID);
  }

  /** Returns true if field statusPossuiPlanoSaudePrivado is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusPossuiPlanoSaudePrivado() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSPOSSUIPLANOSAUDEPRIVADO_ISSET_ID);
  }

  public void setStatusPossuiPlanoSaudePrivadoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSPOSSUIPLANOSAUDEPRIVADO_ISSET_ID, value);
  }

  public boolean isStatusTemAlgumaDeficiencia() {
    return this.statusTemAlgumaDeficiencia;
  }

  public void setStatusTemAlgumaDeficiencia(boolean statusTemAlgumaDeficiencia) {
    this.statusTemAlgumaDeficiencia = statusTemAlgumaDeficiencia;
    setStatusTemAlgumaDeficienciaIsSet(true);
  }

  public void unsetStatusTemAlgumaDeficiencia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSTEMALGUMADEFICIENCIA_ISSET_ID);
  }

  /** Returns true if field statusTemAlgumaDeficiencia is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusTemAlgumaDeficiencia() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSTEMALGUMADEFICIENCIA_ISSET_ID);
  }

  public void setStatusTemAlgumaDeficienciaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSTEMALGUMADEFICIENCIA_ISSET_ID, value);
  }

  public long getIdentidadeGeneroCidadao() {
    return this.identidadeGeneroCidadao;
  }

  public void setIdentidadeGeneroCidadao(long identidadeGeneroCidadao) {
    this.identidadeGeneroCidadao = identidadeGeneroCidadao;
    setIdentidadeGeneroCidadaoIsSet(true);
  }

  public void unsetIdentidadeGeneroCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __IDENTIDADEGENEROCIDADAO_ISSET_ID);
  }

  /** Returns true if field identidadeGeneroCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetIdentidadeGeneroCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __IDENTIDADEGENEROCIDADAO_ISSET_ID);
  }

  public void setIdentidadeGeneroCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __IDENTIDADEGENEROCIDADAO_ISSET_ID, value);
  }

  public boolean isStatusDesejaInformarIdentidadeGenero() {
    return this.statusDesejaInformarIdentidadeGenero;
  }

  public void setStatusDesejaInformarIdentidadeGenero(boolean statusDesejaInformarIdentidadeGenero) {
    this.statusDesejaInformarIdentidadeGenero = statusDesejaInformarIdentidadeGenero;
    setStatusDesejaInformarIdentidadeGeneroIsSet(true);
  }

  public void unsetStatusDesejaInformarIdentidadeGenero() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSDESEJAINFORMARIDENTIDADEGENERO_ISSET_ID);
  }

  /** Returns true if field statusDesejaInformarIdentidadeGenero is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusDesejaInformarIdentidadeGenero() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSDESEJAINFORMARIDENTIDADEGENERO_ISSET_ID);
  }

  public void setStatusDesejaInformarIdentidadeGeneroIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSDESEJAINFORMARIDENTIDADEGENERO_ISSET_ID, value);
  }

  public int getResponsavelPorCriancaSize() {
    return (this.responsavelPorCrianca == null) ? 0 : this.responsavelPorCrianca.size();
  }

  public java.util.Iterator<Long> getResponsavelPorCriancaIterator() {
    return (this.responsavelPorCrianca == null) ? null : this.responsavelPorCrianca.iterator();
  }

  public void addToResponsavelPorCrianca(long elem) {
    if (this.responsavelPorCrianca == null) {
      this.responsavelPorCrianca = new ArrayList<Long>();
    }
    this.responsavelPorCrianca.add(elem);
  }

  public List<Long> getResponsavelPorCrianca() {
    return this.responsavelPorCrianca;
  }

  public void setResponsavelPorCrianca(List<Long> responsavelPorCrianca) {
    this.responsavelPorCrianca = responsavelPorCrianca;
  }

  public void unsetResponsavelPorCrianca() {
    this.responsavelPorCrianca = null;
  }

  /** Returns true if field responsavelPorCrianca is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelPorCrianca() {
    return this.responsavelPorCrianca != null;
  }

  public void setResponsavelPorCriancaIsSet(boolean value) {
    if (!value) {
      this.responsavelPorCrianca = null;
    }
  }

  public long getCoPovoComunidadeTradicional() {
    return this.coPovoComunidadeTradicional;
  }

  public void setCoPovoComunidadeTradicional(long coPovoComunidadeTradicional) {
    this.coPovoComunidadeTradicional = coPovoComunidadeTradicional;
    setCoPovoComunidadeTradicionalIsSet(true);
  }

  public void unsetCoPovoComunidadeTradicional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COPOVOCOMUNIDADETRADICIONAL_ISSET_ID);
  }

  /** Returns true if field coPovoComunidadeTradicional is set (has been assigned a value) and false otherwise */
  public boolean isSetCoPovoComunidadeTradicional() {
    return EncodingUtils.testBit(__isset_bitfield, __COPOVOCOMUNIDADETRADICIONAL_ISSET_ID);
  }

  public void setCoPovoComunidadeTradicionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COPOVOCOMUNIDADETRADICIONAL_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DEFICIENCIAS_CIDADAO:
      if (value == null) {
        unsetDeficienciasCidadao();
      } else {
        setDeficienciasCidadao((List<Long>)value);
      }
      break;

    case GRAU_INSTRUCAO_CIDADAO:
      if (value == null) {
        unsetGrauInstrucaoCidadao();
      } else {
        setGrauInstrucaoCidadao((Long)value);
      }
      break;

    case OCUPACAO_CODIGO_CBO2002:
      if (value == null) {
        unsetOcupacaoCodigoCbo2002();
      } else {
        setOcupacaoCodigoCbo2002((String)value);
      }
      break;

    case ORIENTACAO_SEXUAL_CIDADAO:
      if (value == null) {
        unsetOrientacaoSexualCidadao();
      } else {
        setOrientacaoSexualCidadao((Long)value);
      }
      break;

    case RELACAO_PARENTESCO_CIDADAO:
      if (value == null) {
        unsetRelacaoParentescoCidadao();
      } else {
        setRelacaoParentescoCidadao((Long)value);
      }
      break;

    case SITUACAO_MERCADO_TRABALHO_CIDADAO:
      if (value == null) {
        unsetSituacaoMercadoTrabalhoCidadao();
      } else {
        setSituacaoMercadoTrabalhoCidadao((Long)value);
      }
      break;

    case STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL:
      if (value == null) {
        unsetStatusDesejaInformarOrientacaoSexual();
      } else {
        setStatusDesejaInformarOrientacaoSexual((Boolean)value);
      }
      break;

    case STATUS_FREQUENTA_BENZEDEIRA:
      if (value == null) {
        unsetStatusFrequentaBenzedeira();
      } else {
        setStatusFrequentaBenzedeira((Boolean)value);
      }
      break;

    case STATUS_FREQUENTA_ESCOLA:
      if (value == null) {
        unsetStatusFrequentaEscola();
      } else {
        setStatusFrequentaEscola((Boolean)value);
      }
      break;

    case STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL:
      if (value == null) {
        unsetStatusMembroPovoComunidadeTradicional();
      } else {
        setStatusMembroPovoComunidadeTradicional((Boolean)value);
      }
      break;

    case STATUS_PARTICIPA_GRUPO_COMUNITARIO:
      if (value == null) {
        unsetStatusParticipaGrupoComunitario();
      } else {
        setStatusParticipaGrupoComunitario((Boolean)value);
      }
      break;

    case STATUS_POSSUI_PLANO_SAUDE_PRIVADO:
      if (value == null) {
        unsetStatusPossuiPlanoSaudePrivado();
      } else {
        setStatusPossuiPlanoSaudePrivado((Boolean)value);
      }
      break;

    case STATUS_TEM_ALGUMA_DEFICIENCIA:
      if (value == null) {
        unsetStatusTemAlgumaDeficiencia();
      } else {
        setStatusTemAlgumaDeficiencia((Boolean)value);
      }
      break;

    case IDENTIDADE_GENERO_CIDADAO:
      if (value == null) {
        unsetIdentidadeGeneroCidadao();
      } else {
        setIdentidadeGeneroCidadao((Long)value);
      }
      break;

    case STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO:
      if (value == null) {
        unsetStatusDesejaInformarIdentidadeGenero();
      } else {
        setStatusDesejaInformarIdentidadeGenero((Boolean)value);
      }
      break;

    case RESPONSAVEL_POR_CRIANCA:
      if (value == null) {
        unsetResponsavelPorCrianca();
      } else {
        setResponsavelPorCrianca((List<Long>)value);
      }
      break;

    case CO_POVO_COMUNIDADE_TRADICIONAL:
      if (value == null) {
        unsetCoPovoComunidadeTradicional();
      } else {
        setCoPovoComunidadeTradicional((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DEFICIENCIAS_CIDADAO:
      return getDeficienciasCidadao();

    case GRAU_INSTRUCAO_CIDADAO:
      return getGrauInstrucaoCidadao();

    case OCUPACAO_CODIGO_CBO2002:
      return getOcupacaoCodigoCbo2002();

    case ORIENTACAO_SEXUAL_CIDADAO:
      return getOrientacaoSexualCidadao();

    case RELACAO_PARENTESCO_CIDADAO:
      return getRelacaoParentescoCidadao();

    case SITUACAO_MERCADO_TRABALHO_CIDADAO:
      return getSituacaoMercadoTrabalhoCidadao();

    case STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL:
      return isStatusDesejaInformarOrientacaoSexual();

    case STATUS_FREQUENTA_BENZEDEIRA:
      return isStatusFrequentaBenzedeira();

    case STATUS_FREQUENTA_ESCOLA:
      return isStatusFrequentaEscola();

    case STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL:
      return isStatusMembroPovoComunidadeTradicional();

    case STATUS_PARTICIPA_GRUPO_COMUNITARIO:
      return isStatusParticipaGrupoComunitario();

    case STATUS_POSSUI_PLANO_SAUDE_PRIVADO:
      return isStatusPossuiPlanoSaudePrivado();

    case STATUS_TEM_ALGUMA_DEFICIENCIA:
      return isStatusTemAlgumaDeficiencia();

    case IDENTIDADE_GENERO_CIDADAO:
      return getIdentidadeGeneroCidadao();

    case STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO:
      return isStatusDesejaInformarIdentidadeGenero();

    case RESPONSAVEL_POR_CRIANCA:
      return getResponsavelPorCrianca();

    case CO_POVO_COMUNIDADE_TRADICIONAL:
      return getCoPovoComunidadeTradicional();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DEFICIENCIAS_CIDADAO:
      return isSetDeficienciasCidadao();
    case GRAU_INSTRUCAO_CIDADAO:
      return isSetGrauInstrucaoCidadao();
    case OCUPACAO_CODIGO_CBO2002:
      return isSetOcupacaoCodigoCbo2002();
    case ORIENTACAO_SEXUAL_CIDADAO:
      return isSetOrientacaoSexualCidadao();
    case RELACAO_PARENTESCO_CIDADAO:
      return isSetRelacaoParentescoCidadao();
    case SITUACAO_MERCADO_TRABALHO_CIDADAO:
      return isSetSituacaoMercadoTrabalhoCidadao();
    case STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL:
      return isSetStatusDesejaInformarOrientacaoSexual();
    case STATUS_FREQUENTA_BENZEDEIRA:
      return isSetStatusFrequentaBenzedeira();
    case STATUS_FREQUENTA_ESCOLA:
      return isSetStatusFrequentaEscola();
    case STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL:
      return isSetStatusMembroPovoComunidadeTradicional();
    case STATUS_PARTICIPA_GRUPO_COMUNITARIO:
      return isSetStatusParticipaGrupoComunitario();
    case STATUS_POSSUI_PLANO_SAUDE_PRIVADO:
      return isSetStatusPossuiPlanoSaudePrivado();
    case STATUS_TEM_ALGUMA_DEFICIENCIA:
      return isSetStatusTemAlgumaDeficiencia();
    case IDENTIDADE_GENERO_CIDADAO:
      return isSetIdentidadeGeneroCidadao();
    case STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO:
      return isSetStatusDesejaInformarIdentidadeGenero();
    case RESPONSAVEL_POR_CRIANCA:
      return isSetResponsavelPorCrianca();
    case CO_POVO_COMUNIDADE_TRADICIONAL:
      return isSetCoPovoComunidadeTradicional();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof InformacoesSocioDemograficasThrift)
      return this.equals((InformacoesSocioDemograficasThrift)that);
    return false;
  }

  public boolean equals(InformacoesSocioDemograficasThrift that) {
    if (that == null)
      return false;

    boolean this_present_deficienciasCidadao = true && this.isSetDeficienciasCidadao();
    boolean that_present_deficienciasCidadao = true && that.isSetDeficienciasCidadao();
    if (this_present_deficienciasCidadao || that_present_deficienciasCidadao) {
      if (!(this_present_deficienciasCidadao && that_present_deficienciasCidadao))
        return false;
      if (!this.deficienciasCidadao.equals(that.deficienciasCidadao))
        return false;
    }

    boolean this_present_grauInstrucaoCidadao = true && this.isSetGrauInstrucaoCidadao();
    boolean that_present_grauInstrucaoCidadao = true && that.isSetGrauInstrucaoCidadao();
    if (this_present_grauInstrucaoCidadao || that_present_grauInstrucaoCidadao) {
      if (!(this_present_grauInstrucaoCidadao && that_present_grauInstrucaoCidadao))
        return false;
      if (this.grauInstrucaoCidadao != that.grauInstrucaoCidadao)
        return false;
    }

    boolean this_present_ocupacaoCodigoCbo2002 = true && this.isSetOcupacaoCodigoCbo2002();
    boolean that_present_ocupacaoCodigoCbo2002 = true && that.isSetOcupacaoCodigoCbo2002();
    if (this_present_ocupacaoCodigoCbo2002 || that_present_ocupacaoCodigoCbo2002) {
      if (!(this_present_ocupacaoCodigoCbo2002 && that_present_ocupacaoCodigoCbo2002))
        return false;
      if (!this.ocupacaoCodigoCbo2002.equals(that.ocupacaoCodigoCbo2002))
        return false;
    }

    boolean this_present_orientacaoSexualCidadao = true && this.isSetOrientacaoSexualCidadao();
    boolean that_present_orientacaoSexualCidadao = true && that.isSetOrientacaoSexualCidadao();
    if (this_present_orientacaoSexualCidadao || that_present_orientacaoSexualCidadao) {
      if (!(this_present_orientacaoSexualCidadao && that_present_orientacaoSexualCidadao))
        return false;
      if (this.orientacaoSexualCidadao != that.orientacaoSexualCidadao)
        return false;
    }

    boolean this_present_relacaoParentescoCidadao = true && this.isSetRelacaoParentescoCidadao();
    boolean that_present_relacaoParentescoCidadao = true && that.isSetRelacaoParentescoCidadao();
    if (this_present_relacaoParentescoCidadao || that_present_relacaoParentescoCidadao) {
      if (!(this_present_relacaoParentescoCidadao && that_present_relacaoParentescoCidadao))
        return false;
      if (this.relacaoParentescoCidadao != that.relacaoParentescoCidadao)
        return false;
    }

    boolean this_present_situacaoMercadoTrabalhoCidadao = true && this.isSetSituacaoMercadoTrabalhoCidadao();
    boolean that_present_situacaoMercadoTrabalhoCidadao = true && that.isSetSituacaoMercadoTrabalhoCidadao();
    if (this_present_situacaoMercadoTrabalhoCidadao || that_present_situacaoMercadoTrabalhoCidadao) {
      if (!(this_present_situacaoMercadoTrabalhoCidadao && that_present_situacaoMercadoTrabalhoCidadao))
        return false;
      if (this.situacaoMercadoTrabalhoCidadao != that.situacaoMercadoTrabalhoCidadao)
        return false;
    }

    boolean this_present_statusDesejaInformarOrientacaoSexual = true && this.isSetStatusDesejaInformarOrientacaoSexual();
    boolean that_present_statusDesejaInformarOrientacaoSexual = true && that.isSetStatusDesejaInformarOrientacaoSexual();
    if (this_present_statusDesejaInformarOrientacaoSexual || that_present_statusDesejaInformarOrientacaoSexual) {
      if (!(this_present_statusDesejaInformarOrientacaoSexual && that_present_statusDesejaInformarOrientacaoSexual))
        return false;
      if (this.statusDesejaInformarOrientacaoSexual != that.statusDesejaInformarOrientacaoSexual)
        return false;
    }

    boolean this_present_statusFrequentaBenzedeira = true && this.isSetStatusFrequentaBenzedeira();
    boolean that_present_statusFrequentaBenzedeira = true && that.isSetStatusFrequentaBenzedeira();
    if (this_present_statusFrequentaBenzedeira || that_present_statusFrequentaBenzedeira) {
      if (!(this_present_statusFrequentaBenzedeira && that_present_statusFrequentaBenzedeira))
        return false;
      if (this.statusFrequentaBenzedeira != that.statusFrequentaBenzedeira)
        return false;
    }

    boolean this_present_statusFrequentaEscola = true && this.isSetStatusFrequentaEscola();
    boolean that_present_statusFrequentaEscola = true && that.isSetStatusFrequentaEscola();
    if (this_present_statusFrequentaEscola || that_present_statusFrequentaEscola) {
      if (!(this_present_statusFrequentaEscola && that_present_statusFrequentaEscola))
        return false;
      if (this.statusFrequentaEscola != that.statusFrequentaEscola)
        return false;
    }

    boolean this_present_statusMembroPovoComunidadeTradicional = true && this.isSetStatusMembroPovoComunidadeTradicional();
    boolean that_present_statusMembroPovoComunidadeTradicional = true && that.isSetStatusMembroPovoComunidadeTradicional();
    if (this_present_statusMembroPovoComunidadeTradicional || that_present_statusMembroPovoComunidadeTradicional) {
      if (!(this_present_statusMembroPovoComunidadeTradicional && that_present_statusMembroPovoComunidadeTradicional))
        return false;
      if (this.statusMembroPovoComunidadeTradicional != that.statusMembroPovoComunidadeTradicional)
        return false;
    }

    boolean this_present_statusParticipaGrupoComunitario = true && this.isSetStatusParticipaGrupoComunitario();
    boolean that_present_statusParticipaGrupoComunitario = true && that.isSetStatusParticipaGrupoComunitario();
    if (this_present_statusParticipaGrupoComunitario || that_present_statusParticipaGrupoComunitario) {
      if (!(this_present_statusParticipaGrupoComunitario && that_present_statusParticipaGrupoComunitario))
        return false;
      if (this.statusParticipaGrupoComunitario != that.statusParticipaGrupoComunitario)
        return false;
    }

    boolean this_present_statusPossuiPlanoSaudePrivado = true && this.isSetStatusPossuiPlanoSaudePrivado();
    boolean that_present_statusPossuiPlanoSaudePrivado = true && that.isSetStatusPossuiPlanoSaudePrivado();
    if (this_present_statusPossuiPlanoSaudePrivado || that_present_statusPossuiPlanoSaudePrivado) {
      if (!(this_present_statusPossuiPlanoSaudePrivado && that_present_statusPossuiPlanoSaudePrivado))
        return false;
      if (this.statusPossuiPlanoSaudePrivado != that.statusPossuiPlanoSaudePrivado)
        return false;
    }

    boolean this_present_statusTemAlgumaDeficiencia = true && this.isSetStatusTemAlgumaDeficiencia();
    boolean that_present_statusTemAlgumaDeficiencia = true && that.isSetStatusTemAlgumaDeficiencia();
    if (this_present_statusTemAlgumaDeficiencia || that_present_statusTemAlgumaDeficiencia) {
      if (!(this_present_statusTemAlgumaDeficiencia && that_present_statusTemAlgumaDeficiencia))
        return false;
      if (this.statusTemAlgumaDeficiencia != that.statusTemAlgumaDeficiencia)
        return false;
    }

    boolean this_present_identidadeGeneroCidadao = true && this.isSetIdentidadeGeneroCidadao();
    boolean that_present_identidadeGeneroCidadao = true && that.isSetIdentidadeGeneroCidadao();
    if (this_present_identidadeGeneroCidadao || that_present_identidadeGeneroCidadao) {
      if (!(this_present_identidadeGeneroCidadao && that_present_identidadeGeneroCidadao))
        return false;
      if (this.identidadeGeneroCidadao != that.identidadeGeneroCidadao)
        return false;
    }

    boolean this_present_statusDesejaInformarIdentidadeGenero = true && this.isSetStatusDesejaInformarIdentidadeGenero();
    boolean that_present_statusDesejaInformarIdentidadeGenero = true && that.isSetStatusDesejaInformarIdentidadeGenero();
    if (this_present_statusDesejaInformarIdentidadeGenero || that_present_statusDesejaInformarIdentidadeGenero) {
      if (!(this_present_statusDesejaInformarIdentidadeGenero && that_present_statusDesejaInformarIdentidadeGenero))
        return false;
      if (this.statusDesejaInformarIdentidadeGenero != that.statusDesejaInformarIdentidadeGenero)
        return false;
    }

    boolean this_present_responsavelPorCrianca = true && this.isSetResponsavelPorCrianca();
    boolean that_present_responsavelPorCrianca = true && that.isSetResponsavelPorCrianca();
    if (this_present_responsavelPorCrianca || that_present_responsavelPorCrianca) {
      if (!(this_present_responsavelPorCrianca && that_present_responsavelPorCrianca))
        return false;
      if (!this.responsavelPorCrianca.equals(that.responsavelPorCrianca))
        return false;
    }

    boolean this_present_coPovoComunidadeTradicional = true && this.isSetCoPovoComunidadeTradicional();
    boolean that_present_coPovoComunidadeTradicional = true && that.isSetCoPovoComunidadeTradicional();
    if (this_present_coPovoComunidadeTradicional || that_present_coPovoComunidadeTradicional) {
      if (!(this_present_coPovoComunidadeTradicional && that_present_coPovoComunidadeTradicional))
        return false;
      if (this.coPovoComunidadeTradicional != that.coPovoComunidadeTradicional)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_deficienciasCidadao = true && (isSetDeficienciasCidadao());
    list.add(present_deficienciasCidadao);
    if (present_deficienciasCidadao)
      list.add(deficienciasCidadao);

    boolean present_grauInstrucaoCidadao = true && (isSetGrauInstrucaoCidadao());
    list.add(present_grauInstrucaoCidadao);
    if (present_grauInstrucaoCidadao)
      list.add(grauInstrucaoCidadao);

    boolean present_ocupacaoCodigoCbo2002 = true && (isSetOcupacaoCodigoCbo2002());
    list.add(present_ocupacaoCodigoCbo2002);
    if (present_ocupacaoCodigoCbo2002)
      list.add(ocupacaoCodigoCbo2002);

    boolean present_orientacaoSexualCidadao = true && (isSetOrientacaoSexualCidadao());
    list.add(present_orientacaoSexualCidadao);
    if (present_orientacaoSexualCidadao)
      list.add(orientacaoSexualCidadao);

    boolean present_relacaoParentescoCidadao = true && (isSetRelacaoParentescoCidadao());
    list.add(present_relacaoParentescoCidadao);
    if (present_relacaoParentescoCidadao)
      list.add(relacaoParentescoCidadao);

    boolean present_situacaoMercadoTrabalhoCidadao = true && (isSetSituacaoMercadoTrabalhoCidadao());
    list.add(present_situacaoMercadoTrabalhoCidadao);
    if (present_situacaoMercadoTrabalhoCidadao)
      list.add(situacaoMercadoTrabalhoCidadao);

    boolean present_statusDesejaInformarOrientacaoSexual = true && (isSetStatusDesejaInformarOrientacaoSexual());
    list.add(present_statusDesejaInformarOrientacaoSexual);
    if (present_statusDesejaInformarOrientacaoSexual)
      list.add(statusDesejaInformarOrientacaoSexual);

    boolean present_statusFrequentaBenzedeira = true && (isSetStatusFrequentaBenzedeira());
    list.add(present_statusFrequentaBenzedeira);
    if (present_statusFrequentaBenzedeira)
      list.add(statusFrequentaBenzedeira);

    boolean present_statusFrequentaEscola = true && (isSetStatusFrequentaEscola());
    list.add(present_statusFrequentaEscola);
    if (present_statusFrequentaEscola)
      list.add(statusFrequentaEscola);

    boolean present_statusMembroPovoComunidadeTradicional = true && (isSetStatusMembroPovoComunidadeTradicional());
    list.add(present_statusMembroPovoComunidadeTradicional);
    if (present_statusMembroPovoComunidadeTradicional)
      list.add(statusMembroPovoComunidadeTradicional);

    boolean present_statusParticipaGrupoComunitario = true && (isSetStatusParticipaGrupoComunitario());
    list.add(present_statusParticipaGrupoComunitario);
    if (present_statusParticipaGrupoComunitario)
      list.add(statusParticipaGrupoComunitario);

    boolean present_statusPossuiPlanoSaudePrivado = true && (isSetStatusPossuiPlanoSaudePrivado());
    list.add(present_statusPossuiPlanoSaudePrivado);
    if (present_statusPossuiPlanoSaudePrivado)
      list.add(statusPossuiPlanoSaudePrivado);

    boolean present_statusTemAlgumaDeficiencia = true && (isSetStatusTemAlgumaDeficiencia());
    list.add(present_statusTemAlgumaDeficiencia);
    if (present_statusTemAlgumaDeficiencia)
      list.add(statusTemAlgumaDeficiencia);

    boolean present_identidadeGeneroCidadao = true && (isSetIdentidadeGeneroCidadao());
    list.add(present_identidadeGeneroCidadao);
    if (present_identidadeGeneroCidadao)
      list.add(identidadeGeneroCidadao);

    boolean present_statusDesejaInformarIdentidadeGenero = true && (isSetStatusDesejaInformarIdentidadeGenero());
    list.add(present_statusDesejaInformarIdentidadeGenero);
    if (present_statusDesejaInformarIdentidadeGenero)
      list.add(statusDesejaInformarIdentidadeGenero);

    boolean present_responsavelPorCrianca = true && (isSetResponsavelPorCrianca());
    list.add(present_responsavelPorCrianca);
    if (present_responsavelPorCrianca)
      list.add(responsavelPorCrianca);

    boolean present_coPovoComunidadeTradicional = true && (isSetCoPovoComunidadeTradicional());
    list.add(present_coPovoComunidadeTradicional);
    if (present_coPovoComunidadeTradicional)
      list.add(coPovoComunidadeTradicional);

    return list.hashCode();
  }

  @Override
  public int compareTo(InformacoesSocioDemograficasThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetDeficienciasCidadao()).compareTo(other.isSetDeficienciasCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDeficienciasCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.deficienciasCidadao, other.deficienciasCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGrauInstrucaoCidadao()).compareTo(other.isSetGrauInstrucaoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrauInstrucaoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grauInstrucaoCidadao, other.grauInstrucaoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOcupacaoCodigoCbo2002()).compareTo(other.isSetOcupacaoCodigoCbo2002());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOcupacaoCodigoCbo2002()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ocupacaoCodigoCbo2002, other.ocupacaoCodigoCbo2002);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrientacaoSexualCidadao()).compareTo(other.isSetOrientacaoSexualCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrientacaoSexualCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orientacaoSexualCidadao, other.orientacaoSexualCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRelacaoParentescoCidadao()).compareTo(other.isSetRelacaoParentescoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelacaoParentescoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.relacaoParentescoCidadao, other.relacaoParentescoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSituacaoMercadoTrabalhoCidadao()).compareTo(other.isSetSituacaoMercadoTrabalhoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSituacaoMercadoTrabalhoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.situacaoMercadoTrabalhoCidadao, other.situacaoMercadoTrabalhoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusDesejaInformarOrientacaoSexual()).compareTo(other.isSetStatusDesejaInformarOrientacaoSexual());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusDesejaInformarOrientacaoSexual()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusDesejaInformarOrientacaoSexual, other.statusDesejaInformarOrientacaoSexual);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusFrequentaBenzedeira()).compareTo(other.isSetStatusFrequentaBenzedeira());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusFrequentaBenzedeira()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusFrequentaBenzedeira, other.statusFrequentaBenzedeira);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusFrequentaEscola()).compareTo(other.isSetStatusFrequentaEscola());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusFrequentaEscola()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusFrequentaEscola, other.statusFrequentaEscola);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusMembroPovoComunidadeTradicional()).compareTo(other.isSetStatusMembroPovoComunidadeTradicional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusMembroPovoComunidadeTradicional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusMembroPovoComunidadeTradicional, other.statusMembroPovoComunidadeTradicional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusParticipaGrupoComunitario()).compareTo(other.isSetStatusParticipaGrupoComunitario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusParticipaGrupoComunitario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusParticipaGrupoComunitario, other.statusParticipaGrupoComunitario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusPossuiPlanoSaudePrivado()).compareTo(other.isSetStatusPossuiPlanoSaudePrivado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusPossuiPlanoSaudePrivado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusPossuiPlanoSaudePrivado, other.statusPossuiPlanoSaudePrivado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusTemAlgumaDeficiencia()).compareTo(other.isSetStatusTemAlgumaDeficiencia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusTemAlgumaDeficiencia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusTemAlgumaDeficiencia, other.statusTemAlgumaDeficiencia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdentidadeGeneroCidadao()).compareTo(other.isSetIdentidadeGeneroCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdentidadeGeneroCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.identidadeGeneroCidadao, other.identidadeGeneroCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusDesejaInformarIdentidadeGenero()).compareTo(other.isSetStatusDesejaInformarIdentidadeGenero());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusDesejaInformarIdentidadeGenero()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusDesejaInformarIdentidadeGenero, other.statusDesejaInformarIdentidadeGenero);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelPorCrianca()).compareTo(other.isSetResponsavelPorCrianca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelPorCrianca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelPorCrianca, other.responsavelPorCrianca);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCoPovoComunidadeTradicional()).compareTo(other.isSetCoPovoComunidadeTradicional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoPovoComunidadeTradicional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.coPovoComunidadeTradicional, other.coPovoComunidadeTradicional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("InformacoesSocioDemograficasThrift(");
    boolean first = true;

    if (isSetDeficienciasCidadao()) {
      sb.append("deficienciasCidadao:");
      if (this.deficienciasCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.deficienciasCidadao);
      }
      first = false;
    }
    if (isSetGrauInstrucaoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("grauInstrucaoCidadao:");
      sb.append(this.grauInstrucaoCidadao);
      first = false;
    }
    if (isSetOcupacaoCodigoCbo2002()) {
      if (!first) sb.append(", ");
      sb.append("ocupacaoCodigoCbo2002:");
      if (this.ocupacaoCodigoCbo2002 == null) {
        sb.append("null");
      } else {
        sb.append(this.ocupacaoCodigoCbo2002);
      }
      first = false;
    }
    if (isSetOrientacaoSexualCidadao()) {
      if (!first) sb.append(", ");
      sb.append("orientacaoSexualCidadao:");
      sb.append(this.orientacaoSexualCidadao);
      first = false;
    }
    if (isSetRelacaoParentescoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("relacaoParentescoCidadao:");
      sb.append(this.relacaoParentescoCidadao);
      first = false;
    }
    if (isSetSituacaoMercadoTrabalhoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("situacaoMercadoTrabalhoCidadao:");
      sb.append(this.situacaoMercadoTrabalhoCidadao);
      first = false;
    }
    if (isSetStatusDesejaInformarOrientacaoSexual()) {
      if (!first) sb.append(", ");
      sb.append("statusDesejaInformarOrientacaoSexual:");
      sb.append(this.statusDesejaInformarOrientacaoSexual);
      first = false;
    }
    if (isSetStatusFrequentaBenzedeira()) {
      if (!first) sb.append(", ");
      sb.append("statusFrequentaBenzedeira:");
      sb.append(this.statusFrequentaBenzedeira);
      first = false;
    }
    if (isSetStatusFrequentaEscola()) {
      if (!first) sb.append(", ");
      sb.append("statusFrequentaEscola:");
      sb.append(this.statusFrequentaEscola);
      first = false;
    }
    if (isSetStatusMembroPovoComunidadeTradicional()) {
      if (!first) sb.append(", ");
      sb.append("statusMembroPovoComunidadeTradicional:");
      sb.append(this.statusMembroPovoComunidadeTradicional);
      first = false;
    }
    if (isSetStatusParticipaGrupoComunitario()) {
      if (!first) sb.append(", ");
      sb.append("statusParticipaGrupoComunitario:");
      sb.append(this.statusParticipaGrupoComunitario);
      first = false;
    }
    if (isSetStatusPossuiPlanoSaudePrivado()) {
      if (!first) sb.append(", ");
      sb.append("statusPossuiPlanoSaudePrivado:");
      sb.append(this.statusPossuiPlanoSaudePrivado);
      first = false;
    }
    if (isSetStatusTemAlgumaDeficiencia()) {
      if (!first) sb.append(", ");
      sb.append("statusTemAlgumaDeficiencia:");
      sb.append(this.statusTemAlgumaDeficiencia);
      first = false;
    }
    if (isSetIdentidadeGeneroCidadao()) {
      if (!first) sb.append(", ");
      sb.append("identidadeGeneroCidadao:");
      sb.append(this.identidadeGeneroCidadao);
      first = false;
    }
    if (isSetStatusDesejaInformarIdentidadeGenero()) {
      if (!first) sb.append(", ");
      sb.append("statusDesejaInformarIdentidadeGenero:");
      sb.append(this.statusDesejaInformarIdentidadeGenero);
      first = false;
    }
    if (isSetResponsavelPorCrianca()) {
      if (!first) sb.append(", ");
      sb.append("responsavelPorCrianca:");
      if (this.responsavelPorCrianca == null) {
        sb.append("null");
      } else {
        sb.append(this.responsavelPorCrianca);
      }
      first = false;
    }
    if (isSetCoPovoComunidadeTradicional()) {
      if (!first) sb.append(", ");
      sb.append("coPovoComunidadeTradicional:");
      sb.append(this.coPovoComunidadeTradicional);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class InformacoesSocioDemograficasThriftStandardSchemeFactory implements SchemeFactory {
    public InformacoesSocioDemograficasThriftStandardScheme getScheme() {
      return new InformacoesSocioDemograficasThriftStandardScheme();
    }
  }

  private static class InformacoesSocioDemograficasThriftStandardScheme extends StandardScheme<InformacoesSocioDemograficasThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, InformacoesSocioDemograficasThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DEFICIENCIAS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
                struct.deficienciasCidadao = new ArrayList<Long>(_list40.size);
                long _elem41;
                for (int _i42 = 0; _i42 < _list40.size; ++_i42)
                {
                  _elem41 = iprot.readI64();
                  struct.deficienciasCidadao.add(_elem41);
                }
                iprot.readListEnd();
              }
              struct.setDeficienciasCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // GRAU_INSTRUCAO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.grauInstrucaoCidadao = iprot.readI64();
              struct.setGrauInstrucaoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OCUPACAO_CODIGO_CBO2002
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ocupacaoCodigoCbo2002 = iprot.readString();
              struct.setOcupacaoCodigoCbo2002IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ORIENTACAO_SEXUAL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.orientacaoSexualCidadao = iprot.readI64();
              struct.setOrientacaoSexualCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RELACAO_PARENTESCO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.relacaoParentescoCidadao = iprot.readI64();
              struct.setRelacaoParentescoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SITUACAO_MERCADO_TRABALHO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.situacaoMercadoTrabalhoCidadao = iprot.readI64();
              struct.setSituacaoMercadoTrabalhoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusDesejaInformarOrientacaoSexual = iprot.readBool();
              struct.setStatusDesejaInformarOrientacaoSexualIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STATUS_FREQUENTA_BENZEDEIRA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusFrequentaBenzedeira = iprot.readBool();
              struct.setStatusFrequentaBenzedeiraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // STATUS_FREQUENTA_ESCOLA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusFrequentaEscola = iprot.readBool();
              struct.setStatusFrequentaEscolaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusMembroPovoComunidadeTradicional = iprot.readBool();
              struct.setStatusMembroPovoComunidadeTradicionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STATUS_PARTICIPA_GRUPO_COMUNITARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusParticipaGrupoComunitario = iprot.readBool();
              struct.setStatusParticipaGrupoComunitarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // STATUS_POSSUI_PLANO_SAUDE_PRIVADO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusPossuiPlanoSaudePrivado = iprot.readBool();
              struct.setStatusPossuiPlanoSaudePrivadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // STATUS_TEM_ALGUMA_DEFICIENCIA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusTemAlgumaDeficiencia = iprot.readBool();
              struct.setStatusTemAlgumaDeficienciaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IDENTIDADE_GENERO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.identidadeGeneroCidadao = iprot.readI64();
              struct.setIdentidadeGeneroCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusDesejaInformarIdentidadeGenero = iprot.readBool();
              struct.setStatusDesejaInformarIdentidadeGeneroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // RESPONSAVEL_POR_CRIANCA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list43 = iprot.readListBegin();
                struct.responsavelPorCrianca = new ArrayList<Long>(_list43.size);
                long _elem44;
                for (int _i45 = 0; _i45 < _list43.size; ++_i45)
                {
                  _elem44 = iprot.readI64();
                  struct.responsavelPorCrianca.add(_elem44);
                }
                iprot.readListEnd();
              }
              struct.setResponsavelPorCriancaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CO_POVO_COMUNIDADE_TRADICIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.coPovoComunidadeTradicional = iprot.readI64();
              struct.setCoPovoComunidadeTradicionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, InformacoesSocioDemograficasThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.deficienciasCidadao != null) {
        if (struct.isSetDeficienciasCidadao()) {
          oprot.writeFieldBegin(DEFICIENCIAS_CIDADAO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.deficienciasCidadao.size()));
            for (long _iter46 : struct.deficienciasCidadao)
            {
              oprot.writeI64(_iter46);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetGrauInstrucaoCidadao()) {
        oprot.writeFieldBegin(GRAU_INSTRUCAO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.grauInstrucaoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.ocupacaoCodigoCbo2002 != null) {
        if (struct.isSetOcupacaoCodigoCbo2002()) {
          oprot.writeFieldBegin(OCUPACAO_CODIGO_CBO2002_FIELD_DESC);
          oprot.writeString(struct.ocupacaoCodigoCbo2002);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetOrientacaoSexualCidadao()) {
        oprot.writeFieldBegin(ORIENTACAO_SEXUAL_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.orientacaoSexualCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRelacaoParentescoCidadao()) {
        oprot.writeFieldBegin(RELACAO_PARENTESCO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.relacaoParentescoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSituacaoMercadoTrabalhoCidadao()) {
        oprot.writeFieldBegin(SITUACAO_MERCADO_TRABALHO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.situacaoMercadoTrabalhoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusDesejaInformarOrientacaoSexual()) {
        oprot.writeFieldBegin(STATUS_DESEJA_INFORMAR_ORIENTACAO_SEXUAL_FIELD_DESC);
        oprot.writeBool(struct.statusDesejaInformarOrientacaoSexual);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusFrequentaBenzedeira()) {
        oprot.writeFieldBegin(STATUS_FREQUENTA_BENZEDEIRA_FIELD_DESC);
        oprot.writeBool(struct.statusFrequentaBenzedeira);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusFrequentaEscola()) {
        oprot.writeFieldBegin(STATUS_FREQUENTA_ESCOLA_FIELD_DESC);
        oprot.writeBool(struct.statusFrequentaEscola);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusMembroPovoComunidadeTradicional()) {
        oprot.writeFieldBegin(STATUS_MEMBRO_POVO_COMUNIDADE_TRADICIONAL_FIELD_DESC);
        oprot.writeBool(struct.statusMembroPovoComunidadeTradicional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusParticipaGrupoComunitario()) {
        oprot.writeFieldBegin(STATUS_PARTICIPA_GRUPO_COMUNITARIO_FIELD_DESC);
        oprot.writeBool(struct.statusParticipaGrupoComunitario);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusPossuiPlanoSaudePrivado()) {
        oprot.writeFieldBegin(STATUS_POSSUI_PLANO_SAUDE_PRIVADO_FIELD_DESC);
        oprot.writeBool(struct.statusPossuiPlanoSaudePrivado);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusTemAlgumaDeficiencia()) {
        oprot.writeFieldBegin(STATUS_TEM_ALGUMA_DEFICIENCIA_FIELD_DESC);
        oprot.writeBool(struct.statusTemAlgumaDeficiencia);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIdentidadeGeneroCidadao()) {
        oprot.writeFieldBegin(IDENTIDADE_GENERO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.identidadeGeneroCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusDesejaInformarIdentidadeGenero()) {
        oprot.writeFieldBegin(STATUS_DESEJA_INFORMAR_IDENTIDADE_GENERO_FIELD_DESC);
        oprot.writeBool(struct.statusDesejaInformarIdentidadeGenero);
        oprot.writeFieldEnd();
      }
      if (struct.responsavelPorCrianca != null) {
        if (struct.isSetResponsavelPorCrianca()) {
          oprot.writeFieldBegin(RESPONSAVEL_POR_CRIANCA_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.responsavelPorCrianca.size()));
            for (long _iter47 : struct.responsavelPorCrianca)
            {
              oprot.writeI64(_iter47);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCoPovoComunidadeTradicional()) {
        oprot.writeFieldBegin(CO_POVO_COMUNIDADE_TRADICIONAL_FIELD_DESC);
        oprot.writeI64(struct.coPovoComunidadeTradicional);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class InformacoesSocioDemograficasThriftTupleSchemeFactory implements SchemeFactory {
    public InformacoesSocioDemograficasThriftTupleScheme getScheme() {
      return new InformacoesSocioDemograficasThriftTupleScheme();
    }
  }

  private static class InformacoesSocioDemograficasThriftTupleScheme extends TupleScheme<InformacoesSocioDemograficasThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, InformacoesSocioDemograficasThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetDeficienciasCidadao()) {
        optionals.set(0);
      }
      if (struct.isSetGrauInstrucaoCidadao()) {
        optionals.set(1);
      }
      if (struct.isSetOcupacaoCodigoCbo2002()) {
        optionals.set(2);
      }
      if (struct.isSetOrientacaoSexualCidadao()) {
        optionals.set(3);
      }
      if (struct.isSetRelacaoParentescoCidadao()) {
        optionals.set(4);
      }
      if (struct.isSetSituacaoMercadoTrabalhoCidadao()) {
        optionals.set(5);
      }
      if (struct.isSetStatusDesejaInformarOrientacaoSexual()) {
        optionals.set(6);
      }
      if (struct.isSetStatusFrequentaBenzedeira()) {
        optionals.set(7);
      }
      if (struct.isSetStatusFrequentaEscola()) {
        optionals.set(8);
      }
      if (struct.isSetStatusMembroPovoComunidadeTradicional()) {
        optionals.set(9);
      }
      if (struct.isSetStatusParticipaGrupoComunitario()) {
        optionals.set(10);
      }
      if (struct.isSetStatusPossuiPlanoSaudePrivado()) {
        optionals.set(11);
      }
      if (struct.isSetStatusTemAlgumaDeficiencia()) {
        optionals.set(12);
      }
      if (struct.isSetIdentidadeGeneroCidadao()) {
        optionals.set(13);
      }
      if (struct.isSetStatusDesejaInformarIdentidadeGenero()) {
        optionals.set(14);
      }
      if (struct.isSetResponsavelPorCrianca()) {
        optionals.set(15);
      }
      if (struct.isSetCoPovoComunidadeTradicional()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetDeficienciasCidadao()) {
        {
          oprot.writeI32(struct.deficienciasCidadao.size());
          for (long _iter48 : struct.deficienciasCidadao)
          {
            oprot.writeI64(_iter48);
          }
        }
      }
      if (struct.isSetGrauInstrucaoCidadao()) {
        oprot.writeI64(struct.grauInstrucaoCidadao);
      }
      if (struct.isSetOcupacaoCodigoCbo2002()) {
        oprot.writeString(struct.ocupacaoCodigoCbo2002);
      }
      if (struct.isSetOrientacaoSexualCidadao()) {
        oprot.writeI64(struct.orientacaoSexualCidadao);
      }
      if (struct.isSetRelacaoParentescoCidadao()) {
        oprot.writeI64(struct.relacaoParentescoCidadao);
      }
      if (struct.isSetSituacaoMercadoTrabalhoCidadao()) {
        oprot.writeI64(struct.situacaoMercadoTrabalhoCidadao);
      }
      if (struct.isSetStatusDesejaInformarOrientacaoSexual()) {
        oprot.writeBool(struct.statusDesejaInformarOrientacaoSexual);
      }
      if (struct.isSetStatusFrequentaBenzedeira()) {
        oprot.writeBool(struct.statusFrequentaBenzedeira);
      }
      if (struct.isSetStatusFrequentaEscola()) {
        oprot.writeBool(struct.statusFrequentaEscola);
      }
      if (struct.isSetStatusMembroPovoComunidadeTradicional()) {
        oprot.writeBool(struct.statusMembroPovoComunidadeTradicional);
      }
      if (struct.isSetStatusParticipaGrupoComunitario()) {
        oprot.writeBool(struct.statusParticipaGrupoComunitario);
      }
      if (struct.isSetStatusPossuiPlanoSaudePrivado()) {
        oprot.writeBool(struct.statusPossuiPlanoSaudePrivado);
      }
      if (struct.isSetStatusTemAlgumaDeficiencia()) {
        oprot.writeBool(struct.statusTemAlgumaDeficiencia);
      }
      if (struct.isSetIdentidadeGeneroCidadao()) {
        oprot.writeI64(struct.identidadeGeneroCidadao);
      }
      if (struct.isSetStatusDesejaInformarIdentidadeGenero()) {
        oprot.writeBool(struct.statusDesejaInformarIdentidadeGenero);
      }
      if (struct.isSetResponsavelPorCrianca()) {
        {
          oprot.writeI32(struct.responsavelPorCrianca.size());
          for (long _iter49 : struct.responsavelPorCrianca)
          {
            oprot.writeI64(_iter49);
          }
        }
      }
      if (struct.isSetCoPovoComunidadeTradicional()) {
        oprot.writeI64(struct.coPovoComunidadeTradicional);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, InformacoesSocioDemograficasThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list50 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.deficienciasCidadao = new ArrayList<Long>(_list50.size);
          long _elem51;
          for (int _i52 = 0; _i52 < _list50.size; ++_i52)
          {
            _elem51 = iprot.readI64();
            struct.deficienciasCidadao.add(_elem51);
          }
        }
        struct.setDeficienciasCidadaoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.grauInstrucaoCidadao = iprot.readI64();
        struct.setGrauInstrucaoCidadaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.ocupacaoCodigoCbo2002 = iprot.readString();
        struct.setOcupacaoCodigoCbo2002IsSet(true);
      }
      if (incoming.get(3)) {
        struct.orientacaoSexualCidadao = iprot.readI64();
        struct.setOrientacaoSexualCidadaoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.relacaoParentescoCidadao = iprot.readI64();
        struct.setRelacaoParentescoCidadaoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.situacaoMercadoTrabalhoCidadao = iprot.readI64();
        struct.setSituacaoMercadoTrabalhoCidadaoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.statusDesejaInformarOrientacaoSexual = iprot.readBool();
        struct.setStatusDesejaInformarOrientacaoSexualIsSet(true);
      }
      if (incoming.get(7)) {
        struct.statusFrequentaBenzedeira = iprot.readBool();
        struct.setStatusFrequentaBenzedeiraIsSet(true);
      }
      if (incoming.get(8)) {
        struct.statusFrequentaEscola = iprot.readBool();
        struct.setStatusFrequentaEscolaIsSet(true);
      }
      if (incoming.get(9)) {
        struct.statusMembroPovoComunidadeTradicional = iprot.readBool();
        struct.setStatusMembroPovoComunidadeTradicionalIsSet(true);
      }
      if (incoming.get(10)) {
        struct.statusParticipaGrupoComunitario = iprot.readBool();
        struct.setStatusParticipaGrupoComunitarioIsSet(true);
      }
      if (incoming.get(11)) {
        struct.statusPossuiPlanoSaudePrivado = iprot.readBool();
        struct.setStatusPossuiPlanoSaudePrivadoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.statusTemAlgumaDeficiencia = iprot.readBool();
        struct.setStatusTemAlgumaDeficienciaIsSet(true);
      }
      if (incoming.get(13)) {
        struct.identidadeGeneroCidadao = iprot.readI64();
        struct.setIdentidadeGeneroCidadaoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.statusDesejaInformarIdentidadeGenero = iprot.readBool();
        struct.setStatusDesejaInformarIdentidadeGeneroIsSet(true);
      }
      if (incoming.get(15)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.responsavelPorCrianca = new ArrayList<Long>(_list53.size);
          long _elem54;
          for (int _i55 = 0; _i55 < _list53.size; ++_i55)
          {
            _elem54 = iprot.readI64();
            struct.responsavelPorCrianca.add(_elem54);
          }
        }
        struct.setResponsavelPorCriancaIsSet(true);
      }
      if (incoming.get(16)) {
        struct.coPovoComunidadeTradicional = iprot.readI64();
        struct.setCoPovoComunidadeTradicionalIsSet(true);
      }
    }
  }

}

