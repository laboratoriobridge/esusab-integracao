/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.cadastrodomiciliar;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-06")
public class FamiliaRowThrift implements org.apache.thrift.TBase<FamiliaRowThrift, FamiliaRowThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FamiliaRowThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FamiliaRowThrift");

  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimentoResponsavel", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NUMERO_CNS_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroCnsResponsavel", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField NUMERO_MEMBROS_FAMILIA_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroMembrosFamilia", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField NUMERO_PRONTUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroProntuario", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField RENDA_FAMILIAR_FIELD_DESC = new org.apache.thrift.protocol.TField("rendaFamiliar", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField RESIDE_DESDE_FIELD_DESC = new org.apache.thrift.protocol.TField("resideDesde", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField ST_MUDANCA_FIELD_DESC = new org.apache.thrift.protocol.TField("stMudanca", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField CPF_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfResponsavel", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FamiliaRowThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FamiliaRowThriftTupleSchemeFactory());
  }

  private long dataNascimentoResponsavel; // optional
  private String numeroCnsResponsavel; // optional
  private int numeroMembrosFamilia; // optional
  private String numeroProntuario; // optional
  private long rendaFamiliar; // optional
  private long resideDesde; // optional
  private boolean stMudanca; // optional
  private String cpfResponsavel; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    DATA_NASCIMENTO_RESPONSAVEL((short)1, "dataNascimentoResponsavel"),
    NUMERO_CNS_RESPONSAVEL((short)2, "numeroCnsResponsavel"),
    NUMERO_MEMBROS_FAMILIA((short)3, "numeroMembrosFamilia"),
    NUMERO_PRONTUARIO((short)4, "numeroProntuario"),
    RENDA_FAMILIAR((short)5, "rendaFamiliar"),
    RESIDE_DESDE((short)6, "resideDesde"),
    ST_MUDANCA((short)7, "stMudanca"),
    CPF_RESPONSAVEL((short)8, "cpfResponsavel");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // DATA_NASCIMENTO_RESPONSAVEL
          return DATA_NASCIMENTO_RESPONSAVEL;
        case 2: // NUMERO_CNS_RESPONSAVEL
          return NUMERO_CNS_RESPONSAVEL;
        case 3: // NUMERO_MEMBROS_FAMILIA
          return NUMERO_MEMBROS_FAMILIA;
        case 4: // NUMERO_PRONTUARIO
          return NUMERO_PRONTUARIO;
        case 5: // RENDA_FAMILIAR
          return RENDA_FAMILIAR;
        case 6: // RESIDE_DESDE
          return RESIDE_DESDE;
        case 7: // ST_MUDANCA
          return ST_MUDANCA;
        case 8: // CPF_RESPONSAVEL
          return CPF_RESPONSAVEL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATANASCIMENTORESPONSAVEL_ISSET_ID = 0;
  private static final int __NUMEROMEMBROSFAMILIA_ISSET_ID = 1;
  private static final int __RENDAFAMILIAR_ISSET_ID = 2;
  private static final int __RESIDEDESDE_ISSET_ID = 3;
  private static final int __STMUDANCA_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DATA_NASCIMENTO_RESPONSAVEL,_Fields.NUMERO_CNS_RESPONSAVEL,_Fields.NUMERO_MEMBROS_FAMILIA,_Fields.NUMERO_PRONTUARIO,_Fields.RENDA_FAMILIAR,_Fields.RESIDE_DESDE,_Fields.ST_MUDANCA,_Fields.CPF_RESPONSAVEL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.DATA_NASCIMENTO_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("dataNascimentoResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUMERO_CNS_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("numeroCnsResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_MEMBROS_FAMILIA, new org.apache.thrift.meta_data.FieldMetaData("numeroMembrosFamilia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMERO_PRONTUARIO, new org.apache.thrift.meta_data.FieldMetaData("numeroProntuario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RENDA_FAMILIAR, new org.apache.thrift.meta_data.FieldMetaData("rendaFamiliar", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RESIDE_DESDE, new org.apache.thrift.meta_data.FieldMetaData("resideDesde", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ST_MUDANCA, new org.apache.thrift.meta_data.FieldMetaData("stMudanca", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CPF_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("cpfResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FamiliaRowThrift.class, metaDataMap);
  }

  public FamiliaRowThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FamiliaRowThrift(FamiliaRowThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.dataNascimentoResponsavel = other.dataNascimentoResponsavel;
    if (other.isSetNumeroCnsResponsavel()) {
      this.numeroCnsResponsavel = other.numeroCnsResponsavel;
    }
    this.numeroMembrosFamilia = other.numeroMembrosFamilia;
    if (other.isSetNumeroProntuario()) {
      this.numeroProntuario = other.numeroProntuario;
    }
    this.rendaFamiliar = other.rendaFamiliar;
    this.resideDesde = other.resideDesde;
    this.stMudanca = other.stMudanca;
    if (other.isSetCpfResponsavel()) {
      this.cpfResponsavel = other.cpfResponsavel;
    }
  }

  public FamiliaRowThrift deepCopy() {
    return new FamiliaRowThrift(this);
  }

  @Override
  public void clear() {
    setDataNascimentoResponsavelIsSet(false);
    this.dataNascimentoResponsavel = 0;
    this.numeroCnsResponsavel = null;
    setNumeroMembrosFamiliaIsSet(false);
    this.numeroMembrosFamilia = 0;
    this.numeroProntuario = null;
    setRendaFamiliarIsSet(false);
    this.rendaFamiliar = 0;
    setResideDesdeIsSet(false);
    this.resideDesde = 0;
    setStMudancaIsSet(false);
    this.stMudanca = false;
    this.cpfResponsavel = null;
  }

  public long getDataNascimentoResponsavel() {
    return this.dataNascimentoResponsavel;
  }

  public void setDataNascimentoResponsavel(long dataNascimentoResponsavel) {
    this.dataNascimentoResponsavel = dataNascimentoResponsavel;
    setDataNascimentoResponsavelIsSet(true);
  }

  public void unsetDataNascimentoResponsavel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTORESPONSAVEL_ISSET_ID);
  }

  /** Returns true if field dataNascimentoResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimentoResponsavel() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTORESPONSAVEL_ISSET_ID);
  }

  public void setDataNascimentoResponsavelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTORESPONSAVEL_ISSET_ID, value);
  }

  public String getNumeroCnsResponsavel() {
    return this.numeroCnsResponsavel;
  }

  public void setNumeroCnsResponsavel(String numeroCnsResponsavel) {
    this.numeroCnsResponsavel = numeroCnsResponsavel;
  }

  public void unsetNumeroCnsResponsavel() {
    this.numeroCnsResponsavel = null;
  }

  /** Returns true if field numeroCnsResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroCnsResponsavel() {
    return this.numeroCnsResponsavel != null;
  }

  public void setNumeroCnsResponsavelIsSet(boolean value) {
    if (!value) {
      this.numeroCnsResponsavel = null;
    }
  }

  public int getNumeroMembrosFamilia() {
    return this.numeroMembrosFamilia;
  }

  public void setNumeroMembrosFamilia(int numeroMembrosFamilia) {
    this.numeroMembrosFamilia = numeroMembrosFamilia;
    setNumeroMembrosFamiliaIsSet(true);
  }

  public void unsetNumeroMembrosFamilia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMEROMEMBROSFAMILIA_ISSET_ID);
  }

  /** Returns true if field numeroMembrosFamilia is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroMembrosFamilia() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMEROMEMBROSFAMILIA_ISSET_ID);
  }

  public void setNumeroMembrosFamiliaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMEROMEMBROSFAMILIA_ISSET_ID, value);
  }

  public String getNumeroProntuario() {
    return this.numeroProntuario;
  }

  public void setNumeroProntuario(String numeroProntuario) {
    this.numeroProntuario = numeroProntuario;
  }

  public void unsetNumeroProntuario() {
    this.numeroProntuario = null;
  }

  /** Returns true if field numeroProntuario is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroProntuario() {
    return this.numeroProntuario != null;
  }

  public void setNumeroProntuarioIsSet(boolean value) {
    if (!value) {
      this.numeroProntuario = null;
    }
  }

  public long getRendaFamiliar() {
    return this.rendaFamiliar;
  }

  public void setRendaFamiliar(long rendaFamiliar) {
    this.rendaFamiliar = rendaFamiliar;
    setRendaFamiliarIsSet(true);
  }

  public void unsetRendaFamiliar() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RENDAFAMILIAR_ISSET_ID);
  }

  /** Returns true if field rendaFamiliar is set (has been assigned a value) and false otherwise */
  public boolean isSetRendaFamiliar() {
    return EncodingUtils.testBit(__isset_bitfield, __RENDAFAMILIAR_ISSET_ID);
  }

  public void setRendaFamiliarIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RENDAFAMILIAR_ISSET_ID, value);
  }

  public long getResideDesde() {
    return this.resideDesde;
  }

  public void setResideDesde(long resideDesde) {
    this.resideDesde = resideDesde;
    setResideDesdeIsSet(true);
  }

  public void unsetResideDesde() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RESIDEDESDE_ISSET_ID);
  }

  /** Returns true if field resideDesde is set (has been assigned a value) and false otherwise */
  public boolean isSetResideDesde() {
    return EncodingUtils.testBit(__isset_bitfield, __RESIDEDESDE_ISSET_ID);
  }

  public void setResideDesdeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RESIDEDESDE_ISSET_ID, value);
  }

  public boolean isStMudanca() {
    return this.stMudanca;
  }

  public void setStMudanca(boolean stMudanca) {
    this.stMudanca = stMudanca;
    setStMudancaIsSet(true);
  }

  public void unsetStMudanca() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STMUDANCA_ISSET_ID);
  }

  /** Returns true if field stMudanca is set (has been assigned a value) and false otherwise */
  public boolean isSetStMudanca() {
    return EncodingUtils.testBit(__isset_bitfield, __STMUDANCA_ISSET_ID);
  }

  public void setStMudancaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STMUDANCA_ISSET_ID, value);
  }

  public String getCpfResponsavel() {
    return this.cpfResponsavel;
  }

  public void setCpfResponsavel(String cpfResponsavel) {
    this.cpfResponsavel = cpfResponsavel;
  }

  public void unsetCpfResponsavel() {
    this.cpfResponsavel = null;
  }

  /** Returns true if field cpfResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfResponsavel() {
    return this.cpfResponsavel != null;
  }

  public void setCpfResponsavelIsSet(boolean value) {
    if (!value) {
      this.cpfResponsavel = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case DATA_NASCIMENTO_RESPONSAVEL:
      if (value == null) {
        unsetDataNascimentoResponsavel();
      } else {
        setDataNascimentoResponsavel((Long)value);
      }
      break;

    case NUMERO_CNS_RESPONSAVEL:
      if (value == null) {
        unsetNumeroCnsResponsavel();
      } else {
        setNumeroCnsResponsavel((String)value);
      }
      break;

    case NUMERO_MEMBROS_FAMILIA:
      if (value == null) {
        unsetNumeroMembrosFamilia();
      } else {
        setNumeroMembrosFamilia((Integer)value);
      }
      break;

    case NUMERO_PRONTUARIO:
      if (value == null) {
        unsetNumeroProntuario();
      } else {
        setNumeroProntuario((String)value);
      }
      break;

    case RENDA_FAMILIAR:
      if (value == null) {
        unsetRendaFamiliar();
      } else {
        setRendaFamiliar((Long)value);
      }
      break;

    case RESIDE_DESDE:
      if (value == null) {
        unsetResideDesde();
      } else {
        setResideDesde((Long)value);
      }
      break;

    case ST_MUDANCA:
      if (value == null) {
        unsetStMudanca();
      } else {
        setStMudanca((Boolean)value);
      }
      break;

    case CPF_RESPONSAVEL:
      if (value == null) {
        unsetCpfResponsavel();
      } else {
        setCpfResponsavel((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case DATA_NASCIMENTO_RESPONSAVEL:
      return getDataNascimentoResponsavel();

    case NUMERO_CNS_RESPONSAVEL:
      return getNumeroCnsResponsavel();

    case NUMERO_MEMBROS_FAMILIA:
      return getNumeroMembrosFamilia();

    case NUMERO_PRONTUARIO:
      return getNumeroProntuario();

    case RENDA_FAMILIAR:
      return getRendaFamiliar();

    case RESIDE_DESDE:
      return getResideDesde();

    case ST_MUDANCA:
      return isStMudanca();

    case CPF_RESPONSAVEL:
      return getCpfResponsavel();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case DATA_NASCIMENTO_RESPONSAVEL:
      return isSetDataNascimentoResponsavel();
    case NUMERO_CNS_RESPONSAVEL:
      return isSetNumeroCnsResponsavel();
    case NUMERO_MEMBROS_FAMILIA:
      return isSetNumeroMembrosFamilia();
    case NUMERO_PRONTUARIO:
      return isSetNumeroProntuario();
    case RENDA_FAMILIAR:
      return isSetRendaFamiliar();
    case RESIDE_DESDE:
      return isSetResideDesde();
    case ST_MUDANCA:
      return isSetStMudanca();
    case CPF_RESPONSAVEL:
      return isSetCpfResponsavel();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FamiliaRowThrift)
      return this.equals((FamiliaRowThrift)that);
    return false;
  }

  public boolean equals(FamiliaRowThrift that) {
    if (that == null)
      return false;

    boolean this_present_dataNascimentoResponsavel = true && this.isSetDataNascimentoResponsavel();
    boolean that_present_dataNascimentoResponsavel = true && that.isSetDataNascimentoResponsavel();
    if (this_present_dataNascimentoResponsavel || that_present_dataNascimentoResponsavel) {
      if (!(this_present_dataNascimentoResponsavel && that_present_dataNascimentoResponsavel))
        return false;
      if (this.dataNascimentoResponsavel != that.dataNascimentoResponsavel)
        return false;
    }

    boolean this_present_numeroCnsResponsavel = true && this.isSetNumeroCnsResponsavel();
    boolean that_present_numeroCnsResponsavel = true && that.isSetNumeroCnsResponsavel();
    if (this_present_numeroCnsResponsavel || that_present_numeroCnsResponsavel) {
      if (!(this_present_numeroCnsResponsavel && that_present_numeroCnsResponsavel))
        return false;
      if (!this.numeroCnsResponsavel.equals(that.numeroCnsResponsavel))
        return false;
    }

    boolean this_present_numeroMembrosFamilia = true && this.isSetNumeroMembrosFamilia();
    boolean that_present_numeroMembrosFamilia = true && that.isSetNumeroMembrosFamilia();
    if (this_present_numeroMembrosFamilia || that_present_numeroMembrosFamilia) {
      if (!(this_present_numeroMembrosFamilia && that_present_numeroMembrosFamilia))
        return false;
      if (this.numeroMembrosFamilia != that.numeroMembrosFamilia)
        return false;
    }

    boolean this_present_numeroProntuario = true && this.isSetNumeroProntuario();
    boolean that_present_numeroProntuario = true && that.isSetNumeroProntuario();
    if (this_present_numeroProntuario || that_present_numeroProntuario) {
      if (!(this_present_numeroProntuario && that_present_numeroProntuario))
        return false;
      if (!this.numeroProntuario.equals(that.numeroProntuario))
        return false;
    }

    boolean this_present_rendaFamiliar = true && this.isSetRendaFamiliar();
    boolean that_present_rendaFamiliar = true && that.isSetRendaFamiliar();
    if (this_present_rendaFamiliar || that_present_rendaFamiliar) {
      if (!(this_present_rendaFamiliar && that_present_rendaFamiliar))
        return false;
      if (this.rendaFamiliar != that.rendaFamiliar)
        return false;
    }

    boolean this_present_resideDesde = true && this.isSetResideDesde();
    boolean that_present_resideDesde = true && that.isSetResideDesde();
    if (this_present_resideDesde || that_present_resideDesde) {
      if (!(this_present_resideDesde && that_present_resideDesde))
        return false;
      if (this.resideDesde != that.resideDesde)
        return false;
    }

    boolean this_present_stMudanca = true && this.isSetStMudanca();
    boolean that_present_stMudanca = true && that.isSetStMudanca();
    if (this_present_stMudanca || that_present_stMudanca) {
      if (!(this_present_stMudanca && that_present_stMudanca))
        return false;
      if (this.stMudanca != that.stMudanca)
        return false;
    }

    boolean this_present_cpfResponsavel = true && this.isSetCpfResponsavel();
    boolean that_present_cpfResponsavel = true && that.isSetCpfResponsavel();
    if (this_present_cpfResponsavel || that_present_cpfResponsavel) {
      if (!(this_present_cpfResponsavel && that_present_cpfResponsavel))
        return false;
      if (!this.cpfResponsavel.equals(that.cpfResponsavel))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_dataNascimentoResponsavel = true && (isSetDataNascimentoResponsavel());
    list.add(present_dataNascimentoResponsavel);
    if (present_dataNascimentoResponsavel)
      list.add(dataNascimentoResponsavel);

    boolean present_numeroCnsResponsavel = true && (isSetNumeroCnsResponsavel());
    list.add(present_numeroCnsResponsavel);
    if (present_numeroCnsResponsavel)
      list.add(numeroCnsResponsavel);

    boolean present_numeroMembrosFamilia = true && (isSetNumeroMembrosFamilia());
    list.add(present_numeroMembrosFamilia);
    if (present_numeroMembrosFamilia)
      list.add(numeroMembrosFamilia);

    boolean present_numeroProntuario = true && (isSetNumeroProntuario());
    list.add(present_numeroProntuario);
    if (present_numeroProntuario)
      list.add(numeroProntuario);

    boolean present_rendaFamiliar = true && (isSetRendaFamiliar());
    list.add(present_rendaFamiliar);
    if (present_rendaFamiliar)
      list.add(rendaFamiliar);

    boolean present_resideDesde = true && (isSetResideDesde());
    list.add(present_resideDesde);
    if (present_resideDesde)
      list.add(resideDesde);

    boolean present_stMudanca = true && (isSetStMudanca());
    list.add(present_stMudanca);
    if (present_stMudanca)
      list.add(stMudanca);

    boolean present_cpfResponsavel = true && (isSetCpfResponsavel());
    list.add(present_cpfResponsavel);
    if (present_cpfResponsavel)
      list.add(cpfResponsavel);

    return list.hashCode();
  }

  @Override
  public int compareTo(FamiliaRowThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetDataNascimentoResponsavel()).compareTo(other.isSetDataNascimentoResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimentoResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimentoResponsavel, other.dataNascimentoResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroCnsResponsavel()).compareTo(other.isSetNumeroCnsResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroCnsResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroCnsResponsavel, other.numeroCnsResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroMembrosFamilia()).compareTo(other.isSetNumeroMembrosFamilia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroMembrosFamilia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroMembrosFamilia, other.numeroMembrosFamilia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroProntuario()).compareTo(other.isSetNumeroProntuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroProntuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroProntuario, other.numeroProntuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRendaFamiliar()).compareTo(other.isSetRendaFamiliar());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRendaFamiliar()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rendaFamiliar, other.rendaFamiliar);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResideDesde()).compareTo(other.isSetResideDesde());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResideDesde()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.resideDesde, other.resideDesde);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStMudanca()).compareTo(other.isSetStMudanca());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStMudanca()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stMudanca, other.stMudanca);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfResponsavel()).compareTo(other.isSetCpfResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfResponsavel, other.cpfResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FamiliaRowThrift(");
    boolean first = true;

    if (isSetDataNascimentoResponsavel()) {
      sb.append("dataNascimentoResponsavel:");
      sb.append(this.dataNascimentoResponsavel);
      first = false;
    }
    if (isSetNumeroCnsResponsavel()) {
      if (!first) sb.append(", ");
      sb.append("numeroCnsResponsavel:");
      if (this.numeroCnsResponsavel == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroCnsResponsavel);
      }
      first = false;
    }
    if (isSetNumeroMembrosFamilia()) {
      if (!first) sb.append(", ");
      sb.append("numeroMembrosFamilia:");
      sb.append(this.numeroMembrosFamilia);
      first = false;
    }
    if (isSetNumeroProntuario()) {
      if (!first) sb.append(", ");
      sb.append("numeroProntuario:");
      if (this.numeroProntuario == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroProntuario);
      }
      first = false;
    }
    if (isSetRendaFamiliar()) {
      if (!first) sb.append(", ");
      sb.append("rendaFamiliar:");
      sb.append(this.rendaFamiliar);
      first = false;
    }
    if (isSetResideDesde()) {
      if (!first) sb.append(", ");
      sb.append("resideDesde:");
      sb.append(this.resideDesde);
      first = false;
    }
    if (isSetStMudanca()) {
      if (!first) sb.append(", ");
      sb.append("stMudanca:");
      sb.append(this.stMudanca);
      first = false;
    }
    if (isSetCpfResponsavel()) {
      if (!first) sb.append(", ");
      sb.append("cpfResponsavel:");
      if (this.cpfResponsavel == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfResponsavel);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FamiliaRowThriftStandardSchemeFactory implements SchemeFactory {
    public FamiliaRowThriftStandardScheme getScheme() {
      return new FamiliaRowThriftStandardScheme();
    }
  }

  private static class FamiliaRowThriftStandardScheme extends StandardScheme<FamiliaRowThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FamiliaRowThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // DATA_NASCIMENTO_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimentoResponsavel = iprot.readI64();
              struct.setDataNascimentoResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NUMERO_CNS_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroCnsResponsavel = iprot.readString();
              struct.setNumeroCnsResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NUMERO_MEMBROS_FAMILIA
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numeroMembrosFamilia = iprot.readI32();
              struct.setNumeroMembrosFamiliaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NUMERO_PRONTUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroProntuario = iprot.readString();
              struct.setNumeroProntuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RENDA_FAMILIAR
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.rendaFamiliar = iprot.readI64();
              struct.setRendaFamiliarIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RESIDE_DESDE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.resideDesde = iprot.readI64();
              struct.setResideDesdeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ST_MUDANCA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stMudanca = iprot.readBool();
              struct.setStMudancaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CPF_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfResponsavel = iprot.readString();
              struct.setCpfResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FamiliaRowThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetDataNascimentoResponsavel()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_RESPONSAVEL_FIELD_DESC);
        oprot.writeI64(struct.dataNascimentoResponsavel);
        oprot.writeFieldEnd();
      }
      if (struct.numeroCnsResponsavel != null) {
        if (struct.isSetNumeroCnsResponsavel()) {
          oprot.writeFieldBegin(NUMERO_CNS_RESPONSAVEL_FIELD_DESC);
          oprot.writeString(struct.numeroCnsResponsavel);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNumeroMembrosFamilia()) {
        oprot.writeFieldBegin(NUMERO_MEMBROS_FAMILIA_FIELD_DESC);
        oprot.writeI32(struct.numeroMembrosFamilia);
        oprot.writeFieldEnd();
      }
      if (struct.numeroProntuario != null) {
        if (struct.isSetNumeroProntuario()) {
          oprot.writeFieldBegin(NUMERO_PRONTUARIO_FIELD_DESC);
          oprot.writeString(struct.numeroProntuario);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRendaFamiliar()) {
        oprot.writeFieldBegin(RENDA_FAMILIAR_FIELD_DESC);
        oprot.writeI64(struct.rendaFamiliar);
        oprot.writeFieldEnd();
      }
      if (struct.isSetResideDesde()) {
        oprot.writeFieldBegin(RESIDE_DESDE_FIELD_DESC);
        oprot.writeI64(struct.resideDesde);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStMudanca()) {
        oprot.writeFieldBegin(ST_MUDANCA_FIELD_DESC);
        oprot.writeBool(struct.stMudanca);
        oprot.writeFieldEnd();
      }
      if (struct.cpfResponsavel != null) {
        if (struct.isSetCpfResponsavel()) {
          oprot.writeFieldBegin(CPF_RESPONSAVEL_FIELD_DESC);
          oprot.writeString(struct.cpfResponsavel);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FamiliaRowThriftTupleSchemeFactory implements SchemeFactory {
    public FamiliaRowThriftTupleScheme getScheme() {
      return new FamiliaRowThriftTupleScheme();
    }
  }

  private static class FamiliaRowThriftTupleScheme extends TupleScheme<FamiliaRowThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FamiliaRowThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetDataNascimentoResponsavel()) {
        optionals.set(0);
      }
      if (struct.isSetNumeroCnsResponsavel()) {
        optionals.set(1);
      }
      if (struct.isSetNumeroMembrosFamilia()) {
        optionals.set(2);
      }
      if (struct.isSetNumeroProntuario()) {
        optionals.set(3);
      }
      if (struct.isSetRendaFamiliar()) {
        optionals.set(4);
      }
      if (struct.isSetResideDesde()) {
        optionals.set(5);
      }
      if (struct.isSetStMudanca()) {
        optionals.set(6);
      }
      if (struct.isSetCpfResponsavel()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetDataNascimentoResponsavel()) {
        oprot.writeI64(struct.dataNascimentoResponsavel);
      }
      if (struct.isSetNumeroCnsResponsavel()) {
        oprot.writeString(struct.numeroCnsResponsavel);
      }
      if (struct.isSetNumeroMembrosFamilia()) {
        oprot.writeI32(struct.numeroMembrosFamilia);
      }
      if (struct.isSetNumeroProntuario()) {
        oprot.writeString(struct.numeroProntuario);
      }
      if (struct.isSetRendaFamiliar()) {
        oprot.writeI64(struct.rendaFamiliar);
      }
      if (struct.isSetResideDesde()) {
        oprot.writeI64(struct.resideDesde);
      }
      if (struct.isSetStMudanca()) {
        oprot.writeBool(struct.stMudanca);
      }
      if (struct.isSetCpfResponsavel()) {
        oprot.writeString(struct.cpfResponsavel);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FamiliaRowThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.dataNascimentoResponsavel = iprot.readI64();
        struct.setDataNascimentoResponsavelIsSet(true);
      }
      if (incoming.get(1)) {
        struct.numeroCnsResponsavel = iprot.readString();
        struct.setNumeroCnsResponsavelIsSet(true);
      }
      if (incoming.get(2)) {
        struct.numeroMembrosFamilia = iprot.readI32();
        struct.setNumeroMembrosFamiliaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.numeroProntuario = iprot.readString();
        struct.setNumeroProntuarioIsSet(true);
      }
      if (incoming.get(4)) {
        struct.rendaFamiliar = iprot.readI64();
        struct.setRendaFamiliarIsSet(true);
      }
      if (incoming.get(5)) {
        struct.resideDesde = iprot.readI64();
        struct.setResideDesdeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.stMudanca = iprot.readBool();
        struct.setStMudancaIsSet(true);
      }
      if (incoming.get(7)) {
        struct.cpfResponsavel = iprot.readString();
        struct.setCpfResponsavelIsSet(true);
      }
    }
  }

}

