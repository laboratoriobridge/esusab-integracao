/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esusab.ras.consumoalimentar;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2025-08-07")
public class FichaConsumoAlimentarThrift implements org.apache.thrift.TBase<FichaConsumoAlimentarThrift, FichaConsumoAlimentarThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaConsumoAlimentarThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaConsumoAlimentarThrift");

  private static final org.apache.thrift.protocol.TField HEADER_TRANSPORT_FIELD_DESC = new org.apache.thrift.protocol.TField("headerTransport", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField CNS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCidadao", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimento", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField LOCAL_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("localAtendimento", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES_FIELD_DESC = new org.apache.thrift.protocol.TField("perguntasQuestionarioCriancasMenoresSeisMeses", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES_FIELD_DESC = new org.apache.thrift.protocol.TField("perguntasQuestionarioCriancasDeSeisVinteTresMeses", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS_FIELD_DESC = new org.apache.thrift.protocol.TField("perguntasQuestionarioCriancasComMaisDoisAnos", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField UUID_FICHA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFicha", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField TP_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tpCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaConsumoAlimentarThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaConsumoAlimentarThriftTupleSchemeFactory());
  }

  private br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift headerTransport; // optional
  private String cnsCidadao; // optional
  private long dataNascimento; // optional
  private long sexo; // optional
  private long localAtendimento; // optional
  private List<PerguntaQuestionarioCriancasMenoresSeisMesesThrift> perguntasQuestionarioCriancasMenoresSeisMeses; // optional
  private List<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> perguntasQuestionarioCriancasDeSeisVinteTresMeses; // optional
  private List<PerguntaQuestionarioCriancasComMaisDoisAnosThrift> perguntasQuestionarioCriancasComMaisDoisAnos; // optional
  private String uuidFicha; // required
  private int tpCdsOrigem; // optional
  private String cpfCidadao; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    HEADER_TRANSPORT((short)1, "headerTransport"),
    CNS_CIDADAO((short)2, "cnsCidadao"),
    DATA_NASCIMENTO((short)4, "dataNascimento"),
    SEXO((short)5, "sexo"),
    LOCAL_ATENDIMENTO((short)6, "localAtendimento"),
    PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES((short)7, "perguntasQuestionarioCriancasMenoresSeisMeses"),
    PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES((short)8, "perguntasQuestionarioCriancasDeSeisVinteTresMeses"),
    PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS((short)9, "perguntasQuestionarioCriancasComMaisDoisAnos"),
    UUID_FICHA((short)10, "uuidFicha"),
    TP_CDS_ORIGEM((short)11, "tpCdsOrigem"),
    CPF_CIDADAO((short)12, "cpfCidadao");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // HEADER_TRANSPORT
          return HEADER_TRANSPORT;
        case 2: // CNS_CIDADAO
          return CNS_CIDADAO;
        case 4: // DATA_NASCIMENTO
          return DATA_NASCIMENTO;
        case 5: // SEXO
          return SEXO;
        case 6: // LOCAL_ATENDIMENTO
          return LOCAL_ATENDIMENTO;
        case 7: // PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES
          return PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES;
        case 8: // PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES
          return PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES;
        case 9: // PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS
          return PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS;
        case 10: // UUID_FICHA
          return UUID_FICHA;
        case 11: // TP_CDS_ORIGEM
          return TP_CDS_ORIGEM;
        case 12: // CPF_CIDADAO
          return CPF_CIDADAO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATANASCIMENTO_ISSET_ID = 0;
  private static final int __SEXO_ISSET_ID = 1;
  private static final int __LOCALATENDIMENTO_ISSET_ID = 2;
  private static final int __TPCDSORIGEM_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.HEADER_TRANSPORT,_Fields.CNS_CIDADAO,_Fields.DATA_NASCIMENTO,_Fields.SEXO,_Fields.LOCAL_ATENDIMENTO,_Fields.PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES,_Fields.PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES,_Fields.PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS,_Fields.TP_CDS_ORIGEM,_Fields.CPF_CIDADAO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.HEADER_TRANSPORT, new org.apache.thrift.meta_data.FieldMetaData("headerTransport", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.CNS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cnsCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCAL_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("localAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES, new org.apache.thrift.meta_data.FieldMetaData("perguntasQuestionarioCriancasMenoresSeisMeses", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PerguntaQuestionarioCriancasMenoresSeisMesesThrift.class))));
    tmpMap.put(_Fields.PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES, new org.apache.thrift.meta_data.FieldMetaData("perguntasQuestionarioCriancasDeSeisVinteTresMeses", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift.class))));
    tmpMap.put(_Fields.PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS, new org.apache.thrift.meta_data.FieldMetaData("perguntasQuestionarioCriancasComMaisDoisAnos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PerguntaQuestionarioCriancasComMaisDoisAnosThrift.class))));
    tmpMap.put(_Fields.UUID_FICHA, new org.apache.thrift.meta_data.FieldMetaData("uuidFicha", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TP_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tpCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaConsumoAlimentarThrift.class, metaDataMap);
  }

  public FichaConsumoAlimentarThrift() {
  }

  public FichaConsumoAlimentarThrift(
    String uuidFicha)
  {
    this();
    this.uuidFicha = uuidFicha;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaConsumoAlimentarThrift(FichaConsumoAlimentarThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetHeaderTransport()) {
      this.headerTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift(other.headerTransport);
    }
    if (other.isSetCnsCidadao()) {
      this.cnsCidadao = other.cnsCidadao;
    }
    this.dataNascimento = other.dataNascimento;
    this.sexo = other.sexo;
    this.localAtendimento = other.localAtendimento;
    if (other.isSetPerguntasQuestionarioCriancasMenoresSeisMeses()) {
      List<PerguntaQuestionarioCriancasMenoresSeisMesesThrift> __this__perguntasQuestionarioCriancasMenoresSeisMeses = new ArrayList<PerguntaQuestionarioCriancasMenoresSeisMesesThrift>(other.perguntasQuestionarioCriancasMenoresSeisMeses.size());
      for (PerguntaQuestionarioCriancasMenoresSeisMesesThrift other_element : other.perguntasQuestionarioCriancasMenoresSeisMeses) {
        __this__perguntasQuestionarioCriancasMenoresSeisMeses.add(new PerguntaQuestionarioCriancasMenoresSeisMesesThrift(other_element));
      }
      this.perguntasQuestionarioCriancasMenoresSeisMeses = __this__perguntasQuestionarioCriancasMenoresSeisMeses;
    }
    if (other.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()) {
      List<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> __this__perguntasQuestionarioCriancasDeSeisVinteTresMeses = new ArrayList<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>(other.perguntasQuestionarioCriancasDeSeisVinteTresMeses.size());
      for (PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift other_element : other.perguntasQuestionarioCriancasDeSeisVinteTresMeses) {
        __this__perguntasQuestionarioCriancasDeSeisVinteTresMeses.add(new PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift(other_element));
      }
      this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = __this__perguntasQuestionarioCriancasDeSeisVinteTresMeses;
    }
    if (other.isSetPerguntasQuestionarioCriancasComMaisDoisAnos()) {
      List<PerguntaQuestionarioCriancasComMaisDoisAnosThrift> __this__perguntasQuestionarioCriancasComMaisDoisAnos = new ArrayList<PerguntaQuestionarioCriancasComMaisDoisAnosThrift>(other.perguntasQuestionarioCriancasComMaisDoisAnos.size());
      for (PerguntaQuestionarioCriancasComMaisDoisAnosThrift other_element : other.perguntasQuestionarioCriancasComMaisDoisAnos) {
        __this__perguntasQuestionarioCriancasComMaisDoisAnos.add(new PerguntaQuestionarioCriancasComMaisDoisAnosThrift(other_element));
      }
      this.perguntasQuestionarioCriancasComMaisDoisAnos = __this__perguntasQuestionarioCriancasComMaisDoisAnos;
    }
    if (other.isSetUuidFicha()) {
      this.uuidFicha = other.uuidFicha;
    }
    this.tpCdsOrigem = other.tpCdsOrigem;
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
  }

  public FichaConsumoAlimentarThrift deepCopy() {
    return new FichaConsumoAlimentarThrift(this);
  }

  @Override
  public void clear() {
    this.headerTransport = null;
    this.cnsCidadao = null;
    setDataNascimentoIsSet(false);
    this.dataNascimento = 0;
    setSexoIsSet(false);
    this.sexo = 0;
    setLocalAtendimentoIsSet(false);
    this.localAtendimento = 0;
    this.perguntasQuestionarioCriancasMenoresSeisMeses = null;
    this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = null;
    this.perguntasQuestionarioCriancasComMaisDoisAnos = null;
    this.uuidFicha = null;
    setTpCdsOrigemIsSet(false);
    this.tpCdsOrigem = 0;
    this.cpfCidadao = null;
  }

  public br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift getHeaderTransport() {
    return this.headerTransport;
  }

  public void setHeaderTransport(br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift headerTransport) {
    this.headerTransport = headerTransport;
  }

  public void unsetHeaderTransport() {
    this.headerTransport = null;
  }

  /** Returns true if field headerTransport is set (has been assigned a value) and false otherwise */
  public boolean isSetHeaderTransport() {
    return this.headerTransport != null;
  }

  public void setHeaderTransportIsSet(boolean value) {
    if (!value) {
      this.headerTransport = null;
    }
  }

  public String getCnsCidadao() {
    return this.cnsCidadao;
  }

  public void setCnsCidadao(String cnsCidadao) {
    this.cnsCidadao = cnsCidadao;
  }

  public void unsetCnsCidadao() {
    this.cnsCidadao = null;
  }

  /** Returns true if field cnsCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCidadao() {
    return this.cnsCidadao != null;
  }

  public void setCnsCidadaoIsSet(boolean value) {
    if (!value) {
      this.cnsCidadao = null;
    }
  }

  public long getDataNascimento() {
    return this.dataNascimento;
  }

  public void setDataNascimento(long dataNascimento) {
    this.dataNascimento = dataNascimento;
    setDataNascimentoIsSet(true);
  }

  public void unsetDataNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dataNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  public void setDataNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID, value);
  }

  public long getSexo() {
    return this.sexo;
  }

  public void setSexo(long sexo) {
    this.sexo = sexo;
    setSexoIsSet(true);
  }

  public void unsetSexo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  public void setSexoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXO_ISSET_ID, value);
  }

  public long getLocalAtendimento() {
    return this.localAtendimento;
  }

  public void setLocalAtendimento(long localAtendimento) {
    this.localAtendimento = localAtendimento;
    setLocalAtendimentoIsSet(true);
  }

  public void unsetLocalAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field localAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID);
  }

  public void setLocalAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCALATENDIMENTO_ISSET_ID, value);
  }

  public int getPerguntasQuestionarioCriancasMenoresSeisMesesSize() {
    return (this.perguntasQuestionarioCriancasMenoresSeisMeses == null) ? 0 : this.perguntasQuestionarioCriancasMenoresSeisMeses.size();
  }

  public java.util.Iterator<PerguntaQuestionarioCriancasMenoresSeisMesesThrift> getPerguntasQuestionarioCriancasMenoresSeisMesesIterator() {
    return (this.perguntasQuestionarioCriancasMenoresSeisMeses == null) ? null : this.perguntasQuestionarioCriancasMenoresSeisMeses.iterator();
  }

  public void addToPerguntasQuestionarioCriancasMenoresSeisMeses(PerguntaQuestionarioCriancasMenoresSeisMesesThrift elem) {
    if (this.perguntasQuestionarioCriancasMenoresSeisMeses == null) {
      this.perguntasQuestionarioCriancasMenoresSeisMeses = new ArrayList<PerguntaQuestionarioCriancasMenoresSeisMesesThrift>();
    }
    this.perguntasQuestionarioCriancasMenoresSeisMeses.add(elem);
  }

  public List<PerguntaQuestionarioCriancasMenoresSeisMesesThrift> getPerguntasQuestionarioCriancasMenoresSeisMeses() {
    return this.perguntasQuestionarioCriancasMenoresSeisMeses;
  }

  public void setPerguntasQuestionarioCriancasMenoresSeisMeses(List<PerguntaQuestionarioCriancasMenoresSeisMesesThrift> perguntasQuestionarioCriancasMenoresSeisMeses) {
    this.perguntasQuestionarioCriancasMenoresSeisMeses = perguntasQuestionarioCriancasMenoresSeisMeses;
  }

  public void unsetPerguntasQuestionarioCriancasMenoresSeisMeses() {
    this.perguntasQuestionarioCriancasMenoresSeisMeses = null;
  }

  /** Returns true if field perguntasQuestionarioCriancasMenoresSeisMeses is set (has been assigned a value) and false otherwise */
  public boolean isSetPerguntasQuestionarioCriancasMenoresSeisMeses() {
    return this.perguntasQuestionarioCriancasMenoresSeisMeses != null;
  }

  public void setPerguntasQuestionarioCriancasMenoresSeisMesesIsSet(boolean value) {
    if (!value) {
      this.perguntasQuestionarioCriancasMenoresSeisMeses = null;
    }
  }

  public int getPerguntasQuestionarioCriancasDeSeisVinteTresMesesSize() {
    return (this.perguntasQuestionarioCriancasDeSeisVinteTresMeses == null) ? 0 : this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.size();
  }

  public java.util.Iterator<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> getPerguntasQuestionarioCriancasDeSeisVinteTresMesesIterator() {
    return (this.perguntasQuestionarioCriancasDeSeisVinteTresMeses == null) ? null : this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.iterator();
  }

  public void addToPerguntasQuestionarioCriancasDeSeisVinteTresMeses(PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift elem) {
    if (this.perguntasQuestionarioCriancasDeSeisVinteTresMeses == null) {
      this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = new ArrayList<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>();
    }
    this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.add(elem);
  }

  public List<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> getPerguntasQuestionarioCriancasDeSeisVinteTresMeses() {
    return this.perguntasQuestionarioCriancasDeSeisVinteTresMeses;
  }

  public void setPerguntasQuestionarioCriancasDeSeisVinteTresMeses(List<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> perguntasQuestionarioCriancasDeSeisVinteTresMeses) {
    this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = perguntasQuestionarioCriancasDeSeisVinteTresMeses;
  }

  public void unsetPerguntasQuestionarioCriancasDeSeisVinteTresMeses() {
    this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = null;
  }

  /** Returns true if field perguntasQuestionarioCriancasDeSeisVinteTresMeses is set (has been assigned a value) and false otherwise */
  public boolean isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses() {
    return this.perguntasQuestionarioCriancasDeSeisVinteTresMeses != null;
  }

  public void setPerguntasQuestionarioCriancasDeSeisVinteTresMesesIsSet(boolean value) {
    if (!value) {
      this.perguntasQuestionarioCriancasDeSeisVinteTresMeses = null;
    }
  }

  public int getPerguntasQuestionarioCriancasComMaisDoisAnosSize() {
    return (this.perguntasQuestionarioCriancasComMaisDoisAnos == null) ? 0 : this.perguntasQuestionarioCriancasComMaisDoisAnos.size();
  }

  public java.util.Iterator<PerguntaQuestionarioCriancasComMaisDoisAnosThrift> getPerguntasQuestionarioCriancasComMaisDoisAnosIterator() {
    return (this.perguntasQuestionarioCriancasComMaisDoisAnos == null) ? null : this.perguntasQuestionarioCriancasComMaisDoisAnos.iterator();
  }

  public void addToPerguntasQuestionarioCriancasComMaisDoisAnos(PerguntaQuestionarioCriancasComMaisDoisAnosThrift elem) {
    if (this.perguntasQuestionarioCriancasComMaisDoisAnos == null) {
      this.perguntasQuestionarioCriancasComMaisDoisAnos = new ArrayList<PerguntaQuestionarioCriancasComMaisDoisAnosThrift>();
    }
    this.perguntasQuestionarioCriancasComMaisDoisAnos.add(elem);
  }

  public List<PerguntaQuestionarioCriancasComMaisDoisAnosThrift> getPerguntasQuestionarioCriancasComMaisDoisAnos() {
    return this.perguntasQuestionarioCriancasComMaisDoisAnos;
  }

  public void setPerguntasQuestionarioCriancasComMaisDoisAnos(List<PerguntaQuestionarioCriancasComMaisDoisAnosThrift> perguntasQuestionarioCriancasComMaisDoisAnos) {
    this.perguntasQuestionarioCriancasComMaisDoisAnos = perguntasQuestionarioCriancasComMaisDoisAnos;
  }

  public void unsetPerguntasQuestionarioCriancasComMaisDoisAnos() {
    this.perguntasQuestionarioCriancasComMaisDoisAnos = null;
  }

  /** Returns true if field perguntasQuestionarioCriancasComMaisDoisAnos is set (has been assigned a value) and false otherwise */
  public boolean isSetPerguntasQuestionarioCriancasComMaisDoisAnos() {
    return this.perguntasQuestionarioCriancasComMaisDoisAnos != null;
  }

  public void setPerguntasQuestionarioCriancasComMaisDoisAnosIsSet(boolean value) {
    if (!value) {
      this.perguntasQuestionarioCriancasComMaisDoisAnos = null;
    }
  }

  public String getUuidFicha() {
    return this.uuidFicha;
  }

  public void setUuidFicha(String uuidFicha) {
    this.uuidFicha = uuidFicha;
  }

  public void unsetUuidFicha() {
    this.uuidFicha = null;
  }

  /** Returns true if field uuidFicha is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFicha() {
    return this.uuidFicha != null;
  }

  public void setUuidFichaIsSet(boolean value) {
    if (!value) {
      this.uuidFicha = null;
    }
  }

  public int getTpCdsOrigem() {
    return this.tpCdsOrigem;
  }

  public void setTpCdsOrigem(int tpCdsOrigem) {
    this.tpCdsOrigem = tpCdsOrigem;
    setTpCdsOrigemIsSet(true);
  }

  public void unsetTpCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tpCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTpCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  public void setTpCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID, value);
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case HEADER_TRANSPORT:
      if (value == null) {
        unsetHeaderTransport();
      } else {
        setHeaderTransport((br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift)value);
      }
      break;

    case CNS_CIDADAO:
      if (value == null) {
        unsetCnsCidadao();
      } else {
        setCnsCidadao((String)value);
      }
      break;

    case DATA_NASCIMENTO:
      if (value == null) {
        unsetDataNascimento();
      } else {
        setDataNascimento((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((Long)value);
      }
      break;

    case LOCAL_ATENDIMENTO:
      if (value == null) {
        unsetLocalAtendimento();
      } else {
        setLocalAtendimento((Long)value);
      }
      break;

    case PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES:
      if (value == null) {
        unsetPerguntasQuestionarioCriancasMenoresSeisMeses();
      } else {
        setPerguntasQuestionarioCriancasMenoresSeisMeses((List<PerguntaQuestionarioCriancasMenoresSeisMesesThrift>)value);
      }
      break;

    case PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES:
      if (value == null) {
        unsetPerguntasQuestionarioCriancasDeSeisVinteTresMeses();
      } else {
        setPerguntasQuestionarioCriancasDeSeisVinteTresMeses((List<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>)value);
      }
      break;

    case PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS:
      if (value == null) {
        unsetPerguntasQuestionarioCriancasComMaisDoisAnos();
      } else {
        setPerguntasQuestionarioCriancasComMaisDoisAnos((List<PerguntaQuestionarioCriancasComMaisDoisAnosThrift>)value);
      }
      break;

    case UUID_FICHA:
      if (value == null) {
        unsetUuidFicha();
      } else {
        setUuidFicha((String)value);
      }
      break;

    case TP_CDS_ORIGEM:
      if (value == null) {
        unsetTpCdsOrigem();
      } else {
        setTpCdsOrigem((Integer)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case HEADER_TRANSPORT:
      return getHeaderTransport();

    case CNS_CIDADAO:
      return getCnsCidadao();

    case DATA_NASCIMENTO:
      return getDataNascimento();

    case SEXO:
      return getSexo();

    case LOCAL_ATENDIMENTO:
      return getLocalAtendimento();

    case PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES:
      return getPerguntasQuestionarioCriancasMenoresSeisMeses();

    case PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES:
      return getPerguntasQuestionarioCriancasDeSeisVinteTresMeses();

    case PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS:
      return getPerguntasQuestionarioCriancasComMaisDoisAnos();

    case UUID_FICHA:
      return getUuidFicha();

    case TP_CDS_ORIGEM:
      return getTpCdsOrigem();

    case CPF_CIDADAO:
      return getCpfCidadao();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case HEADER_TRANSPORT:
      return isSetHeaderTransport();
    case CNS_CIDADAO:
      return isSetCnsCidadao();
    case DATA_NASCIMENTO:
      return isSetDataNascimento();
    case SEXO:
      return isSetSexo();
    case LOCAL_ATENDIMENTO:
      return isSetLocalAtendimento();
    case PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES:
      return isSetPerguntasQuestionarioCriancasMenoresSeisMeses();
    case PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES:
      return isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses();
    case PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS:
      return isSetPerguntasQuestionarioCriancasComMaisDoisAnos();
    case UUID_FICHA:
      return isSetUuidFicha();
    case TP_CDS_ORIGEM:
      return isSetTpCdsOrigem();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaConsumoAlimentarThrift)
      return this.equals((FichaConsumoAlimentarThrift)that);
    return false;
  }

  public boolean equals(FichaConsumoAlimentarThrift that) {
    if (that == null)
      return false;

    boolean this_present_headerTransport = true && this.isSetHeaderTransport();
    boolean that_present_headerTransport = true && that.isSetHeaderTransport();
    if (this_present_headerTransport || that_present_headerTransport) {
      if (!(this_present_headerTransport && that_present_headerTransport))
        return false;
      if (!this.headerTransport.equals(that.headerTransport))
        return false;
    }

    boolean this_present_cnsCidadao = true && this.isSetCnsCidadao();
    boolean that_present_cnsCidadao = true && that.isSetCnsCidadao();
    if (this_present_cnsCidadao || that_present_cnsCidadao) {
      if (!(this_present_cnsCidadao && that_present_cnsCidadao))
        return false;
      if (!this.cnsCidadao.equals(that.cnsCidadao))
        return false;
    }

    boolean this_present_dataNascimento = true && this.isSetDataNascimento();
    boolean that_present_dataNascimento = true && that.isSetDataNascimento();
    if (this_present_dataNascimento || that_present_dataNascimento) {
      if (!(this_present_dataNascimento && that_present_dataNascimento))
        return false;
      if (this.dataNascimento != that.dataNascimento)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (this.sexo != that.sexo)
        return false;
    }

    boolean this_present_localAtendimento = true && this.isSetLocalAtendimento();
    boolean that_present_localAtendimento = true && that.isSetLocalAtendimento();
    if (this_present_localAtendimento || that_present_localAtendimento) {
      if (!(this_present_localAtendimento && that_present_localAtendimento))
        return false;
      if (this.localAtendimento != that.localAtendimento)
        return false;
    }

    boolean this_present_perguntasQuestionarioCriancasMenoresSeisMeses = true && this.isSetPerguntasQuestionarioCriancasMenoresSeisMeses();
    boolean that_present_perguntasQuestionarioCriancasMenoresSeisMeses = true && that.isSetPerguntasQuestionarioCriancasMenoresSeisMeses();
    if (this_present_perguntasQuestionarioCriancasMenoresSeisMeses || that_present_perguntasQuestionarioCriancasMenoresSeisMeses) {
      if (!(this_present_perguntasQuestionarioCriancasMenoresSeisMeses && that_present_perguntasQuestionarioCriancasMenoresSeisMeses))
        return false;
      if (!this.perguntasQuestionarioCriancasMenoresSeisMeses.equals(that.perguntasQuestionarioCriancasMenoresSeisMeses))
        return false;
    }

    boolean this_present_perguntasQuestionarioCriancasDeSeisVinteTresMeses = true && this.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses();
    boolean that_present_perguntasQuestionarioCriancasDeSeisVinteTresMeses = true && that.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses();
    if (this_present_perguntasQuestionarioCriancasDeSeisVinteTresMeses || that_present_perguntasQuestionarioCriancasDeSeisVinteTresMeses) {
      if (!(this_present_perguntasQuestionarioCriancasDeSeisVinteTresMeses && that_present_perguntasQuestionarioCriancasDeSeisVinteTresMeses))
        return false;
      if (!this.perguntasQuestionarioCriancasDeSeisVinteTresMeses.equals(that.perguntasQuestionarioCriancasDeSeisVinteTresMeses))
        return false;
    }

    boolean this_present_perguntasQuestionarioCriancasComMaisDoisAnos = true && this.isSetPerguntasQuestionarioCriancasComMaisDoisAnos();
    boolean that_present_perguntasQuestionarioCriancasComMaisDoisAnos = true && that.isSetPerguntasQuestionarioCriancasComMaisDoisAnos();
    if (this_present_perguntasQuestionarioCriancasComMaisDoisAnos || that_present_perguntasQuestionarioCriancasComMaisDoisAnos) {
      if (!(this_present_perguntasQuestionarioCriancasComMaisDoisAnos && that_present_perguntasQuestionarioCriancasComMaisDoisAnos))
        return false;
      if (!this.perguntasQuestionarioCriancasComMaisDoisAnos.equals(that.perguntasQuestionarioCriancasComMaisDoisAnos))
        return false;
    }

    boolean this_present_uuidFicha = true && this.isSetUuidFicha();
    boolean that_present_uuidFicha = true && that.isSetUuidFicha();
    if (this_present_uuidFicha || that_present_uuidFicha) {
      if (!(this_present_uuidFicha && that_present_uuidFicha))
        return false;
      if (!this.uuidFicha.equals(that.uuidFicha))
        return false;
    }

    boolean this_present_tpCdsOrigem = true && this.isSetTpCdsOrigem();
    boolean that_present_tpCdsOrigem = true && that.isSetTpCdsOrigem();
    if (this_present_tpCdsOrigem || that_present_tpCdsOrigem) {
      if (!(this_present_tpCdsOrigem && that_present_tpCdsOrigem))
        return false;
      if (this.tpCdsOrigem != that.tpCdsOrigem)
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_headerTransport = true && (isSetHeaderTransport());
    list.add(present_headerTransport);
    if (present_headerTransport)
      list.add(headerTransport);

    boolean present_cnsCidadao = true && (isSetCnsCidadao());
    list.add(present_cnsCidadao);
    if (present_cnsCidadao)
      list.add(cnsCidadao);

    boolean present_dataNascimento = true && (isSetDataNascimento());
    list.add(present_dataNascimento);
    if (present_dataNascimento)
      list.add(dataNascimento);

    boolean present_sexo = true && (isSetSexo());
    list.add(present_sexo);
    if (present_sexo)
      list.add(sexo);

    boolean present_localAtendimento = true && (isSetLocalAtendimento());
    list.add(present_localAtendimento);
    if (present_localAtendimento)
      list.add(localAtendimento);

    boolean present_perguntasQuestionarioCriancasMenoresSeisMeses = true && (isSetPerguntasQuestionarioCriancasMenoresSeisMeses());
    list.add(present_perguntasQuestionarioCriancasMenoresSeisMeses);
    if (present_perguntasQuestionarioCriancasMenoresSeisMeses)
      list.add(perguntasQuestionarioCriancasMenoresSeisMeses);

    boolean present_perguntasQuestionarioCriancasDeSeisVinteTresMeses = true && (isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses());
    list.add(present_perguntasQuestionarioCriancasDeSeisVinteTresMeses);
    if (present_perguntasQuestionarioCriancasDeSeisVinteTresMeses)
      list.add(perguntasQuestionarioCriancasDeSeisVinteTresMeses);

    boolean present_perguntasQuestionarioCriancasComMaisDoisAnos = true && (isSetPerguntasQuestionarioCriancasComMaisDoisAnos());
    list.add(present_perguntasQuestionarioCriancasComMaisDoisAnos);
    if (present_perguntasQuestionarioCriancasComMaisDoisAnos)
      list.add(perguntasQuestionarioCriancasComMaisDoisAnos);

    boolean present_uuidFicha = true && (isSetUuidFicha());
    list.add(present_uuidFicha);
    if (present_uuidFicha)
      list.add(uuidFicha);

    boolean present_tpCdsOrigem = true && (isSetTpCdsOrigem());
    list.add(present_tpCdsOrigem);
    if (present_tpCdsOrigem)
      list.add(tpCdsOrigem);

    boolean present_cpfCidadao = true && (isSetCpfCidadao());
    list.add(present_cpfCidadao);
    if (present_cpfCidadao)
      list.add(cpfCidadao);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaConsumoAlimentarThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetHeaderTransport()).compareTo(other.isSetHeaderTransport());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeaderTransport()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headerTransport, other.headerTransport);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCnsCidadao()).compareTo(other.isSetCnsCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCidadao, other.cnsCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimento()).compareTo(other.isSetDataNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimento, other.dataNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(other.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, other.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalAtendimento()).compareTo(other.isSetLocalAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localAtendimento, other.localAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPerguntasQuestionarioCriancasMenoresSeisMeses()).compareTo(other.isSetPerguntasQuestionarioCriancasMenoresSeisMeses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPerguntasQuestionarioCriancasMenoresSeisMeses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.perguntasQuestionarioCriancasMenoresSeisMeses, other.perguntasQuestionarioCriancasMenoresSeisMeses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()).compareTo(other.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.perguntasQuestionarioCriancasDeSeisVinteTresMeses, other.perguntasQuestionarioCriancasDeSeisVinteTresMeses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPerguntasQuestionarioCriancasComMaisDoisAnos()).compareTo(other.isSetPerguntasQuestionarioCriancasComMaisDoisAnos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPerguntasQuestionarioCriancasComMaisDoisAnos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.perguntasQuestionarioCriancasComMaisDoisAnos, other.perguntasQuestionarioCriancasComMaisDoisAnos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidFicha()).compareTo(other.isSetUuidFicha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFicha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFicha, other.uuidFicha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTpCdsOrigem()).compareTo(other.isSetTpCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTpCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tpCdsOrigem, other.tpCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(other.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, other.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaConsumoAlimentarThrift(");
    boolean first = true;

    if (isSetHeaderTransport()) {
      sb.append("headerTransport:");
      if (this.headerTransport == null) {
        sb.append("null");
      } else {
        sb.append(this.headerTransport);
      }
      first = false;
    }
    if (isSetCnsCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cnsCidadao:");
      if (this.cnsCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCidadao);
      }
      first = false;
    }
    if (isSetDataNascimento()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimento:");
      sb.append(this.dataNascimento);
      first = false;
    }
    if (isSetSexo()) {
      if (!first) sb.append(", ");
      sb.append("sexo:");
      sb.append(this.sexo);
      first = false;
    }
    if (isSetLocalAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("localAtendimento:");
      sb.append(this.localAtendimento);
      first = false;
    }
    if (isSetPerguntasQuestionarioCriancasMenoresSeisMeses()) {
      if (!first) sb.append(", ");
      sb.append("perguntasQuestionarioCriancasMenoresSeisMeses:");
      if (this.perguntasQuestionarioCriancasMenoresSeisMeses == null) {
        sb.append("null");
      } else {
        sb.append(this.perguntasQuestionarioCriancasMenoresSeisMeses);
      }
      first = false;
    }
    if (isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()) {
      if (!first) sb.append(", ");
      sb.append("perguntasQuestionarioCriancasDeSeisVinteTresMeses:");
      if (this.perguntasQuestionarioCriancasDeSeisVinteTresMeses == null) {
        sb.append("null");
      } else {
        sb.append(this.perguntasQuestionarioCriancasDeSeisVinteTresMeses);
      }
      first = false;
    }
    if (isSetPerguntasQuestionarioCriancasComMaisDoisAnos()) {
      if (!first) sb.append(", ");
      sb.append("perguntasQuestionarioCriancasComMaisDoisAnos:");
      if (this.perguntasQuestionarioCriancasComMaisDoisAnos == null) {
        sb.append("null");
      } else {
        sb.append(this.perguntasQuestionarioCriancasComMaisDoisAnos);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("uuidFicha:");
    if (this.uuidFicha == null) {
      sb.append("null");
    } else {
      sb.append(this.uuidFicha);
    }
    first = false;
    if (isSetTpCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tpCdsOrigem:");
      sb.append(this.tpCdsOrigem);
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetUuidFicha()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuidFicha' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (headerTransport != null) {
      headerTransport.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaConsumoAlimentarThriftStandardSchemeFactory implements SchemeFactory {
    public FichaConsumoAlimentarThriftStandardScheme getScheme() {
      return new FichaConsumoAlimentarThriftStandardScheme();
    }
  }

  private static class FichaConsumoAlimentarThriftStandardScheme extends StandardScheme<FichaConsumoAlimentarThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaConsumoAlimentarThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // HEADER_TRANSPORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.headerTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift();
              struct.headerTransport.read(iprot);
              struct.setHeaderTransportIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CNS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCidadao = iprot.readString();
              struct.setCnsCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DATA_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimento = iprot.readI64();
              struct.setDataNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexo = iprot.readI64();
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LOCAL_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.localAtendimento = iprot.readI64();
              struct.setLocalAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.perguntasQuestionarioCriancasMenoresSeisMeses = new ArrayList<PerguntaQuestionarioCriancasMenoresSeisMesesThrift>(_list8.size);
                PerguntaQuestionarioCriancasMenoresSeisMesesThrift _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = new PerguntaQuestionarioCriancasMenoresSeisMesesThrift();
                  _elem9.read(iprot);
                  struct.perguntasQuestionarioCriancasMenoresSeisMeses.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setPerguntasQuestionarioCriancasMenoresSeisMesesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list11 = iprot.readListBegin();
                struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses = new ArrayList<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>(_list11.size);
                PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift _elem12;
                for (int _i13 = 0; _i13 < _list11.size; ++_i13)
                {
                  _elem12 = new PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift();
                  _elem12.read(iprot);
                  struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses.add(_elem12);
                }
                iprot.readListEnd();
              }
              struct.setPerguntasQuestionarioCriancasDeSeisVinteTresMesesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list14 = iprot.readListBegin();
                struct.perguntasQuestionarioCriancasComMaisDoisAnos = new ArrayList<PerguntaQuestionarioCriancasComMaisDoisAnosThrift>(_list14.size);
                PerguntaQuestionarioCriancasComMaisDoisAnosThrift _elem15;
                for (int _i16 = 0; _i16 < _list14.size; ++_i16)
                {
                  _elem15 = new PerguntaQuestionarioCriancasComMaisDoisAnosThrift();
                  _elem15.read(iprot);
                  struct.perguntasQuestionarioCriancasComMaisDoisAnos.add(_elem15);
                }
                iprot.readListEnd();
              }
              struct.setPerguntasQuestionarioCriancasComMaisDoisAnosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UUID_FICHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFicha = iprot.readString();
              struct.setUuidFichaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TP_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tpCdsOrigem = iprot.readI32();
              struct.setTpCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaConsumoAlimentarThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.headerTransport != null) {
        if (struct.isSetHeaderTransport()) {
          oprot.writeFieldBegin(HEADER_TRANSPORT_FIELD_DESC);
          struct.headerTransport.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cnsCidadao != null) {
        if (struct.isSetCnsCidadao()) {
          oprot.writeFieldBegin(CNS_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cnsCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexo()) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI64(struct.sexo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLocalAtendimento()) {
        oprot.writeFieldBegin(LOCAL_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.localAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.perguntasQuestionarioCriancasMenoresSeisMeses != null) {
        if (struct.isSetPerguntasQuestionarioCriancasMenoresSeisMeses()) {
          oprot.writeFieldBegin(PERGUNTAS_QUESTIONARIO_CRIANCAS_MENORES_SEIS_MESES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.perguntasQuestionarioCriancasMenoresSeisMeses.size()));
            for (PerguntaQuestionarioCriancasMenoresSeisMesesThrift _iter17 : struct.perguntasQuestionarioCriancasMenoresSeisMeses)
            {
              _iter17.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses != null) {
        if (struct.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()) {
          oprot.writeFieldBegin(PERGUNTAS_QUESTIONARIO_CRIANCAS_DE_SEIS_VINTE_TRES_MESES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses.size()));
            for (PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift _iter18 : struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses)
            {
              _iter18.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.perguntasQuestionarioCriancasComMaisDoisAnos != null) {
        if (struct.isSetPerguntasQuestionarioCriancasComMaisDoisAnos()) {
          oprot.writeFieldBegin(PERGUNTAS_QUESTIONARIO_CRIANCAS_COM_MAIS_DOIS_ANOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.perguntasQuestionarioCriancasComMaisDoisAnos.size()));
            for (PerguntaQuestionarioCriancasComMaisDoisAnosThrift _iter19 : struct.perguntasQuestionarioCriancasComMaisDoisAnos)
            {
              _iter19.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.uuidFicha != null) {
        oprot.writeFieldBegin(UUID_FICHA_FIELD_DESC);
        oprot.writeString(struct.uuidFicha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeFieldBegin(TP_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tpCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaConsumoAlimentarThriftTupleSchemeFactory implements SchemeFactory {
    public FichaConsumoAlimentarThriftTupleScheme getScheme() {
      return new FichaConsumoAlimentarThriftTupleScheme();
    }
  }

  private static class FichaConsumoAlimentarThriftTupleScheme extends TupleScheme<FichaConsumoAlimentarThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaConsumoAlimentarThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.uuidFicha);
      BitSet optionals = new BitSet();
      if (struct.isSetHeaderTransport()) {
        optionals.set(0);
      }
      if (struct.isSetCnsCidadao()) {
        optionals.set(1);
      }
      if (struct.isSetDataNascimento()) {
        optionals.set(2);
      }
      if (struct.isSetSexo()) {
        optionals.set(3);
      }
      if (struct.isSetLocalAtendimento()) {
        optionals.set(4);
      }
      if (struct.isSetPerguntasQuestionarioCriancasMenoresSeisMeses()) {
        optionals.set(5);
      }
      if (struct.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()) {
        optionals.set(6);
      }
      if (struct.isSetPerguntasQuestionarioCriancasComMaisDoisAnos()) {
        optionals.set(7);
      }
      if (struct.isSetTpCdsOrigem()) {
        optionals.set(8);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetHeaderTransport()) {
        struct.headerTransport.write(oprot);
      }
      if (struct.isSetCnsCidadao()) {
        oprot.writeString(struct.cnsCidadao);
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeI64(struct.dataNascimento);
      }
      if (struct.isSetSexo()) {
        oprot.writeI64(struct.sexo);
      }
      if (struct.isSetLocalAtendimento()) {
        oprot.writeI64(struct.localAtendimento);
      }
      if (struct.isSetPerguntasQuestionarioCriancasMenoresSeisMeses()) {
        {
          oprot.writeI32(struct.perguntasQuestionarioCriancasMenoresSeisMeses.size());
          for (PerguntaQuestionarioCriancasMenoresSeisMesesThrift _iter20 : struct.perguntasQuestionarioCriancasMenoresSeisMeses)
          {
            _iter20.write(oprot);
          }
        }
      }
      if (struct.isSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses()) {
        {
          oprot.writeI32(struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses.size());
          for (PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift _iter21 : struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses)
          {
            _iter21.write(oprot);
          }
        }
      }
      if (struct.isSetPerguntasQuestionarioCriancasComMaisDoisAnos()) {
        {
          oprot.writeI32(struct.perguntasQuestionarioCriancasComMaisDoisAnos.size());
          for (PerguntaQuestionarioCriancasComMaisDoisAnosThrift _iter22 : struct.perguntasQuestionarioCriancasComMaisDoisAnos)
          {
            _iter22.write(oprot);
          }
        }
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeI32(struct.tpCdsOrigem);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaConsumoAlimentarThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.uuidFicha = iprot.readString();
      struct.setUuidFichaIsSet(true);
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.headerTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift();
        struct.headerTransport.read(iprot);
        struct.setHeaderTransportIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cnsCidadao = iprot.readString();
        struct.setCnsCidadaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dataNascimento = iprot.readI64();
        struct.setDataNascimentoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.sexo = iprot.readI64();
        struct.setSexoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.localAtendimento = iprot.readI64();
        struct.setLocalAtendimentoIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list23 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.perguntasQuestionarioCriancasMenoresSeisMeses = new ArrayList<PerguntaQuestionarioCriancasMenoresSeisMesesThrift>(_list23.size);
          PerguntaQuestionarioCriancasMenoresSeisMesesThrift _elem24;
          for (int _i25 = 0; _i25 < _list23.size; ++_i25)
          {
            _elem24 = new PerguntaQuestionarioCriancasMenoresSeisMesesThrift();
            _elem24.read(iprot);
            struct.perguntasQuestionarioCriancasMenoresSeisMeses.add(_elem24);
          }
        }
        struct.setPerguntasQuestionarioCriancasMenoresSeisMesesIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list26 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses = new ArrayList<PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>(_list26.size);
          PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift _elem27;
          for (int _i28 = 0; _i28 < _list26.size; ++_i28)
          {
            _elem27 = new PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift();
            _elem27.read(iprot);
            struct.perguntasQuestionarioCriancasDeSeisVinteTresMeses.add(_elem27);
          }
        }
        struct.setPerguntasQuestionarioCriancasDeSeisVinteTresMesesIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list29 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.perguntasQuestionarioCriancasComMaisDoisAnos = new ArrayList<PerguntaQuestionarioCriancasComMaisDoisAnosThrift>(_list29.size);
          PerguntaQuestionarioCriancasComMaisDoisAnosThrift _elem30;
          for (int _i31 = 0; _i31 < _list29.size; ++_i31)
          {
            _elem30 = new PerguntaQuestionarioCriancasComMaisDoisAnosThrift();
            _elem30.read(iprot);
            struct.perguntasQuestionarioCriancasComMaisDoisAnos.add(_elem30);
          }
        }
        struct.setPerguntasQuestionarioCriancasComMaisDoisAnosIsSet(true);
      }
      if (incoming.get(8)) {
        struct.tpCdsOrigem = iprot.readI32();
        struct.setTpCdsOrigemIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
    }
  }

}

